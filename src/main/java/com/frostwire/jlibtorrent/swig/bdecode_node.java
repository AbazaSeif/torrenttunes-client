/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class bdecode_node {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected bdecode_node(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(bdecode_node obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_bdecode_node(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public bdecode_node() {
    this(libtorrent_jni.new_bdecode_node__SWIG_0(), true);
  }

  public bdecode_node(bdecode_node arg0) {
    this(libtorrent_jni.new_bdecode_node__SWIG_1(bdecode_node.getCPtr(arg0), arg0), true);
  }

  public bdecode_node.type_t type() {
    return bdecode_node.type_t.swigToEnum(libtorrent_jni.bdecode_node_type(swigCPtr, this));
  }

  public boolean is_none_t() {
    return libtorrent_jni.bdecode_node_is_none_t(swigCPtr, this);
  }

  public bdecode_node non_owning() {
    return new bdecode_node(libtorrent_jni.bdecode_node_non_owning(swigCPtr, this), true);
  }

  public char_const_ptr_int_pair data_section() {
    return new char_const_ptr_int_pair(libtorrent_jni.bdecode_node_data_section(swigCPtr, this), true);
  }

  public String list_string_value_at(int i, String default_val) {
    return libtorrent_jni.bdecode_node_list_string_value_at__SWIG_0(swigCPtr, this, i, default_val);
  }

  public String list_string_value_at(int i) {
    return libtorrent_jni.bdecode_node_list_string_value_at__SWIG_1(swigCPtr, this, i);
  }

  public long list_int_value_at(int i, long default_val) {
    return libtorrent_jni.bdecode_node_list_int_value_at__SWIG_0(swigCPtr, this, i, default_val);
  }

  public long list_int_value_at(int i) {
    return libtorrent_jni.bdecode_node_list_int_value_at__SWIG_1(swigCPtr, this, i);
  }

  public int list_size() {
    return libtorrent_jni.bdecode_node_list_size(swigCPtr, this);
  }

  public bdecode_node dict_find(String key) {
    return new bdecode_node(libtorrent_jni.bdecode_node_dict_find(swigCPtr, this, key), true);
  }

  public string_bdecode_node_pair dict_at(int i) {
    return new string_bdecode_node_pair(libtorrent_jni.bdecode_node_dict_at(swigCPtr, this, i), true);
  }

  public bdecode_node dict_find_dict(String key) {
    return new bdecode_node(libtorrent_jni.bdecode_node_dict_find_dict(swigCPtr, this, key), true);
  }

  public bdecode_node dict_find_list(String key) {
    return new bdecode_node(libtorrent_jni.bdecode_node_dict_find_list(swigCPtr, this, key), true);
  }

  public bdecode_node dict_find_string(String key) {
    return new bdecode_node(libtorrent_jni.bdecode_node_dict_find_string(swigCPtr, this, key), true);
  }

  public bdecode_node dict_find_int(String key) {
    return new bdecode_node(libtorrent_jni.bdecode_node_dict_find_int(swigCPtr, this, key), true);
  }

  public String dict_find_string_value(String key, String default_value) {
    return libtorrent_jni.bdecode_node_dict_find_string_value__SWIG_0(swigCPtr, this, key, default_value);
  }

  public String dict_find_string_value(String key) {
    return libtorrent_jni.bdecode_node_dict_find_string_value__SWIG_1(swigCPtr, this, key);
  }

  public long dict_find_int_value(String key, long default_val) {
    return libtorrent_jni.bdecode_node_dict_find_int_value__SWIG_0(swigCPtr, this, key, default_val);
  }

  public long dict_find_int_value(String key) {
    return libtorrent_jni.bdecode_node_dict_find_int_value__SWIG_1(swigCPtr, this, key);
  }

  public int dict_size() {
    return libtorrent_jni.bdecode_node_dict_size(swigCPtr, this);
  }

  public long int_value() {
    return libtorrent_jni.bdecode_node_int_value(swigCPtr, this);
  }

  public String string_value() {
    return libtorrent_jni.bdecode_node_string_value(swigCPtr, this);
  }

  public String string_ptr() {
    return libtorrent_jni.bdecode_node_string_ptr(swigCPtr, this);
  }

  public int string_length() {
    return libtorrent_jni.bdecode_node_string_length(swigCPtr, this);
  }

  public void clear() {
    libtorrent_jni.bdecode_node_clear(swigCPtr, this);
  }

  public void swap(bdecode_node n) {
    libtorrent_jni.bdecode_node_swap(swigCPtr, this, bdecode_node.getCPtr(n), n);
  }

  public void reserve(int tokens) {
    libtorrent_jni.bdecode_node_reserve(swigCPtr, this, tokens);
  }

  public void switch_underlying_buffer(String buf) {
    libtorrent_jni.bdecode_node_switch_underlying_buffer(swigCPtr, this, buf);
  }

  public static int bdecode(char_vector buffer, bdecode_node ret, error_code ec) {
    return libtorrent_jni.bdecode_node_bdecode(char_vector.getCPtr(buffer), buffer, bdecode_node.getCPtr(ret), ret, error_code.getCPtr(ec), ec);
  }

  public enum type_t {
    none_t,
    dict_t,
    list_t,
    string_t,
    int_t;

    public final int swigValue() {
      return swigValue;
    }

    public static type_t swigToEnum(int swigValue) {
      type_t[] swigValues = type_t.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (type_t swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + type_t.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private type_t() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private type_t(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private type_t(type_t swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
