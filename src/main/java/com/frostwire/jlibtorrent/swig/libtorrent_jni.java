/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

import com.torrenttunes.client.tools.DataSources;

public class libtorrent_jni {

    static {
        try {
//            System.loadLibrary("jlibtorrent");
        	System.load(DataSources.LIBTORRENT_OS_LIBRARY_PATH());
        } catch (UnsatisfiedLinkError e) {
            throw new UnsatisfiedLinkError("Look for your architecture binary at: https://github.com/frostwire/frostwire-jlibtorrent/tree/master/binaries");
        }
    }

  public final static native int hundredth_get();
  public final static native long new_posix_time_duration__SWIG_0();
  public final static native long new_posix_time_duration__SWIG_1(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long new_posix_time_duration__SWIG_2(long jarg1, posix_time_duration jarg1_);
  public final static native long new_posix_time_duration__SWIG_3(int jarg1);
  public final static native long posix_time_duration_unit();
  public final static native long posix_time_duration_ticks_per_second();
  public final static native int posix_time_duration_resolution();
  public final static native long posix_time_duration_hours(long jarg1, posix_time_duration jarg1_);
  public final static native long posix_time_duration_minutes(long jarg1, posix_time_duration jarg1_);
  public final static native long posix_time_duration_seconds(long jarg1, posix_time_duration jarg1_);
  public final static native long posix_time_duration_total_seconds(long jarg1, posix_time_duration jarg1_);
  public final static native long posix_time_duration_total_milliseconds(long jarg1, posix_time_duration jarg1_);
  public final static native long posix_time_duration_total_nanoseconds(long jarg1, posix_time_duration jarg1_);
  public final static native long posix_time_duration_total_microseconds(long jarg1, posix_time_duration jarg1_);
  public final static native long posix_time_duration_fractional_seconds(long jarg1, posix_time_duration jarg1_);
  public final static native int posix_time_duration_num_fractional_digits();
  public final static native boolean posix_time_duration_is_negative(long jarg1, posix_time_duration jarg1_);
  public final static native long posix_time_duration_ticks(long jarg1, posix_time_duration jarg1_);
  public final static native boolean posix_time_duration_is_special(long jarg1, posix_time_duration jarg1_);
  public final static native boolean posix_time_duration_is_pos_infinity(long jarg1, posix_time_duration jarg1_);
  public final static native boolean posix_time_duration_is_neg_infinity(long jarg1, posix_time_duration jarg1_);
  public final static native boolean posix_time_duration_is_not_a_date_time(long jarg1, posix_time_duration jarg1_);
  public final static native void delete_posix_time_duration(long jarg1);
  public final static native long new_address__SWIG_0();
  public final static native long new_address__SWIG_1(long jarg1, address_v4 jarg1_);
  public final static native long new_address__SWIG_2(long jarg1, address_v6 jarg1_);
  public final static native long new_address__SWIG_3(long jarg1, address jarg1_);
  public final static native boolean address_is_v4(long jarg1, address jarg1_);
  public final static native boolean address_is_v6(long jarg1, address jarg1_);
  public final static native long address_to_v4(long jarg1, address jarg1_);
  public final static native long address_to_v6(long jarg1, address jarg1_);
  public final static native String address_to_string__SWIG_0(long jarg1, address jarg1_);
  public final static native String address_to_string__SWIG_1(long jarg1, address jarg1_, long jarg2, error_code jarg2_);
  public final static native long address_from_string__SWIG_0(String jarg1);
  public final static native long address_from_string__SWIG_1(String jarg1, long jarg2, error_code jarg2_);
  public final static native boolean address_is_loopback(long jarg1, address jarg1_);
  public final static native boolean address_is_unspecified(long jarg1, address jarg1_);
  public final static native boolean address_is_multicast(long jarg1, address jarg1_);
  public final static native void delete_address(long jarg1);
  public final static native long new_address_v4__SWIG_0();
  public final static native long new_address_v4__SWIG_1(long jarg1);
  public final static native long new_address_v4__SWIG_2(long jarg1, address_v4 jarg1_);
  public final static native long address_v4_to_ulong(long jarg1, address_v4 jarg1_);
  public final static native String address_v4_to_string__SWIG_0(long jarg1, address_v4 jarg1_);
  public final static native String address_v4_to_string__SWIG_1(long jarg1, address_v4 jarg1_, long jarg2, error_code jarg2_);
  public final static native long address_v4_from_string__SWIG_0(String jarg1);
  public final static native long address_v4_from_string__SWIG_1(String jarg1, long jarg2, error_code jarg2_);
  public final static native boolean address_v4_is_loopback(long jarg1, address_v4 jarg1_);
  public final static native boolean address_v4_is_unspecified(long jarg1, address_v4 jarg1_);
  public final static native boolean address_v4_is_class_a(long jarg1, address_v4 jarg1_);
  public final static native boolean address_v4_is_class_b(long jarg1, address_v4 jarg1_);
  public final static native boolean address_v4_is_class_c(long jarg1, address_v4 jarg1_);
  public final static native boolean address_v4_is_multicast(long jarg1, address_v4 jarg1_);
  public final static native long address_v4_any();
  public final static native long address_v4_loopback();
  public final static native long address_v4_broadcast__SWIG_0();
  public final static native long address_v4_broadcast__SWIG_1(long jarg1, address_v4 jarg1_, long jarg2, address_v4 jarg2_);
  public final static native long address_v4_netmask(long jarg1, address_v4 jarg1_);
  public final static native void delete_address_v4(long jarg1);
  public final static native long new_address_v6__SWIG_0();
  public final static native long new_address_v6__SWIG_1(long jarg1, address_v6 jarg1_);
  public final static native long address_v6_scope_id__SWIG_0(long jarg1, address_v6 jarg1_);
  public final static native void address_v6_scope_id__SWIG_1(long jarg1, address_v6 jarg1_, long jarg2);
  public final static native String address_v6_to_string__SWIG_0(long jarg1, address_v6 jarg1_);
  public final static native String address_v6_to_string__SWIG_1(long jarg1, address_v6 jarg1_, long jarg2, error_code jarg2_);
  public final static native long address_v6_from_string__SWIG_0(String jarg1);
  public final static native long address_v6_from_string__SWIG_1(String jarg1, long jarg2, error_code jarg2_);
  public final static native long address_v6_to_v4(long jarg1, address_v6 jarg1_);
  public final static native boolean address_v6_is_loopback(long jarg1, address_v6 jarg1_);
  public final static native boolean address_v6_is_unspecified(long jarg1, address_v6 jarg1_);
  public final static native boolean address_v6_is_link_local(long jarg1, address_v6 jarg1_);
  public final static native boolean address_v6_is_site_local(long jarg1, address_v6 jarg1_);
  public final static native boolean address_v6_is_v4_mapped(long jarg1, address_v6 jarg1_);
  public final static native boolean address_v6_is_v4_compatible(long jarg1, address_v6 jarg1_);
  public final static native boolean address_v6_is_multicast(long jarg1, address_v6 jarg1_);
  public final static native boolean address_v6_is_multicast_global(long jarg1, address_v6 jarg1_);
  public final static native boolean address_v6_is_multicast_link_local(long jarg1, address_v6 jarg1_);
  public final static native boolean address_v6_is_multicast_node_local(long jarg1, address_v6 jarg1_);
  public final static native boolean address_v6_is_multicast_org_local(long jarg1, address_v6 jarg1_);
  public final static native boolean address_v6_is_multicast_site_local(long jarg1, address_v6 jarg1_);
  public final static native long address_v6_any();
  public final static native long address_v6_loopback();
  public final static native long address_v6_v4_mapped(long jarg1, address_v4 jarg1_);
  public final static native long address_v6_v4_compatible(long jarg1, address_v4 jarg1_);
  public final static native void delete_address_v6(long jarg1);
  public final static native long new_high_resolution_clock_time_point();
  public final static native void delete_high_resolution_clock_time_point(long jarg1);
  public final static native long new_high_resolution_clock_duration();
  public final static native void delete_high_resolution_clock_duration(long jarg1);
  public final static native long new_high_resolution_clock();
  public final static native void delete_high_resolution_clock(long jarg1);
  public final static native int tcp_endpoint_port(long jarg1, tcp_endpoint jarg1_);
  public final static native String tcp_endpoint_address(long jarg1, tcp_endpoint jarg1_);
  public final static native long new_tcp_endpoint();
  public final static native void delete_tcp_endpoint(long jarg1);
  public final static native int udp_endpoint_port(long jarg1, udp_endpoint jarg1_);
  public final static native String udp_endpoint_address(long jarg1, udp_endpoint jarg1_);
  public final static native long new_udp_endpoint();
  public final static native void delete_udp_endpoint(long jarg1);
  public final static native long to_seconds(long jarg1);
  public final static native long to_milliseconds(long jarg1);
  public final static native long to_microseconds(long jarg1);
  public final static native long to_minutes(long jarg1);
  public final static native long to_hours(long jarg1);
  public final static native void delete_swig_plugin(long jarg1);
  public final static native long swig_plugin_new_torrent(long jarg1, swig_plugin jarg1_, long jarg2, torrent jarg2_);
  public final static native long swig_plugin_new_torrentSwigExplicitswig_plugin(long jarg1, swig_plugin jarg1_, long jarg2, torrent jarg2_);
  public final static native void swig_plugin_added(long jarg1, swig_plugin jarg1_);
  public final static native void swig_plugin_addedSwigExplicitswig_plugin(long jarg1, swig_plugin jarg1_);
  public final static native void swig_plugin_on_alert(long jarg1, swig_plugin jarg1_, long jarg2, alert jarg2_);
  public final static native void swig_plugin_on_alertSwigExplicitswig_plugin(long jarg1, swig_plugin jarg1_, long jarg2, alert jarg2_);
  public final static native boolean swig_plugin_on_unknown_torrent(long jarg1, swig_plugin jarg1_, long jarg2, sha1_hash jarg2_, long jarg3, peer_connection_handle jarg3_, long jarg4, add_torrent_params jarg4_);
  public final static native boolean swig_plugin_on_unknown_torrentSwigExplicitswig_plugin(long jarg1, swig_plugin jarg1_, long jarg2, sha1_hash jarg2_, long jarg3, peer_connection_handle jarg3_, long jarg4, add_torrent_params jarg4_);
  public final static native void swig_plugin_on_tick(long jarg1, swig_plugin jarg1_);
  public final static native void swig_plugin_on_tickSwigExplicitswig_plugin(long jarg1, swig_plugin jarg1_);
  public final static native boolean swig_plugin_on_optimistic_unchoke(long jarg1, swig_plugin jarg1_, long jarg2, torrent_peer_ptr_vector jarg2_);
  public final static native boolean swig_plugin_on_optimistic_unchokeSwigExplicitswig_plugin(long jarg1, swig_plugin jarg1_, long jarg2, torrent_peer_ptr_vector jarg2_);
  public final static native void swig_plugin_save_state(long jarg1, swig_plugin jarg1_, long jarg2, entry jarg2_);
  public final static native void swig_plugin_save_stateSwigExplicitswig_plugin(long jarg1, swig_plugin jarg1_, long jarg2, entry jarg2_);
  public final static native void swig_plugin_load_state(long jarg1, swig_plugin jarg1_, long jarg2, bdecode_node jarg2_);
  public final static native void swig_plugin_load_stateSwigExplicitswig_plugin(long jarg1, swig_plugin jarg1_, long jarg2, bdecode_node jarg2_);
  public final static native long new_swig_plugin();
  public final static native void swig_plugin_director_connect(swig_plugin obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void swig_plugin_change_ownership(swig_plugin obj, long cptr, boolean take_or_release);
  public final static native void delete_swig_torrent_plugin(long jarg1);
  public final static native long swig_torrent_plugin_new_peer_connection(long jarg1, swig_torrent_plugin jarg1_, long jarg2, peer_connection jarg2_);
  public final static native long swig_torrent_plugin_new_peer_connectionSwigExplicitswig_torrent_plugin(long jarg1, swig_torrent_plugin jarg1_, long jarg2, peer_connection jarg2_);
  public final static native long swig_torrent_plugin_new_bt_peer_connection(long jarg1, swig_torrent_plugin jarg1_, long jarg2, bt_peer_connection jarg2_);
  public final static native long swig_torrent_plugin_new_bt_peer_connectionSwigExplicitswig_torrent_plugin(long jarg1, swig_torrent_plugin jarg1_, long jarg2, bt_peer_connection jarg2_);
  public final static native long swig_torrent_plugin_new_web_peer_connection(long jarg1, swig_torrent_plugin jarg1_, long jarg2, web_peer_connection jarg2_);
  public final static native long swig_torrent_plugin_new_web_peer_connectionSwigExplicitswig_torrent_plugin(long jarg1, swig_torrent_plugin jarg1_, long jarg2, web_peer_connection jarg2_);
  public final static native long swig_torrent_plugin_new_http_seed_connection(long jarg1, swig_torrent_plugin jarg1_, long jarg2, http_seed_connection jarg2_);
  public final static native long swig_torrent_plugin_new_http_seed_connectionSwigExplicitswig_torrent_plugin(long jarg1, swig_torrent_plugin jarg1_, long jarg2, http_seed_connection jarg2_);
  public final static native void swig_torrent_plugin_on_piece_pass(long jarg1, swig_torrent_plugin jarg1_, int jarg2);
  public final static native void swig_torrent_plugin_on_piece_passSwigExplicitswig_torrent_plugin(long jarg1, swig_torrent_plugin jarg1_, int jarg2);
  public final static native void swig_torrent_plugin_on_piece_failed(long jarg1, swig_torrent_plugin jarg1_, int jarg2);
  public final static native void swig_torrent_plugin_on_piece_failedSwigExplicitswig_torrent_plugin(long jarg1, swig_torrent_plugin jarg1_, int jarg2);
  public final static native void swig_torrent_plugin_tick(long jarg1, swig_torrent_plugin jarg1_);
  public final static native void swig_torrent_plugin_tickSwigExplicitswig_torrent_plugin(long jarg1, swig_torrent_plugin jarg1_);
  public final static native boolean swig_torrent_plugin_on_pause(long jarg1, swig_torrent_plugin jarg1_);
  public final static native boolean swig_torrent_plugin_on_pauseSwigExplicitswig_torrent_plugin(long jarg1, swig_torrent_plugin jarg1_);
  public final static native boolean swig_torrent_plugin_on_resume(long jarg1, swig_torrent_plugin jarg1_);
  public final static native boolean swig_torrent_plugin_on_resumeSwigExplicitswig_torrent_plugin(long jarg1, swig_torrent_plugin jarg1_);
  public final static native void swig_torrent_plugin_on_files_checked(long jarg1, swig_torrent_plugin jarg1_);
  public final static native void swig_torrent_plugin_on_files_checkedSwigExplicitswig_torrent_plugin(long jarg1, swig_torrent_plugin jarg1_);
  public final static native void swig_torrent_plugin_on_state(long jarg1, swig_torrent_plugin jarg1_, int jarg2);
  public final static native void swig_torrent_plugin_on_stateSwigExplicitswig_torrent_plugin(long jarg1, swig_torrent_plugin jarg1_, int jarg2);
  public final static native void swig_torrent_plugin_on_unload(long jarg1, swig_torrent_plugin jarg1_);
  public final static native void swig_torrent_plugin_on_unloadSwigExplicitswig_torrent_plugin(long jarg1, swig_torrent_plugin jarg1_);
  public final static native void swig_torrent_plugin_on_load(long jarg1, swig_torrent_plugin jarg1_);
  public final static native void swig_torrent_plugin_on_loadSwigExplicitswig_torrent_plugin(long jarg1, swig_torrent_plugin jarg1_);
  public final static native void swig_torrent_plugin_on_add_peer(long jarg1, swig_torrent_plugin jarg1_, long jarg2, tcp_endpoint jarg2_, int jarg3, int jarg4);
  public final static native void swig_torrent_plugin_on_add_peerSwigExplicitswig_torrent_plugin(long jarg1, swig_torrent_plugin jarg1_, long jarg2, tcp_endpoint jarg2_, int jarg3, int jarg4);
  public final static native long new_swig_torrent_plugin();
  public final static native void swig_torrent_plugin_director_connect(swig_torrent_plugin obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void swig_torrent_plugin_change_ownership(swig_torrent_plugin obj, long cptr, boolean take_or_release);
  public final static native void delete_swig_peer_plugin(long jarg1);
  public final static native String swig_peer_plugin_type(long jarg1, swig_peer_plugin jarg1_);
  public final static native String swig_peer_plugin_typeSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_);
  public final static native void swig_peer_plugin_add_handshake(long jarg1, swig_peer_plugin jarg1_, long jarg2, entry jarg2_);
  public final static native void swig_peer_plugin_add_handshakeSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, long jarg2, entry jarg2_);
  public final static native void swig_peer_plugin_on_disconnect(long jarg1, swig_peer_plugin jarg1_, long jarg2, error_code jarg2_);
  public final static native void swig_peer_plugin_on_disconnectSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, long jarg2, error_code jarg2_);
  public final static native void swig_peer_plugin_on_connected(long jarg1, swig_peer_plugin jarg1_);
  public final static native void swig_peer_plugin_on_connectedSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_);
  public final static native boolean swig_peer_plugin_on_handshake(long jarg1, swig_peer_plugin jarg1_, String jarg2);
  public final static native boolean swig_peer_plugin_on_handshakeSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, String jarg2);
  public final static native boolean swig_peer_plugin_on_extension_handshake(long jarg1, swig_peer_plugin jarg1_, long jarg2, bdecode_node jarg2_);
  public final static native boolean swig_peer_plugin_on_extension_handshakeSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, long jarg2, bdecode_node jarg2_);
  public final static native boolean swig_peer_plugin_on_choke(long jarg1, swig_peer_plugin jarg1_);
  public final static native boolean swig_peer_plugin_on_chokeSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_);
  public final static native boolean swig_peer_plugin_on_unchoke(long jarg1, swig_peer_plugin jarg1_);
  public final static native boolean swig_peer_plugin_on_unchokeSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_);
  public final static native boolean swig_peer_plugin_on_interested(long jarg1, swig_peer_plugin jarg1_);
  public final static native boolean swig_peer_plugin_on_interestedSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_);
  public final static native boolean swig_peer_plugin_on_not_interested(long jarg1, swig_peer_plugin jarg1_);
  public final static native boolean swig_peer_plugin_on_not_interestedSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_);
  public final static native boolean swig_peer_plugin_on_have(long jarg1, swig_peer_plugin jarg1_, int jarg2);
  public final static native boolean swig_peer_plugin_on_haveSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, int jarg2);
  public final static native boolean swig_peer_plugin_on_dont_have(long jarg1, swig_peer_plugin jarg1_, int jarg2);
  public final static native boolean swig_peer_plugin_on_dont_haveSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, int jarg2);
  public final static native boolean swig_peer_plugin_on_bitfield(long jarg1, swig_peer_plugin jarg1_, long jarg2, bitfield jarg2_);
  public final static native boolean swig_peer_plugin_on_bitfieldSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, long jarg2, bitfield jarg2_);
  public final static native boolean swig_peer_plugin_on_have_all(long jarg1, swig_peer_plugin jarg1_);
  public final static native boolean swig_peer_plugin_on_have_allSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_);
  public final static native boolean swig_peer_plugin_on_have_none(long jarg1, swig_peer_plugin jarg1_);
  public final static native boolean swig_peer_plugin_on_have_noneSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_);
  public final static native boolean swig_peer_plugin_on_allowed_fast(long jarg1, swig_peer_plugin jarg1_, int jarg2);
  public final static native boolean swig_peer_plugin_on_allowed_fastSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, int jarg2);
  public final static native boolean swig_peer_plugin_on_request(long jarg1, swig_peer_plugin jarg1_, long jarg2, peer_request jarg2_);
  public final static native boolean swig_peer_plugin_on_requestSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, long jarg2, peer_request jarg2_);
  public final static native boolean swig_peer_plugin_on_piece(long jarg1, swig_peer_plugin jarg1_, long jarg2, peer_request jarg2_, long jarg3, disk_buffer_holder jarg3_);
  public final static native boolean swig_peer_plugin_on_pieceSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, long jarg2, peer_request jarg2_, long jarg3, disk_buffer_holder jarg3_);
  public final static native boolean swig_peer_plugin_on_cancel(long jarg1, swig_peer_plugin jarg1_, long jarg2, peer_request jarg2_);
  public final static native boolean swig_peer_plugin_on_cancelSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, long jarg2, peer_request jarg2_);
  public final static native boolean swig_peer_plugin_on_reject(long jarg1, swig_peer_plugin jarg1_, long jarg2, peer_request jarg2_);
  public final static native boolean swig_peer_plugin_on_rejectSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, long jarg2, peer_request jarg2_);
  public final static native boolean swig_peer_plugin_on_suggest(long jarg1, swig_peer_plugin jarg1_, int jarg2);
  public final static native boolean swig_peer_plugin_on_suggestSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, int jarg2);
  public final static native void swig_peer_plugin_sent_unchoke(long jarg1, swig_peer_plugin jarg1_);
  public final static native void swig_peer_plugin_sent_unchokeSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_);
  public final static native void swig_peer_plugin_sent_payload(long jarg1, swig_peer_plugin jarg1_, int jarg2);
  public final static native void swig_peer_plugin_sent_payloadSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, int jarg2);
  public final static native boolean swig_peer_plugin_can_disconnect(long jarg1, swig_peer_plugin jarg1_, long jarg2, error_code jarg2_);
  public final static native boolean swig_peer_plugin_can_disconnectSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, long jarg2, error_code jarg2_);
  public final static native void swig_peer_plugin_on_piece_pass(long jarg1, swig_peer_plugin jarg1_, int jarg2);
  public final static native void swig_peer_plugin_on_piece_passSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, int jarg2);
  public final static native void swig_peer_plugin_on_piece_failed(long jarg1, swig_peer_plugin jarg1_, int jarg2);
  public final static native void swig_peer_plugin_on_piece_failedSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, int jarg2);
  public final static native void swig_peer_plugin_tick(long jarg1, swig_peer_plugin jarg1_);
  public final static native void swig_peer_plugin_tickSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_);
  public final static native boolean swig_peer_plugin_write_request(long jarg1, swig_peer_plugin jarg1_, long jarg2, peer_request jarg2_);
  public final static native boolean swig_peer_plugin_write_requestSwigExplicitswig_peer_plugin(long jarg1, swig_peer_plugin jarg1_, long jarg2, peer_request jarg2_);
  public final static native long new_swig_peer_plugin();
  public final static native void swig_peer_plugin_director_connect(swig_peer_plugin obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void swig_peer_plugin_change_ownership(swig_peer_plugin obj, long cptr, boolean take_or_release);
  public final static native long new_char_const_ptr_int_pair__SWIG_0();
  public final static native long new_char_const_ptr_int_pair__SWIG_1(String jarg1, int jarg2);
  public final static native long new_char_const_ptr_int_pair__SWIG_2(long jarg1, char_const_ptr_int_pair jarg1_);
  public final static native void char_const_ptr_int_pair_first_set(long jarg1, char_const_ptr_int_pair jarg1_, String jarg2);
  public final static native String char_const_ptr_int_pair_first_get(long jarg1, char_const_ptr_int_pair jarg1_);
  public final static native void char_const_ptr_int_pair_second_set(long jarg1, char_const_ptr_int_pair jarg1_, int jarg2);
  public final static native int char_const_ptr_int_pair_second_get(long jarg1, char_const_ptr_int_pair jarg1_);
  public final static native void delete_char_const_ptr_int_pair(long jarg1);
  public final static native long new_int_int_pair__SWIG_0();
  public final static native long new_int_int_pair__SWIG_1(int jarg1, int jarg2);
  public final static native long new_int_int_pair__SWIG_2(long jarg1, int_int_pair jarg1_);
  public final static native void int_int_pair_first_set(long jarg1, int_int_pair jarg1_, int jarg2);
  public final static native int int_int_pair_first_get(long jarg1, int_int_pair jarg1_);
  public final static native void int_int_pair_second_set(long jarg1, int_int_pair jarg1_, int jarg2);
  public final static native int int_int_pair_second_get(long jarg1, int_int_pair jarg1_);
  public final static native void delete_int_int_pair(long jarg1);
  public final static native long new_string_int_pair__SWIG_0();
  public final static native long new_string_int_pair__SWIG_1(String jarg1, int jarg2);
  public final static native long new_string_int_pair__SWIG_2(long jarg1, string_int_pair jarg1_);
  public final static native void string_int_pair_first_set(long jarg1, string_int_pair jarg1_, String jarg2);
  public final static native String string_int_pair_first_get(long jarg1, string_int_pair jarg1_);
  public final static native void string_int_pair_second_set(long jarg1, string_int_pair jarg1_, int jarg2);
  public final static native int string_int_pair_second_get(long jarg1, string_int_pair jarg1_);
  public final static native void delete_string_int_pair(long jarg1);
  public final static native long new_string_string_pair__SWIG_0();
  public final static native long new_string_string_pair__SWIG_1(String jarg1, String jarg2);
  public final static native long new_string_string_pair__SWIG_2(long jarg1, string_string_pair jarg1_);
  public final static native void string_string_pair_first_set(long jarg1, string_string_pair jarg1_, String jarg2);
  public final static native String string_string_pair_first_get(long jarg1, string_string_pair jarg1_);
  public final static native void string_string_pair_second_set(long jarg1, string_string_pair jarg1_, String jarg2);
  public final static native String string_string_pair_second_get(long jarg1, string_string_pair jarg1_);
  public final static native void delete_string_string_pair(long jarg1);
  public final static native long new_long_long_long_2_pair__SWIG_0();
  public final static native long new_long_long_long_2_pair__SWIG_1(long jarg1, int jarg2);
  public final static native long new_long_long_long_2_pair__SWIG_2(long jarg1, long_long_long_2_pair jarg1_);
  public final static native void long_long_long_2_pair_first_set(long jarg1, long_long_long_2_pair jarg1_, long jarg2);
  public final static native long long_long_long_2_pair_first_get(long jarg1, long_long_long_2_pair jarg1_);
  public final static native void long_long_long_2_pair_second_set(long jarg1, long_long_long_2_pair jarg1_, int jarg2);
  public final static native int long_long_long_2_pair_second_get(long jarg1, long_long_long_2_pair jarg1_);
  public final static native void delete_long_long_long_2_pair(long jarg1);
  public final static native long new_string_bdecode_node_pair__SWIG_0();
  public final static native long new_string_bdecode_node_pair__SWIG_1(String jarg1, long jarg2, bdecode_node jarg2_);
  public final static native long new_string_bdecode_node_pair__SWIG_2(long jarg1, string_bdecode_node_pair jarg1_);
  public final static native void string_bdecode_node_pair_first_set(long jarg1, string_bdecode_node_pair jarg1_, String jarg2);
  public final static native String string_bdecode_node_pair_first_get(long jarg1, string_bdecode_node_pair jarg1_);
  public final static native void string_bdecode_node_pair_second_set(long jarg1, string_bdecode_node_pair jarg1_, long jarg2, bdecode_node jarg2_);
  public final static native long string_bdecode_node_pair_second_get(long jarg1, string_bdecode_node_pair jarg1_);
  public final static native void delete_string_bdecode_node_pair(long jarg1);
  public final static native long new_string_vector();
  public final static native long string_vector_size(long jarg1, string_vector jarg1_);
  public final static native long string_vector_capacity(long jarg1, string_vector jarg1_);
  public final static native void string_vector_reserve(long jarg1, string_vector jarg1_, long jarg2);
  public final static native boolean string_vector_isEmpty(long jarg1, string_vector jarg1_);
  public final static native void string_vector_clear(long jarg1, string_vector jarg1_);
  public final static native void string_vector_add(long jarg1, string_vector jarg1_, String jarg2);
  public final static native String string_vector_get(long jarg1, string_vector jarg1_, int jarg2);
  public final static native void string_vector_set(long jarg1, string_vector jarg1_, int jarg2, String jarg3);
  public final static native void delete_string_vector(long jarg1);
  public final static native long new_char_vector();
  public final static native long char_vector_size(long jarg1, char_vector jarg1_);
  public final static native long char_vector_capacity(long jarg1, char_vector jarg1_);
  public final static native void char_vector_reserve(long jarg1, char_vector jarg1_, long jarg2);
  public final static native boolean char_vector_isEmpty(long jarg1, char_vector jarg1_);
  public final static native void char_vector_clear(long jarg1, char_vector jarg1_);
  public final static native void char_vector_add(long jarg1, char_vector jarg1_, char jarg2);
  public final static native char char_vector_get(long jarg1, char_vector jarg1_, int jarg2);
  public final static native void char_vector_set(long jarg1, char_vector jarg1_, int jarg2, char jarg3);
  public final static native void delete_char_vector(long jarg1);
  public final static native long new_bool_vector__SWIG_0();
  public final static native long new_bool_vector__SWIG_1(long jarg1);
  public final static native long bool_vector_size(long jarg1, bool_vector jarg1_);
  public final static native long bool_vector_capacity(long jarg1, bool_vector jarg1_);
  public final static native void bool_vector_reserve(long jarg1, bool_vector jarg1_, long jarg2);
  public final static native boolean bool_vector_isEmpty(long jarg1, bool_vector jarg1_);
  public final static native void bool_vector_clear(long jarg1, bool_vector jarg1_);
  public final static native void bool_vector_add(long jarg1, bool_vector jarg1_, boolean jarg2);
  public final static native boolean bool_vector_get(long jarg1, bool_vector jarg1_, int jarg2);
  public final static native void bool_vector_set(long jarg1, bool_vector jarg1_, int jarg2, boolean jarg3);
  public final static native void delete_bool_vector(long jarg1);
  public final static native long new_float_vector();
  public final static native long float_vector_size(long jarg1, float_vector jarg1_);
  public final static native long float_vector_capacity(long jarg1, float_vector jarg1_);
  public final static native void float_vector_reserve(long jarg1, float_vector jarg1_, long jarg2);
  public final static native boolean float_vector_isEmpty(long jarg1, float_vector jarg1_);
  public final static native void float_vector_clear(long jarg1, float_vector jarg1_);
  public final static native void float_vector_add(long jarg1, float_vector jarg1_, float jarg2);
  public final static native float float_vector_get(long jarg1, float_vector jarg1_, int jarg2);
  public final static native void float_vector_set(long jarg1, float_vector jarg1_, int jarg2, float jarg3);
  public final static native void delete_float_vector(long jarg1);
  public final static native long new_long_long_long_2_pair_vector();
  public final static native long long_long_long_2_pair_vector_size(long jarg1, long_long_long_2_pair_vector jarg1_);
  public final static native long long_long_long_2_pair_vector_capacity(long jarg1, long_long_long_2_pair_vector jarg1_);
  public final static native void long_long_long_2_pair_vector_reserve(long jarg1, long_long_long_2_pair_vector jarg1_, long jarg2);
  public final static native boolean long_long_long_2_pair_vector_isEmpty(long jarg1, long_long_long_2_pair_vector jarg1_);
  public final static native void long_long_long_2_pair_vector_clear(long jarg1, long_long_long_2_pair_vector jarg1_);
  public final static native void long_long_long_2_pair_vector_add(long jarg1, long_long_long_2_pair_vector jarg1_, long jarg2, long_long_long_2_pair jarg2_);
  public final static native long long_long_long_2_pair_vector_get(long jarg1, long_long_long_2_pair_vector jarg1_, int jarg2);
  public final static native void long_long_long_2_pair_vector_set(long jarg1, long_long_long_2_pair_vector jarg1_, int jarg2, long jarg3, long_long_long_2_pair jarg3_);
  public final static native void delete_long_long_long_2_pair_vector(long jarg1);
  public final static native long new_string_int_pair_vector();
  public final static native long string_int_pair_vector_size(long jarg1, string_int_pair_vector jarg1_);
  public final static native long string_int_pair_vector_capacity(long jarg1, string_int_pair_vector jarg1_);
  public final static native void string_int_pair_vector_reserve(long jarg1, string_int_pair_vector jarg1_, long jarg2);
  public final static native boolean string_int_pair_vector_isEmpty(long jarg1, string_int_pair_vector jarg1_);
  public final static native void string_int_pair_vector_clear(long jarg1, string_int_pair_vector jarg1_);
  public final static native void string_int_pair_vector_add(long jarg1, string_int_pair_vector jarg1_, long jarg2, string_int_pair jarg2_);
  public final static native long string_int_pair_vector_get(long jarg1, string_int_pair_vector jarg1_, int jarg2);
  public final static native void string_int_pair_vector_set(long jarg1, string_int_pair_vector jarg1_, int jarg2, long jarg3, string_int_pair jarg3_);
  public final static native void delete_string_int_pair_vector(long jarg1);
  public final static native long new_string_string_pair_vector();
  public final static native long string_string_pair_vector_size(long jarg1, string_string_pair_vector jarg1_);
  public final static native long string_string_pair_vector_capacity(long jarg1, string_string_pair_vector jarg1_);
  public final static native void string_string_pair_vector_reserve(long jarg1, string_string_pair_vector jarg1_, long jarg2);
  public final static native boolean string_string_pair_vector_isEmpty(long jarg1, string_string_pair_vector jarg1_);
  public final static native void string_string_pair_vector_clear(long jarg1, string_string_pair_vector jarg1_);
  public final static native void string_string_pair_vector_add(long jarg1, string_string_pair_vector jarg1_, long jarg2, string_string_pair jarg2_);
  public final static native long string_string_pair_vector_get(long jarg1, string_string_pair_vector jarg1_, int jarg2);
  public final static native void string_string_pair_vector_set(long jarg1, string_string_pair_vector jarg1_, int jarg2, long jarg3, string_string_pair jarg3_);
  public final static native void delete_string_string_pair_vector(long jarg1);
  public final static native long new_int_int_pair_vector();
  public final static native long int_int_pair_vector_size(long jarg1, int_int_pair_vector jarg1_);
  public final static native long int_int_pair_vector_capacity(long jarg1, int_int_pair_vector jarg1_);
  public final static native void int_int_pair_vector_reserve(long jarg1, int_int_pair_vector jarg1_, long jarg2);
  public final static native boolean int_int_pair_vector_isEmpty(long jarg1, int_int_pair_vector jarg1_);
  public final static native void int_int_pair_vector_clear(long jarg1, int_int_pair_vector jarg1_);
  public final static native void int_int_pair_vector_add(long jarg1, int_int_pair_vector jarg1_, long jarg2, int_int_pair jarg2_);
  public final static native long int_int_pair_vector_get(long jarg1, int_int_pair_vector jarg1_, int jarg2);
  public final static native void int_int_pair_vector_set(long jarg1, int_int_pair_vector jarg1_, int jarg2, long jarg3, int_int_pair jarg3_);
  public final static native void delete_int_int_pair_vector(long jarg1);
  public final static native long new_unsigned_char_vector();
  public final static native long unsigned_char_vector_size(long jarg1, unsigned_char_vector jarg1_);
  public final static native long unsigned_char_vector_capacity(long jarg1, unsigned_char_vector jarg1_);
  public final static native void unsigned_char_vector_reserve(long jarg1, unsigned_char_vector jarg1_, long jarg2);
  public final static native boolean unsigned_char_vector_isEmpty(long jarg1, unsigned_char_vector jarg1_);
  public final static native void unsigned_char_vector_clear(long jarg1, unsigned_char_vector jarg1_);
  public final static native void unsigned_char_vector_add(long jarg1, unsigned_char_vector jarg1_, short jarg2);
  public final static native short unsigned_char_vector_get(long jarg1, unsigned_char_vector jarg1_, int jarg2);
  public final static native void unsigned_char_vector_set(long jarg1, unsigned_char_vector jarg1_, int jarg2, short jarg3);
  public final static native void delete_unsigned_char_vector(long jarg1);
  public final static native long new_int_vector();
  public final static native long int_vector_size(long jarg1, int_vector jarg1_);
  public final static native long int_vector_capacity(long jarg1, int_vector jarg1_);
  public final static native void int_vector_reserve(long jarg1, int_vector jarg1_, long jarg2);
  public final static native boolean int_vector_isEmpty(long jarg1, int_vector jarg1_);
  public final static native void int_vector_clear(long jarg1, int_vector jarg1_);
  public final static native void int_vector_add(long jarg1, int_vector jarg1_, int jarg2);
  public final static native int int_vector_get(long jarg1, int_vector jarg1_, int jarg2);
  public final static native void int_vector_set(long jarg1, int_vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_int_vector(long jarg1);
  public final static native long new_int64_vector();
  public final static native long int64_vector_size(long jarg1, int64_vector jarg1_);
  public final static native long int64_vector_capacity(long jarg1, int64_vector jarg1_);
  public final static native void int64_vector_reserve(long jarg1, int64_vector jarg1_, long jarg2);
  public final static native boolean int64_vector_isEmpty(long jarg1, int64_vector jarg1_);
  public final static native void int64_vector_clear(long jarg1, int64_vector jarg1_);
  public final static native void int64_vector_add(long jarg1, int64_vector jarg1_, long jarg2);
  public final static native long int64_vector_get(long jarg1, int64_vector jarg1_, int jarg2);
  public final static native void int64_vector_set(long jarg1, int64_vector jarg1_, int jarg2, long jarg3);
  public final static native void delete_int64_vector(long jarg1);
  public final static native long new_uint64_vector();
  public final static native long uint64_vector_size(long jarg1, uint64_vector jarg1_);
  public final static native long uint64_vector_capacity(long jarg1, uint64_vector jarg1_);
  public final static native void uint64_vector_reserve(long jarg1, uint64_vector jarg1_, long jarg2);
  public final static native boolean uint64_vector_isEmpty(long jarg1, uint64_vector jarg1_);
  public final static native void uint64_vector_clear(long jarg1, uint64_vector jarg1_);
  public final static native void uint64_vector_add(long jarg1, uint64_vector jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger uint64_vector_get(long jarg1, uint64_vector jarg1_, int jarg2);
  public final static native void uint64_vector_set(long jarg1, uint64_vector jarg1_, int jarg2, java.math.BigInteger jarg3);
  public final static native void delete_uint64_vector(long jarg1);
  public final static native long new_sha1_hash_vector();
  public final static native long sha1_hash_vector_size(long jarg1, sha1_hash_vector jarg1_);
  public final static native long sha1_hash_vector_capacity(long jarg1, sha1_hash_vector jarg1_);
  public final static native void sha1_hash_vector_reserve(long jarg1, sha1_hash_vector jarg1_, long jarg2);
  public final static native boolean sha1_hash_vector_isEmpty(long jarg1, sha1_hash_vector jarg1_);
  public final static native void sha1_hash_vector_clear(long jarg1, sha1_hash_vector jarg1_);
  public final static native void sha1_hash_vector_add(long jarg1, sha1_hash_vector jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long sha1_hash_vector_get(long jarg1, sha1_hash_vector jarg1_, int jarg2);
  public final static native void sha1_hash_vector_set(long jarg1, sha1_hash_vector jarg1_, int jarg2, long jarg3, sha1_hash jarg3_);
  public final static native void delete_sha1_hash_vector(long jarg1);
  public final static native long new_torrent_status_vector();
  public final static native long torrent_status_vector_size(long jarg1, torrent_status_vector jarg1_);
  public final static native long torrent_status_vector_capacity(long jarg1, torrent_status_vector jarg1_);
  public final static native void torrent_status_vector_reserve(long jarg1, torrent_status_vector jarg1_, long jarg2);
  public final static native boolean torrent_status_vector_isEmpty(long jarg1, torrent_status_vector jarg1_);
  public final static native void torrent_status_vector_clear(long jarg1, torrent_status_vector jarg1_);
  public final static native void torrent_status_vector_add(long jarg1, torrent_status_vector jarg1_, long jarg2, torrent_status jarg2_);
  public final static native long torrent_status_vector_get(long jarg1, torrent_status_vector jarg1_, int jarg2);
  public final static native void torrent_status_vector_set(long jarg1, torrent_status_vector jarg1_, int jarg2, long jarg3, torrent_status jarg3_);
  public final static native void delete_torrent_status_vector(long jarg1);
  public final static native long new_torrent_handle_vector();
  public final static native long torrent_handle_vector_size(long jarg1, torrent_handle_vector jarg1_);
  public final static native long torrent_handle_vector_capacity(long jarg1, torrent_handle_vector jarg1_);
  public final static native void torrent_handle_vector_reserve(long jarg1, torrent_handle_vector jarg1_, long jarg2);
  public final static native boolean torrent_handle_vector_isEmpty(long jarg1, torrent_handle_vector jarg1_);
  public final static native void torrent_handle_vector_clear(long jarg1, torrent_handle_vector jarg1_);
  public final static native void torrent_handle_vector_add(long jarg1, torrent_handle_vector jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native long torrent_handle_vector_get(long jarg1, torrent_handle_vector jarg1_, int jarg2);
  public final static native void torrent_handle_vector_set(long jarg1, torrent_handle_vector jarg1_, int jarg2, long jarg3, torrent_handle jarg3_);
  public final static native void delete_torrent_handle_vector(long jarg1);
  public final static native long new_file_slice_vector();
  public final static native long file_slice_vector_size(long jarg1, file_slice_vector jarg1_);
  public final static native long file_slice_vector_capacity(long jarg1, file_slice_vector jarg1_);
  public final static native void file_slice_vector_reserve(long jarg1, file_slice_vector jarg1_, long jarg2);
  public final static native boolean file_slice_vector_isEmpty(long jarg1, file_slice_vector jarg1_);
  public final static native void file_slice_vector_clear(long jarg1, file_slice_vector jarg1_);
  public final static native void file_slice_vector_add(long jarg1, file_slice_vector jarg1_, long jarg2, file_slice jarg2_);
  public final static native long file_slice_vector_get(long jarg1, file_slice_vector jarg1_, int jarg2);
  public final static native void file_slice_vector_set(long jarg1, file_slice_vector jarg1_, int jarg2, long jarg3, file_slice jarg3_);
  public final static native void delete_file_slice_vector(long jarg1);
  public final static native long new_peer_request_vector();
  public final static native long peer_request_vector_size(long jarg1, peer_request_vector jarg1_);
  public final static native long peer_request_vector_capacity(long jarg1, peer_request_vector jarg1_);
  public final static native void peer_request_vector_reserve(long jarg1, peer_request_vector jarg1_, long jarg2);
  public final static native boolean peer_request_vector_isEmpty(long jarg1, peer_request_vector jarg1_);
  public final static native void peer_request_vector_clear(long jarg1, peer_request_vector jarg1_);
  public final static native void peer_request_vector_add(long jarg1, peer_request_vector jarg1_, long jarg2, peer_request jarg2_);
  public final static native long peer_request_vector_get(long jarg1, peer_request_vector jarg1_, int jarg2);
  public final static native void peer_request_vector_set(long jarg1, peer_request_vector jarg1_, int jarg2, long jarg3, peer_request jarg3_);
  public final static native void delete_peer_request_vector(long jarg1);
  public final static native long new_dht_routing_bucket_vector();
  public final static native long dht_routing_bucket_vector_size(long jarg1, dht_routing_bucket_vector jarg1_);
  public final static native long dht_routing_bucket_vector_capacity(long jarg1, dht_routing_bucket_vector jarg1_);
  public final static native void dht_routing_bucket_vector_reserve(long jarg1, dht_routing_bucket_vector jarg1_, long jarg2);
  public final static native boolean dht_routing_bucket_vector_isEmpty(long jarg1, dht_routing_bucket_vector jarg1_);
  public final static native void dht_routing_bucket_vector_clear(long jarg1, dht_routing_bucket_vector jarg1_);
  public final static native void dht_routing_bucket_vector_add(long jarg1, dht_routing_bucket_vector jarg1_, long jarg2, dht_routing_bucket jarg2_);
  public final static native long dht_routing_bucket_vector_get(long jarg1, dht_routing_bucket_vector jarg1_, int jarg2);
  public final static native void dht_routing_bucket_vector_set(long jarg1, dht_routing_bucket_vector jarg1_, int jarg2, long jarg3, dht_routing_bucket jarg3_);
  public final static native void delete_dht_routing_bucket_vector(long jarg1);
  public final static native long new_dht_lookup_vector();
  public final static native long dht_lookup_vector_size(long jarg1, dht_lookup_vector jarg1_);
  public final static native long dht_lookup_vector_capacity(long jarg1, dht_lookup_vector jarg1_);
  public final static native void dht_lookup_vector_reserve(long jarg1, dht_lookup_vector jarg1_, long jarg2);
  public final static native boolean dht_lookup_vector_isEmpty(long jarg1, dht_lookup_vector jarg1_);
  public final static native void dht_lookup_vector_clear(long jarg1, dht_lookup_vector jarg1_);
  public final static native void dht_lookup_vector_add(long jarg1, dht_lookup_vector jarg1_, long jarg2, dht_lookup jarg2_);
  public final static native long dht_lookup_vector_get(long jarg1, dht_lookup_vector jarg1_, int jarg2);
  public final static native void dht_lookup_vector_set(long jarg1, dht_lookup_vector jarg1_, int jarg2, long jarg3, dht_lookup jarg3_);
  public final static native void delete_dht_lookup_vector(long jarg1);
  public final static native long new_partial_piece_info_vector();
  public final static native long partial_piece_info_vector_size(long jarg1, partial_piece_info_vector jarg1_);
  public final static native long partial_piece_info_vector_capacity(long jarg1, partial_piece_info_vector jarg1_);
  public final static native void partial_piece_info_vector_reserve(long jarg1, partial_piece_info_vector jarg1_, long jarg2);
  public final static native boolean partial_piece_info_vector_isEmpty(long jarg1, partial_piece_info_vector jarg1_);
  public final static native void partial_piece_info_vector_clear(long jarg1, partial_piece_info_vector jarg1_);
  public final static native void partial_piece_info_vector_add(long jarg1, partial_piece_info_vector jarg1_, long jarg2, partial_piece_info jarg2_);
  public final static native long partial_piece_info_vector_get(long jarg1, partial_piece_info_vector jarg1_, int jarg2);
  public final static native void partial_piece_info_vector_set(long jarg1, partial_piece_info_vector jarg1_, int jarg2, long jarg3, partial_piece_info jarg3_);
  public final static native void delete_partial_piece_info_vector(long jarg1);
  public final static native long new_cached_piece_info_vector();
  public final static native long cached_piece_info_vector_size(long jarg1, cached_piece_info_vector jarg1_);
  public final static native long cached_piece_info_vector_capacity(long jarg1, cached_piece_info_vector jarg1_);
  public final static native void cached_piece_info_vector_reserve(long jarg1, cached_piece_info_vector jarg1_, long jarg2);
  public final static native boolean cached_piece_info_vector_isEmpty(long jarg1, cached_piece_info_vector jarg1_);
  public final static native void cached_piece_info_vector_clear(long jarg1, cached_piece_info_vector jarg1_);
  public final static native void cached_piece_info_vector_add(long jarg1, cached_piece_info_vector jarg1_, long jarg2, cached_piece_info jarg2_);
  public final static native long cached_piece_info_vector_get(long jarg1, cached_piece_info_vector jarg1_, int jarg2);
  public final static native void cached_piece_info_vector_set(long jarg1, cached_piece_info_vector jarg1_, int jarg2, long jarg3, cached_piece_info jarg3_);
  public final static native void delete_cached_piece_info_vector(long jarg1);
  public final static native long new_peer_info_vector();
  public final static native long peer_info_vector_size(long jarg1, peer_info_vector jarg1_);
  public final static native long peer_info_vector_capacity(long jarg1, peer_info_vector jarg1_);
  public final static native void peer_info_vector_reserve(long jarg1, peer_info_vector jarg1_, long jarg2);
  public final static native boolean peer_info_vector_isEmpty(long jarg1, peer_info_vector jarg1_);
  public final static native void peer_info_vector_clear(long jarg1, peer_info_vector jarg1_);
  public final static native void peer_info_vector_add(long jarg1, peer_info_vector jarg1_, long jarg2, peer_info jarg2_);
  public final static native long peer_info_vector_get(long jarg1, peer_info_vector jarg1_, int jarg2);
  public final static native void peer_info_vector_set(long jarg1, peer_info_vector jarg1_, int jarg2, long jarg3, peer_info jarg3_);
  public final static native void delete_peer_info_vector(long jarg1);
  public final static native long new_stats_metric_vector();
  public final static native long stats_metric_vector_size(long jarg1, stats_metric_vector jarg1_);
  public final static native long stats_metric_vector_capacity(long jarg1, stats_metric_vector jarg1_);
  public final static native void stats_metric_vector_reserve(long jarg1, stats_metric_vector jarg1_, long jarg2);
  public final static native boolean stats_metric_vector_isEmpty(long jarg1, stats_metric_vector jarg1_);
  public final static native void stats_metric_vector_clear(long jarg1, stats_metric_vector jarg1_);
  public final static native void stats_metric_vector_add(long jarg1, stats_metric_vector jarg1_, long jarg2, stats_metric jarg2_);
  public final static native long stats_metric_vector_get(long jarg1, stats_metric_vector jarg1_, int jarg2);
  public final static native void stats_metric_vector_set(long jarg1, stats_metric_vector jarg1_, int jarg2, long jarg3, stats_metric jarg3_);
  public final static native void delete_stats_metric_vector(long jarg1);
  public final static native long new_entry_vector();
  public final static native long entry_vector_size(long jarg1, entry_vector jarg1_);
  public final static native long entry_vector_capacity(long jarg1, entry_vector jarg1_);
  public final static native void entry_vector_reserve(long jarg1, entry_vector jarg1_, long jarg2);
  public final static native boolean entry_vector_isEmpty(long jarg1, entry_vector jarg1_);
  public final static native void entry_vector_clear(long jarg1, entry_vector jarg1_);
  public final static native void entry_vector_add(long jarg1, entry_vector jarg1_, long jarg2, entry jarg2_);
  public final static native long entry_vector_get(long jarg1, entry_vector jarg1_, int jarg2);
  public final static native void entry_vector_set(long jarg1, entry_vector jarg1_, int jarg2, long jarg3, entry jarg3_);
  public final static native void delete_entry_vector(long jarg1);
  public final static native long new_web_seed_entry_vector();
  public final static native long web_seed_entry_vector_size(long jarg1, web_seed_entry_vector jarg1_);
  public final static native long web_seed_entry_vector_capacity(long jarg1, web_seed_entry_vector jarg1_);
  public final static native void web_seed_entry_vector_reserve(long jarg1, web_seed_entry_vector jarg1_, long jarg2);
  public final static native boolean web_seed_entry_vector_isEmpty(long jarg1, web_seed_entry_vector jarg1_);
  public final static native void web_seed_entry_vector_clear(long jarg1, web_seed_entry_vector jarg1_);
  public final static native void web_seed_entry_vector_add(long jarg1, web_seed_entry_vector jarg1_, long jarg2, web_seed_entry jarg2_);
  public final static native long web_seed_entry_vector_get(long jarg1, web_seed_entry_vector jarg1_, int jarg2);
  public final static native void web_seed_entry_vector_set(long jarg1, web_seed_entry_vector jarg1_, int jarg2, long jarg3, web_seed_entry jarg3_);
  public final static native void delete_web_seed_entry_vector(long jarg1);
  public final static native long new_peer_entry_vector();
  public final static native long peer_entry_vector_size(long jarg1, peer_entry_vector jarg1_);
  public final static native long peer_entry_vector_capacity(long jarg1, peer_entry_vector jarg1_);
  public final static native void peer_entry_vector_reserve(long jarg1, peer_entry_vector jarg1_, long jarg2);
  public final static native boolean peer_entry_vector_isEmpty(long jarg1, peer_entry_vector jarg1_);
  public final static native void peer_entry_vector_clear(long jarg1, peer_entry_vector jarg1_);
  public final static native void peer_entry_vector_add(long jarg1, peer_entry_vector jarg1_, long jarg2, peer_entry jarg2_);
  public final static native long peer_entry_vector_get(long jarg1, peer_entry_vector jarg1_, int jarg2);
  public final static native void peer_entry_vector_set(long jarg1, peer_entry_vector jarg1_, int jarg2, long jarg3, peer_entry jarg3_);
  public final static native void delete_peer_entry_vector(long jarg1);
  public final static native long new_announce_entry_vector();
  public final static native long announce_entry_vector_size(long jarg1, announce_entry_vector jarg1_);
  public final static native long announce_entry_vector_capacity(long jarg1, announce_entry_vector jarg1_);
  public final static native void announce_entry_vector_reserve(long jarg1, announce_entry_vector jarg1_, long jarg2);
  public final static native boolean announce_entry_vector_isEmpty(long jarg1, announce_entry_vector jarg1_);
  public final static native void announce_entry_vector_clear(long jarg1, announce_entry_vector jarg1_);
  public final static native void announce_entry_vector_add(long jarg1, announce_entry_vector jarg1_, long jarg2, announce_entry jarg2_);
  public final static native long announce_entry_vector_get(long jarg1, announce_entry_vector jarg1_, int jarg2);
  public final static native void announce_entry_vector_set(long jarg1, announce_entry_vector jarg1_, int jarg2, long jarg3, announce_entry jarg3_);
  public final static native void delete_announce_entry_vector(long jarg1);
  public final static native long new_peer_list_entry_vector();
  public final static native long peer_list_entry_vector_size(long jarg1, peer_list_entry_vector jarg1_);
  public final static native long peer_list_entry_vector_capacity(long jarg1, peer_list_entry_vector jarg1_);
  public final static native void peer_list_entry_vector_reserve(long jarg1, peer_list_entry_vector jarg1_, long jarg2);
  public final static native boolean peer_list_entry_vector_isEmpty(long jarg1, peer_list_entry_vector jarg1_);
  public final static native void peer_list_entry_vector_clear(long jarg1, peer_list_entry_vector jarg1_);
  public final static native void peer_list_entry_vector_add(long jarg1, peer_list_entry_vector jarg1_, long jarg2, peer_list_entry jarg2_);
  public final static native long peer_list_entry_vector_get(long jarg1, peer_list_entry_vector jarg1_, int jarg2);
  public final static native void peer_list_entry_vector_set(long jarg1, peer_list_entry_vector jarg1_, int jarg2, long jarg3, peer_list_entry jarg3_);
  public final static native void delete_peer_list_entry_vector(long jarg1);
  public final static native long new_ipv4_peer_entry_vector();
  public final static native long ipv4_peer_entry_vector_size(long jarg1, ipv4_peer_entry_vector jarg1_);
  public final static native long ipv4_peer_entry_vector_capacity(long jarg1, ipv4_peer_entry_vector jarg1_);
  public final static native void ipv4_peer_entry_vector_reserve(long jarg1, ipv4_peer_entry_vector jarg1_, long jarg2);
  public final static native boolean ipv4_peer_entry_vector_isEmpty(long jarg1, ipv4_peer_entry_vector jarg1_);
  public final static native void ipv4_peer_entry_vector_clear(long jarg1, ipv4_peer_entry_vector jarg1_);
  public final static native void ipv4_peer_entry_vector_add(long jarg1, ipv4_peer_entry_vector jarg1_, long jarg2, ipv4_peer_entry jarg2_);
  public final static native long ipv4_peer_entry_vector_get(long jarg1, ipv4_peer_entry_vector jarg1_, int jarg2);
  public final static native void ipv4_peer_entry_vector_set(long jarg1, ipv4_peer_entry_vector jarg1_, int jarg2, long jarg3, ipv4_peer_entry jarg3_);
  public final static native void delete_ipv4_peer_entry_vector(long jarg1);
  public final static native long new_ipv6_peer_entry_vector();
  public final static native long ipv6_peer_entry_vector_size(long jarg1, ipv6_peer_entry_vector jarg1_);
  public final static native long ipv6_peer_entry_vector_capacity(long jarg1, ipv6_peer_entry_vector jarg1_);
  public final static native void ipv6_peer_entry_vector_reserve(long jarg1, ipv6_peer_entry_vector jarg1_, long jarg2);
  public final static native boolean ipv6_peer_entry_vector_isEmpty(long jarg1, ipv6_peer_entry_vector jarg1_);
  public final static native void ipv6_peer_entry_vector_clear(long jarg1, ipv6_peer_entry_vector jarg1_);
  public final static native void ipv6_peer_entry_vector_add(long jarg1, ipv6_peer_entry_vector jarg1_, long jarg2, ipv6_peer_entry jarg2_);
  public final static native long ipv6_peer_entry_vector_get(long jarg1, ipv6_peer_entry_vector jarg1_, int jarg2);
  public final static native void ipv6_peer_entry_vector_set(long jarg1, ipv6_peer_entry_vector jarg1_, int jarg2, long jarg3, ipv6_peer_entry jarg3_);
  public final static native void delete_ipv6_peer_entry_vector(long jarg1);
  public final static native long new_tcp_endpoint_vector();
  public final static native long tcp_endpoint_vector_size(long jarg1, tcp_endpoint_vector jarg1_);
  public final static native long tcp_endpoint_vector_capacity(long jarg1, tcp_endpoint_vector jarg1_);
  public final static native void tcp_endpoint_vector_reserve(long jarg1, tcp_endpoint_vector jarg1_, long jarg2);
  public final static native boolean tcp_endpoint_vector_isEmpty(long jarg1, tcp_endpoint_vector jarg1_);
  public final static native void tcp_endpoint_vector_clear(long jarg1, tcp_endpoint_vector jarg1_);
  public final static native void tcp_endpoint_vector_add(long jarg1, tcp_endpoint_vector jarg1_, long jarg2, tcp_endpoint jarg2_);
  public final static native long tcp_endpoint_vector_get(long jarg1, tcp_endpoint_vector jarg1_, int jarg2);
  public final static native void tcp_endpoint_vector_set(long jarg1, tcp_endpoint_vector jarg1_, int jarg2, long jarg3, tcp_endpoint jarg3_);
  public final static native void delete_tcp_endpoint_vector(long jarg1);
  public final static native long new_torrent_peer_ptr_vector();
  public final static native long torrent_peer_ptr_vector_size(long jarg1, torrent_peer_ptr_vector jarg1_);
  public final static native long torrent_peer_ptr_vector_capacity(long jarg1, torrent_peer_ptr_vector jarg1_);
  public final static native void torrent_peer_ptr_vector_reserve(long jarg1, torrent_peer_ptr_vector jarg1_, long jarg2);
  public final static native boolean torrent_peer_ptr_vector_isEmpty(long jarg1, torrent_peer_ptr_vector jarg1_);
  public final static native void torrent_peer_ptr_vector_clear(long jarg1, torrent_peer_ptr_vector jarg1_);
  public final static native void torrent_peer_ptr_vector_add(long jarg1, torrent_peer_ptr_vector jarg1_, long jarg2, torrent_peer jarg2_);
  public final static native long torrent_peer_ptr_vector_get(long jarg1, torrent_peer_ptr_vector jarg1_, int jarg2);
  public final static native void torrent_peer_ptr_vector_set(long jarg1, torrent_peer_ptr_vector jarg1_, int jarg2, long jarg3, torrent_peer jarg3_);
  public final static native void delete_torrent_peer_ptr_vector(long jarg1);
  public final static native long new_piece_block_vector();
  public final static native long piece_block_vector_size(long jarg1, piece_block_vector jarg1_);
  public final static native long piece_block_vector_capacity(long jarg1, piece_block_vector jarg1_);
  public final static native void piece_block_vector_reserve(long jarg1, piece_block_vector jarg1_, long jarg2);
  public final static native boolean piece_block_vector_isEmpty(long jarg1, piece_block_vector jarg1_);
  public final static native void piece_block_vector_clear(long jarg1, piece_block_vector jarg1_);
  public final static native void piece_block_vector_add(long jarg1, piece_block_vector jarg1_, long jarg2, piece_block jarg2_);
  public final static native long piece_block_vector_get(long jarg1, piece_block_vector jarg1_, int jarg2);
  public final static native void piece_block_vector_set(long jarg1, piece_block_vector jarg1_, int jarg2, long jarg3, piece_block jarg3_);
  public final static native void delete_piece_block_vector(long jarg1);
  public final static native long new_downloading_piece_vector();
  public final static native long downloading_piece_vector_size(long jarg1, downloading_piece_vector jarg1_);
  public final static native long downloading_piece_vector_capacity(long jarg1, downloading_piece_vector jarg1_);
  public final static native void downloading_piece_vector_reserve(long jarg1, downloading_piece_vector jarg1_, long jarg2);
  public final static native boolean downloading_piece_vector_isEmpty(long jarg1, downloading_piece_vector jarg1_);
  public final static native void downloading_piece_vector_clear(long jarg1, downloading_piece_vector jarg1_);
  public final static native void downloading_piece_vector_add(long jarg1, downloading_piece_vector jarg1_, long jarg2, piece_picker.downloading_piece jarg2_);
  public final static native long downloading_piece_vector_get(long jarg1, downloading_piece_vector jarg1_, int jarg2);
  public final static native void downloading_piece_vector_set(long jarg1, downloading_piece_vector jarg1_, int jarg2, long jarg3, piece_picker.downloading_piece jarg3_);
  public final static native void delete_downloading_piece_vector(long jarg1);
  public final static native long new_suggest_piece_vector();
  public final static native long suggest_piece_vector_size(long jarg1, suggest_piece_vector jarg1_);
  public final static native long suggest_piece_vector_capacity(long jarg1, suggest_piece_vector jarg1_);
  public final static native void suggest_piece_vector_reserve(long jarg1, suggest_piece_vector jarg1_, long jarg2);
  public final static native boolean suggest_piece_vector_isEmpty(long jarg1, suggest_piece_vector jarg1_);
  public final static native void suggest_piece_vector_clear(long jarg1, suggest_piece_vector jarg1_);
  public final static native void suggest_piece_vector_add(long jarg1, suggest_piece_vector jarg1_, long jarg2, torrent.suggest_piece_t jarg2_);
  public final static native long suggest_piece_vector_get(long jarg1, suggest_piece_vector jarg1_, int jarg2);
  public final static native void suggest_piece_vector_set(long jarg1, suggest_piece_vector jarg1_, int jarg2, long jarg3, torrent.suggest_piece_t jarg3_);
  public final static native void delete_suggest_piece_vector(long jarg1);
  public final static native long new_entry_list();
  public final static native boolean entry_list_isEmpty(long jarg1, entry_list jarg1_);
  public final static native long entry_list_size(long jarg1, entry_list jarg1_);
  public final static native long entry_list_max_size(long jarg1, entry_list jarg1_);
  public final static native long entry_list_front(long jarg1, entry_list jarg1_);
  public final static native long entry_list_back(long jarg1, entry_list jarg1_);
  public final static native void entry_list_push_front(long jarg1, entry_list jarg1_, long jarg2, entry jarg2_);
  public final static native void entry_list_pop_front(long jarg1, entry_list jarg1_);
  public final static native void entry_list_push_back(long jarg1, entry_list jarg1_, long jarg2, entry jarg2_);
  public final static native void entry_list_pop_back(long jarg1, entry_list jarg1_);
  public final static native void entry_list_clear(long jarg1, entry_list jarg1_);
  public final static native long entry_list_to_vector(long jarg1, entry_list jarg1_);
  public final static native void delete_entry_list(long jarg1);
  public final static native long new_web_seed_entry_list();
  public final static native boolean web_seed_entry_list_isEmpty(long jarg1, web_seed_entry_list jarg1_);
  public final static native long web_seed_entry_list_size(long jarg1, web_seed_entry_list jarg1_);
  public final static native long web_seed_entry_list_max_size(long jarg1, web_seed_entry_list jarg1_);
  public final static native long web_seed_entry_list_front(long jarg1, web_seed_entry_list jarg1_);
  public final static native long web_seed_entry_list_back(long jarg1, web_seed_entry_list jarg1_);
  public final static native void web_seed_entry_list_push_front(long jarg1, web_seed_entry_list jarg1_, long jarg2, web_seed_entry jarg2_);
  public final static native void web_seed_entry_list_pop_front(long jarg1, web_seed_entry_list jarg1_);
  public final static native void web_seed_entry_list_push_back(long jarg1, web_seed_entry_list jarg1_, long jarg2, web_seed_entry jarg2_);
  public final static native void web_seed_entry_list_pop_back(long jarg1, web_seed_entry_list jarg1_);
  public final static native void web_seed_entry_list_clear(long jarg1, web_seed_entry_list jarg1_);
  public final static native long web_seed_entry_list_to_vector(long jarg1, web_seed_entry_list jarg1_);
  public final static native void delete_web_seed_entry_list(long jarg1);
  public final static native long new_string_long_map__SWIG_0();
  public final static native long new_string_long_map__SWIG_1(long jarg1, string_long_map jarg1_);
  public final static native long string_long_map_size(long jarg1, string_long_map jarg1_);
  public final static native boolean string_long_map_empty(long jarg1, string_long_map jarg1_);
  public final static native void string_long_map_clear(long jarg1, string_long_map jarg1_);
  public final static native int string_long_map_get(long jarg1, string_long_map jarg1_, String jarg2);
  public final static native void string_long_map_set(long jarg1, string_long_map jarg1_, String jarg2, int jarg3);
  public final static native void string_long_map_del(long jarg1, string_long_map jarg1_, String jarg2);
  public final static native boolean string_long_map_has_key(long jarg1, string_long_map jarg1_, String jarg2);
  public final static native long string_long_map_keys(long jarg1, string_long_map jarg1_);
  public final static native void delete_string_long_map(long jarg1);
  public final static native long new_string_entry_map__SWIG_0();
  public final static native long new_string_entry_map__SWIG_1(long jarg1, string_entry_map jarg1_);
  public final static native long string_entry_map_size(long jarg1, string_entry_map jarg1_);
  public final static native boolean string_entry_map_empty(long jarg1, string_entry_map jarg1_);
  public final static native void string_entry_map_clear(long jarg1, string_entry_map jarg1_);
  public final static native long string_entry_map_get(long jarg1, string_entry_map jarg1_, String jarg2);
  public final static native void string_entry_map_set(long jarg1, string_entry_map jarg1_, String jarg2, long jarg3, entry jarg3_);
  public final static native void string_entry_map_del(long jarg1, string_entry_map jarg1_, String jarg2);
  public final static native boolean string_entry_map_has_key(long jarg1, string_entry_map jarg1_, String jarg2);
  public final static native long string_entry_map_keys(long jarg1, string_entry_map jarg1_);
  public final static native void delete_string_entry_map(long jarg1);
  public final static native long new_int_sha1_hash_map__SWIG_0();
  public final static native long new_int_sha1_hash_map__SWIG_1(long jarg1, int_sha1_hash_map jarg1_);
  public final static native long int_sha1_hash_map_size(long jarg1, int_sha1_hash_map jarg1_);
  public final static native boolean int_sha1_hash_map_empty(long jarg1, int_sha1_hash_map jarg1_);
  public final static native void int_sha1_hash_map_clear(long jarg1, int_sha1_hash_map jarg1_);
  public final static native long int_sha1_hash_map_get(long jarg1, int_sha1_hash_map jarg1_, int jarg2);
  public final static native void int_sha1_hash_map_set(long jarg1, int_sha1_hash_map jarg1_, int jarg2, long jarg3, sha1_hash jarg3_);
  public final static native void int_sha1_hash_map_del(long jarg1, int_sha1_hash_map jarg1_, int jarg2);
  public final static native boolean int_sha1_hash_map_has_key(long jarg1, int_sha1_hash_map jarg1_, int jarg2);
  public final static native long int_sha1_hash_map_keys(long jarg1, int_sha1_hash_map jarg1_);
  public final static native void delete_int_sha1_hash_map(long jarg1);
  public final static native long new_alert_ptr_vector();
  public final static native long alert_ptr_vector_size(long jarg1, alert_ptr_vector jarg1_);
  public final static native long alert_ptr_vector_capacity(long jarg1, alert_ptr_vector jarg1_);
  public final static native void alert_ptr_vector_reserve(long jarg1, alert_ptr_vector jarg1_, long jarg2);
  public final static native boolean alert_ptr_vector_isEmpty(long jarg1, alert_ptr_vector jarg1_);
  public final static native void alert_ptr_vector_clear(long jarg1, alert_ptr_vector jarg1_);
  public final static native void alert_ptr_vector_add(long jarg1, alert_ptr_vector jarg1_, long jarg2, alert jarg2_);
  public final static native long alert_ptr_vector_get(long jarg1, alert_ptr_vector jarg1_, int jarg2);
  public final static native void alert_ptr_vector_set(long jarg1, alert_ptr_vector jarg1_, int jarg2, long jarg3, alert jarg3_);
  public final static native void delete_alert_ptr_vector(long jarg1);
  public final static native int success_get();
  public final static native int address_family_not_supported_get();
  public final static native int address_in_use_get();
  public final static native int address_not_available_get();
  public final static native int already_connected_get();
  public final static native int argument_list_too_long_get();
  public final static native int argument_out_of_domain_get();
  public final static native int bad_address_get();
  public final static native int bad_file_descriptor_get();
  public final static native int bad_message_get();
  public final static native int broken_pipe_get();
  public final static native int connection_aborted_get();
  public final static native int connection_already_in_progress_get();
  public final static native int connection_refused_get();
  public final static native int connection_reset_get();
  public final static native int cross_device_link_get();
  public final static native int destination_address_required_get();
  public final static native int device_or_resource_busy_get();
  public final static native int directory_not_empty_get();
  public final static native int executable_format_error_get();
  public final static native int file_exists_get();
  public final static native int file_too_large_get();
  public final static native int filename_too_long_get();
  public final static native int function_not_supported_get();
  public final static native int host_unreachable_get();
  public final static native int identifier_removed_get();
  public final static native int illegal_byte_sequence_get();
  public final static native int inappropriate_io_control_operation_get();
  public final static native int interrupted_get();
  public final static native int invalid_argument_get();
  public final static native int invalid_seek_get();
  public final static native int io_error_get();
  public final static native int is_a_directory_get();
  public final static native int message_size_get();
  public final static native int network_down_get();
  public final static native int network_reset_get();
  public final static native int network_unreachable_get();
  public final static native int no_buffer_space_get();
  public final static native int no_child_process_get();
  public final static native int no_link_get();
  public final static native int no_lock_available_get();
  public final static native int no_message_available_get();
  public final static native int no_message_get();
  public final static native int no_protocol_option_get();
  public final static native int no_space_on_device_get();
  public final static native int no_stream_resources_get();
  public final static native int no_such_device_or_address_get();
  public final static native int no_such_device_get();
  public final static native int no_such_file_or_directory_get();
  public final static native int no_such_process_get();
  public final static native int not_a_directory_get();
  public final static native int not_a_socket_get();
  public final static native int not_a_stream_get();
  public final static native int not_connected_get();
  public final static native int not_enough_memory_get();
  public final static native int not_supported_get();
  public final static native int operation_canceled_get();
  public final static native int operation_in_progress_get();
  public final static native int operation_not_permitted_get();
  public final static native int operation_not_supported_get();
  public final static native int operation_would_block_get();
  public final static native int owner_dead_get();
  public final static native int permission_denied_get();
  public final static native int protocol_error_get();
  public final static native int protocol_not_supported_get();
  public final static native int read_only_file_system_get();
  public final static native int resource_deadlock_would_occur_get();
  public final static native int resource_unavailable_try_again_get();
  public final static native int result_out_of_range_get();
  public final static native int state_not_recoverable_get();
  public final static native int stream_timeout_get();
  public final static native int text_file_busy_get();
  public final static native int timed_out_get();
  public final static native int too_many_files_open_in_system_get();
  public final static native int too_many_files_open_get();
  public final static native int too_many_links_get();
  public final static native int too_many_symbolic_link_levels_get();
  public final static native int value_too_large_get();
  public final static native int wrong_protocol_type_get();
  public final static native void delete_error_category(long jarg1);
  public final static native String error_category_name(long jarg1, error_category jarg1_);
  public final static native String error_category_message(long jarg1, error_category jarg1_, int jarg2);
  public final static native long error_category_default_error_condition(long jarg1, error_category jarg1_, int jarg2);
  public final static native boolean error_category_equivalent__SWIG_0(long jarg1, error_category jarg1_, int jarg2, long jarg3, error_condition jarg3_);
  public final static native boolean error_category_equivalent__SWIG_1(long jarg1, error_category jarg1_, long jarg2, error_code jarg2_, int jarg3);
  public final static native boolean error_category_op_eq(long jarg1, error_category jarg1_, long jarg2, error_category jarg2_);
  public final static native boolean error_category_op_neq(long jarg1, error_category jarg1_, long jarg2, error_category jarg2_);
  public final static native boolean error_category_op_lt(long jarg1, error_category jarg1_, long jarg2, error_category jarg2_);
  public final static native long new_error_condition__SWIG_0();
  public final static native long new_error_condition__SWIG_1(int jarg1, long jarg2, error_category jarg2_);
  public final static native void error_condition_assign(long jarg1, error_condition jarg1_, int jarg2, long jarg3, error_category jarg3_);
  public final static native void error_condition_clear(long jarg1, error_condition jarg1_);
  public final static native int error_condition_value(long jarg1, error_condition jarg1_);
  public final static native long error_condition_category(long jarg1, error_condition jarg1_);
  public final static native String error_condition_message(long jarg1, error_condition jarg1_);
  public final static native void error_condition_unspecified_bool_true();
  public final static native boolean op_eq__SWIG_0(long jarg1, error_condition jarg1_, long jarg2, error_condition jarg2_);
  public final static native boolean op_lt__SWIG_0(long jarg1, error_condition jarg1_, long jarg2, error_condition jarg2_);
  public final static native void delete_error_condition(long jarg1);
  public final static native long new_error_code__SWIG_0();
  public final static native long new_error_code__SWIG_1(int jarg1, long jarg2, error_category jarg2_);
  public final static native void error_code_assign(long jarg1, error_code jarg1_, int jarg2, long jarg3, error_category jarg3_);
  public final static native void error_code_clear(long jarg1, error_code jarg1_);
  public final static native int error_code_value(long jarg1, error_code jarg1_);
  public final static native long error_code_category(long jarg1, error_code jarg1_);
  public final static native long error_code_default_error_condition(long jarg1, error_code jarg1_);
  public final static native String error_code_message(long jarg1, error_code jarg1_);
  public final static native void error_code_unspecified_bool_true();
  public final static native boolean op_eq__SWIG_1(long jarg1, error_code jarg1_, long jarg2, error_code jarg2_);
  public final static native boolean op_lt__SWIG_1(long jarg1, error_code jarg1_, long jarg2, error_code jarg2_);
  public final static native void delete_error_code(long jarg1);
  public final static native boolean op_neq__SWIG_0(long jarg1, error_code jarg1_, long jarg2, error_code jarg2_);
  public final static native boolean op_neq__SWIG_1(long jarg1, error_condition jarg1_, long jarg2, error_condition jarg2_);
  public final static native boolean op_eq__SWIG_2(long jarg1, error_code jarg1_, long jarg2, error_condition jarg2_);
  public final static native boolean op_neq__SWIG_2(long jarg1, error_code jarg1_, long jarg2, error_condition jarg2_);
  public final static native boolean op_eq__SWIG_3(long jarg1, error_condition jarg1_, long jarg2, error_code jarg2_);
  public final static native boolean op_neq__SWIG_3(long jarg1, error_condition jarg1_, long jarg2, error_code jarg2_);
  public final static native long hash_value(long jarg1, error_code jarg1_);
  public final static native long make_error_code(int jarg1);
  public final static native long make_error_condition(int jarg1);
  public final static native int LIBTORRENT_VERSION_MAJOR_get();
  public final static native int LIBTORRENT_VERSION_MINOR_get();
  public final static native int LIBTORRENT_VERSION_TINY_get();
  public final static native int LIBTORRENT_VERSION_NUM_get();
  public final static native String LIBTORRENT_VERSION_get();
  public final static native String LIBTORRENT_REVISION_get();
  public final static native long get_libtorrent_category();
  public final static native long get_http_category();
  public final static native long system_category();
  public final static native long get_posix_category();
  public final static native long generic_category();
  public final static native long new_libtorrent_exception(long jarg1, error_code jarg1_);
  public final static native String libtorrent_exception_what(long jarg1, libtorrent_exception jarg1_);
  public final static native void delete_libtorrent_exception(long jarg1);
  public final static native long libtorrent_exception_error(long jarg1, libtorrent_exception jarg1_);
  public final static native long new_storage_error__SWIG_0();
  public final static native long new_storage_error__SWIG_1(long jarg1, error_code jarg1_);
  public final static native boolean storage_error_value(long jarg1, storage_error jarg1_);
  public final static native void storage_error_ec_set(long jarg1, storage_error jarg1_, long jarg2, error_code jarg2_);
  public final static native long storage_error_ec_get(long jarg1, storage_error jarg1_);
  public final static native void storage_error_file_set(long jarg1, storage_error jarg1_, int jarg2);
  public final static native int storage_error_file_get(long jarg1, storage_error jarg1_);
  public final static native void storage_error_operation_set(long jarg1, storage_error jarg1_, long jarg2);
  public final static native long storage_error_operation_get(long jarg1, storage_error jarg1_);
  public final static native String storage_error_operation_str(long jarg1, storage_error jarg1_);
  public final static native void delete_storage_error(long jarg1);
  public final static native long min_time();
  public final static native long max_time();
  public final static native long new_fingerprint(String jarg1, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native String fingerprint_to_string(long jarg1, fingerprint jarg1_);
  public final static native void fingerprint_name_set(long jarg1, fingerprint jarg1_, String jarg2);
  public final static native String fingerprint_name_get(long jarg1, fingerprint jarg1_);
  public final static native void fingerprint_major_version_set(long jarg1, fingerprint jarg1_, int jarg2);
  public final static native int fingerprint_major_version_get(long jarg1, fingerprint jarg1_);
  public final static native void fingerprint_minor_version_set(long jarg1, fingerprint jarg1_, int jarg2);
  public final static native int fingerprint_minor_version_get(long jarg1, fingerprint jarg1_);
  public final static native void fingerprint_revision_version_set(long jarg1, fingerprint jarg1_, int jarg2);
  public final static native int fingerprint_revision_version_get(long jarg1, fingerprint jarg1_);
  public final static native void fingerprint_tag_version_set(long jarg1, fingerprint jarg1_, int jarg2);
  public final static native int fingerprint_tag_version_get(long jarg1, fingerprint jarg1_);
  public final static native void delete_fingerprint(long jarg1);
  public final static native long new_bitfield__SWIG_0();
  public final static native long new_bitfield__SWIG_1(int jarg1);
  public final static native long new_bitfield__SWIG_2(int jarg1, boolean jarg2);
  public final static native long new_bitfield__SWIG_3(String jarg1, int jarg2);
  public final static native long new_bitfield__SWIG_4(long jarg1, bitfield jarg1_);
  public final static native void delete_bitfield(long jarg1);
  public final static native void bitfield_assign(long jarg1, bitfield jarg1_, String jarg2, int jarg3);
  public final static native boolean bitfield_op_get_at(long jarg1, bitfield jarg1_, int jarg2);
  public final static native boolean bitfield_get_bit(long jarg1, bitfield jarg1_, int jarg2);
  public final static native void bitfield_clear_bit(long jarg1, bitfield jarg1_, int jarg2);
  public final static native void bitfield_set_bit(long jarg1, bitfield jarg1_, int jarg2);
  public final static native boolean bitfield_all_set(long jarg1, bitfield jarg1_);
  public final static native boolean bitfield_none_set(long jarg1, bitfield jarg1_);
  public final static native int bitfield_size(long jarg1, bitfield jarg1_);
  public final static native int bitfield_num_words(long jarg1, bitfield jarg1_);
  public final static native boolean bitfield_empty(long jarg1, bitfield jarg1_);
  public final static native String bitfield_data(long jarg1, bitfield jarg1_);
  public final static native int bitfield_count(long jarg1, bitfield jarg1_);
  public final static native boolean bitfield_const_iterator___ref__(long jarg1, bitfield.const_iterator jarg1_);
  public final static native long new_bitfield_const_iterator();
  public final static native boolean bitfield_const_iterator_op_eq(long jarg1, bitfield.const_iterator jarg1_, long jarg2, bitfield.const_iterator jarg2_);
  public final static native boolean bitfield_const_iterator_op_neq(long jarg1, bitfield.const_iterator jarg1_, long jarg2, bitfield.const_iterator jarg2_);
  public final static native void delete_bitfield_const_iterator(long jarg1);
  public final static native long bitfield_begin(long jarg1, bitfield jarg1_);
  public final static native long bitfield_end(long jarg1, bitfield jarg1_);
  public final static native void bitfield_resize__SWIG_0(long jarg1, bitfield jarg1_, int jarg2, boolean jarg3);
  public final static native void bitfield_resize__SWIG_1(long jarg1, bitfield jarg1_, int jarg2);
  public final static native void bitfield_set_all(long jarg1, bitfield jarg1_);
  public final static native void bitfield_clear_all(long jarg1, bitfield jarg1_);
  public final static native void bitfield_clear(long jarg1, bitfield jarg1_);
  public final static native long new_stat_channel();
  public final static native void stat_channel_add(long jarg1, stat_channel jarg1_, int jarg2);
  public final static native void stat_channel_second_tick(long jarg1, stat_channel jarg1_, int jarg2);
  public final static native int stat_channel_rate(long jarg1, stat_channel jarg1_);
  public final static native int stat_channel_low_pass_rate(long jarg1, stat_channel jarg1_);
  public final static native long stat_channel_total(long jarg1, stat_channel jarg1_);
  public final static native void stat_channel_offset(long jarg1, stat_channel jarg1_, long jarg2);
  public final static native int stat_channel_counter(long jarg1, stat_channel jarg1_);
  public final static native void stat_channel_clear(long jarg1, stat_channel jarg1_);
  public final static native void delete_stat_channel(long jarg1);
  public final static native void stat_sent_syn(long jarg1, stat jarg1_, boolean jarg2);
  public final static native void stat_received_synack(long jarg1, stat jarg1_, boolean jarg2);
  public final static native void stat_received_bytes(long jarg1, stat jarg1_, int jarg2, int jarg3);
  public final static native void stat_sent_bytes(long jarg1, stat jarg1_, int jarg2, int jarg3);
  public final static native void stat_trancieve_ip_packet(long jarg1, stat jarg1_, int jarg2, boolean jarg3);
  public final static native int stat_upload_ip_overhead(long jarg1, stat jarg1_);
  public final static native int stat_download_ip_overhead(long jarg1, stat jarg1_);
  public final static native void stat_second_tick(long jarg1, stat jarg1_, int jarg2);
  public final static native int stat_low_pass_upload_rate(long jarg1, stat jarg1_);
  public final static native int stat_low_pass_download_rate(long jarg1, stat jarg1_);
  public final static native int stat_upload_rate(long jarg1, stat jarg1_);
  public final static native int stat_download_rate(long jarg1, stat jarg1_);
  public final static native long stat_total_upload(long jarg1, stat jarg1_);
  public final static native long stat_total_download(long jarg1, stat jarg1_);
  public final static native int stat_upload_payload_rate(long jarg1, stat jarg1_);
  public final static native int stat_download_payload_rate(long jarg1, stat jarg1_);
  public final static native long stat_total_payload_upload(long jarg1, stat jarg1_);
  public final static native long stat_total_payload_download(long jarg1, stat jarg1_);
  public final static native long stat_total_protocol_upload(long jarg1, stat jarg1_);
  public final static native long stat_total_protocol_download(long jarg1, stat jarg1_);
  public final static native long stat_total_transfer(long jarg1, stat jarg1_, int jarg2);
  public final static native int stat_transfer_rate(long jarg1, stat jarg1_, int jarg2);
  public final static native void stat_add_stat(long jarg1, stat jarg1_, long jarg2, long jarg3);
  public final static native int stat_last_payload_downloaded(long jarg1, stat jarg1_);
  public final static native int stat_last_payload_uploaded(long jarg1, stat jarg1_);
  public final static native int stat_last_protocol_downloaded(long jarg1, stat jarg1_);
  public final static native int stat_last_protocol_uploaded(long jarg1, stat jarg1_);
  public final static native int stat_upload_payload_get();
  public final static native int stat_upload_protocol_get();
  public final static native int stat_download_payload_get();
  public final static native int stat_download_protocol_get();
  public final static native int stat_upload_ip_protocol_get();
  public final static native int stat_download_ip_protocol_get();
  public final static native int stat_num_channels_get();
  public final static native void stat_clear(long jarg1, stat jarg1_);
  public final static native long stat_op_get_at(long jarg1, stat jarg1_, int jarg2);
  public final static native long new_stat();
  public final static native void delete_stat(long jarg1);
  public final static native void peer_request_piece_set(long jarg1, peer_request jarg1_, int jarg2);
  public final static native int peer_request_piece_get(long jarg1, peer_request jarg1_);
  public final static native void peer_request_start_set(long jarg1, peer_request jarg1_, int jarg2);
  public final static native int peer_request_start_get(long jarg1, peer_request jarg1_);
  public final static native void peer_request_length_set(long jarg1, peer_request jarg1_, int jarg2);
  public final static native int peer_request_length_get(long jarg1, peer_request jarg1_);
  public final static native boolean peer_request_op_eq(long jarg1, peer_request jarg1_, long jarg2, peer_request jarg2_);
  public final static native long new_peer_request();
  public final static native void delete_peer_request(long jarg1);
  public final static native long new_type_error(String jarg1);
  public final static native void delete_type_error(long jarg1);
  public final static native int entry_type(long jarg1, entry jarg1_);
  public final static native long new_entry__SWIG_0(long jarg1, string_entry_map jarg1_);
  public final static native long new_entry__SWIG_1(String jarg1);
  public final static native long new_entry__SWIG_2(long jarg1, entry_list jarg1_);
  public final static native long new_entry__SWIG_3(long jarg1);
  public final static native long new_entry__SWIG_4(int jarg1);
  public final static native long new_entry__SWIG_5(long jarg1, entry jarg1_);
  public final static native long new_entry__SWIG_6();
  public final static native void delete_entry(long jarg1);
  public final static native boolean entry_op_eq(long jarg1, entry jarg1_, long jarg2, entry jarg2_);
  public final static native boolean entry_op_neq(long jarg1, entry jarg1_, long jarg2, entry jarg2_);
  public final static native long entry_integer(long jarg1, entry jarg1_);
  public final static native String entry_string(long jarg1, entry jarg1_);
  public final static native long entry_list(long jarg1, entry jarg1_);
  public final static native long entry_dict(long jarg1, entry jarg1_);
  public final static native void entry_swap(long jarg1, entry jarg1_, long jarg2, entry jarg2_);
  public final static native long entry_op_get_at(long jarg1, entry jarg1_, String jarg2);
  public final static native long entry_find_key(long jarg1, entry jarg1_, String jarg2);
  public final static native String entry_to_string(long jarg1, entry jarg1_);
  public final static native void entry_m_type_queried_set(long jarg1, entry jarg1_, short jarg2);
  public final static native short entry_m_type_queried_get(long jarg1, entry jarg1_);
  public final static native long entry_bencode(long jarg1, entry jarg1_);
  public final static native long entry_bdecode(long jarg1, char_vector jarg1_);
  public final static native void throw_type_error();
  public final static native int sha1_hash_size_get();
  public final static native long new_sha1_hash__SWIG_0();
  public final static native long sha1_hash_max();
  public final static native long sha1_hash_min();
  public final static native long new_sha1_hash__SWIG_1(String jarg1);
  public final static native void sha1_hash_assign(long jarg1, sha1_hash jarg1_, String jarg2);
  public final static native void sha1_hash_clear(long jarg1, sha1_hash jarg1_);
  public final static native boolean sha1_hash_is_all_zeros(long jarg1, sha1_hash jarg1_);
  public final static native boolean sha1_hash_op_eq(long jarg1, sha1_hash jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native boolean sha1_hash_op_neq(long jarg1, sha1_hash jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native boolean sha1_hash_op_lt(long jarg1, sha1_hash jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native String sha1_hash_to_string(long jarg1, sha1_hash jarg1_);
  public final static native String sha1_hash_to_hex(long jarg1, sha1_hash jarg1_);
  public final static native boolean sha1_hash_from_hex(String jarg1, long jarg2, sha1_hash jarg2_);
  public final static native void delete_sha1_hash(long jarg1);
  public final static native long new_storage_params();
  public final static native void storage_params_files_set(long jarg1, storage_params jarg1_, long jarg2, file_storage jarg2_);
  public final static native long storage_params_files_get(long jarg1, storage_params jarg1_);
  public final static native void storage_params_mapped_files_set(long jarg1, storage_params jarg1_, long jarg2, file_storage jarg2_);
  public final static native long storage_params_mapped_files_get(long jarg1, storage_params jarg1_);
  public final static native void storage_params_path_set(long jarg1, storage_params jarg1_, String jarg2);
  public final static native String storage_params_path_get(long jarg1, storage_params jarg1_);
  public final static native void storage_params_mode_set(long jarg1, storage_params jarg1_, int jarg2);
  public final static native int storage_params_mode_get(long jarg1, storage_params jarg1_);
  public final static native void storage_params_priorities_set(long jarg1, storage_params jarg1_, long jarg2, unsigned_char_vector jarg2_);
  public final static native long storage_params_priorities_get(long jarg1, storage_params jarg1_);
  public final static native void storage_params_info_set(long jarg1, storage_params jarg1_, long jarg2, torrent_info jarg2_);
  public final static native long storage_params_info_get(long jarg1, storage_params jarg1_);
  public final static native void delete_storage_params(long jarg1);
  public final static native void zero_storage_initialize(long jarg1, zero_storage jarg1_, long jarg2, storage_error jarg2_);
  public final static native boolean zero_storage_has_any_file(long jarg1, zero_storage jarg1_, long jarg2, storage_error jarg2_);
  public final static native void zero_storage_set_file_priority(long jarg1, zero_storage jarg1_, long jarg2, unsigned_char_vector jarg2_, long jarg3, storage_error jarg3_);
  public final static native int zero_storage_move_storage(long jarg1, zero_storage jarg1_, String jarg2, int jarg3, long jarg4, storage_error jarg4_);
  public final static native boolean zero_storage_verify_resume_data(long jarg1, zero_storage jarg1_, long jarg2, bdecode_node jarg2_, long jarg3, string_vector jarg3_, long jarg4, storage_error jarg4_);
  public final static native void zero_storage_write_resume_data(long jarg1, zero_storage jarg1_, long jarg2, entry jarg2_, long jarg3, storage_error jarg3_);
  public final static native void zero_storage_release_files(long jarg1, zero_storage jarg1_, long jarg2, storage_error jarg2_);
  public final static native void zero_storage_rename_file(long jarg1, zero_storage jarg1_, int jarg2, String jarg3, long jarg4, storage_error jarg4_);
  public final static native void zero_storage_delete_files(long jarg1, zero_storage jarg1_, long jarg2, storage_error jarg2_);
  public final static native long new_zero_storage();
  public final static native void delete_zero_storage(long jarg1);
  public final static native void file_slice_file_index_set(long jarg1, file_slice jarg1_, int jarg2);
  public final static native int file_slice_file_index_get(long jarg1, file_slice jarg1_);
  public final static native void file_slice_offset_set(long jarg1, file_slice jarg1_, long jarg2);
  public final static native long file_slice_offset_get(long jarg1, file_slice jarg1_);
  public final static native void file_slice_size_set(long jarg1, file_slice jarg1_, long jarg2);
  public final static native long file_slice_size_get(long jarg1, file_slice jarg1_);
  public final static native long new_file_slice();
  public final static native void delete_file_slice(long jarg1);
  public final static native long new_file_storage__SWIG_0();
  public final static native void delete_file_storage(long jarg1);
  public final static native long new_file_storage__SWIG_1(long jarg1, file_storage jarg1_);
  public final static native boolean file_storage_is_valid(long jarg1, file_storage jarg1_);
  public final static native int file_storage_pad_file_get();
  public final static native int file_storage_attribute_hidden_get();
  public final static native int file_storage_attribute_executable_get();
  public final static native int file_storage_attribute_symlink_get();
  public final static native void file_storage_reserve(long jarg1, file_storage jarg1_, int jarg2);
  public final static native void file_storage_add_file_borrow__SWIG_0(long jarg1, file_storage jarg1_, String jarg2, int jarg3, String jarg4, long jarg5, long jarg6, String jarg7, long jarg8, String jarg9);
  public final static native void file_storage_add_file_borrow__SWIG_1(long jarg1, file_storage jarg1_, String jarg2, int jarg3, String jarg4, long jarg5, long jarg6, String jarg7, long jarg8);
  public final static native void file_storage_add_file_borrow__SWIG_2(long jarg1, file_storage jarg1_, String jarg2, int jarg3, String jarg4, long jarg5, long jarg6, String jarg7);
  public final static native void file_storage_add_file_borrow__SWIG_3(long jarg1, file_storage jarg1_, String jarg2, int jarg3, String jarg4, long jarg5, long jarg6);
  public final static native void file_storage_add_file_borrow__SWIG_4(long jarg1, file_storage jarg1_, String jarg2, int jarg3, String jarg4, long jarg5);
  public final static native void file_storage_add_file__SWIG_0(long jarg1, file_storage jarg1_, String jarg2, long jarg3, int jarg4, int jarg5, String jarg6);
  public final static native void file_storage_add_file__SWIG_1(long jarg1, file_storage jarg1_, String jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void file_storage_add_file__SWIG_2(long jarg1, file_storage jarg1_, String jarg2, long jarg3, int jarg4);
  public final static native void file_storage_add_file__SWIG_3(long jarg1, file_storage jarg1_, String jarg2, long jarg3);
  public final static native void file_storage_rename_file(long jarg1, file_storage jarg1_, int jarg2, String jarg3);
  public final static native long file_storage_map_block(long jarg1, file_storage jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native long file_storage_map_file(long jarg1, file_storage jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native int file_storage_num_files(long jarg1, file_storage jarg1_);
  public final static native long file_storage_total_size(long jarg1, file_storage jarg1_);
  public final static native void file_storage_set_num_pieces(long jarg1, file_storage jarg1_, int jarg2);
  public final static native int file_storage_num_pieces(long jarg1, file_storage jarg1_);
  public final static native void file_storage_set_piece_length(long jarg1, file_storage jarg1_, int jarg2);
  public final static native int file_storage_piece_length(long jarg1, file_storage jarg1_);
  public final static native int file_storage_piece_size(long jarg1, file_storage jarg1_, int jarg2);
  public final static native void file_storage_set_name(long jarg1, file_storage jarg1_, String jarg2);
  public final static native String file_storage_name(long jarg1, file_storage jarg1_);
  public final static native void file_storage_swap(long jarg1, file_storage jarg1_, long jarg2, file_storage jarg2_);
  public final static native void file_storage_unload(long jarg1, file_storage jarg1_);
  public final static native boolean file_storage_is_loaded(long jarg1, file_storage jarg1_);
  public final static native void file_storage_optimize__SWIG_0(long jarg1, file_storage jarg1_, int jarg2, int jarg3, boolean jarg4);
  public final static native void file_storage_optimize__SWIG_1(long jarg1, file_storage jarg1_, int jarg2, int jarg3);
  public final static native void file_storage_optimize__SWIG_2(long jarg1, file_storage jarg1_, int jarg2);
  public final static native void file_storage_optimize__SWIG_3(long jarg1, file_storage jarg1_);
  public final static native long file_storage_hash(long jarg1, file_storage jarg1_, int jarg2);
  public final static native String file_storage_symlink(long jarg1, file_storage jarg1_, int jarg2);
  public final static native int file_storage_mtime(long jarg1, file_storage jarg1_, int jarg2);
  public final static native String file_storage_file_path__SWIG_0(long jarg1, file_storage jarg1_, int jarg2, String jarg3);
  public final static native String file_storage_file_path__SWIG_1(long jarg1, file_storage jarg1_, int jarg2);
  public final static native String file_storage_file_name(long jarg1, file_storage jarg1_, int jarg2);
  public final static native long file_storage_file_size(long jarg1, file_storage jarg1_, int jarg2);
  public final static native boolean file_storage_pad_file_at(long jarg1, file_storage jarg1_, int jarg2);
  public final static native long file_storage_file_offset(long jarg1, file_storage jarg1_, int jarg2);
  public final static native long file_storage_file_path_hash(long jarg1, file_storage jarg1_, int jarg2, String jarg3);
  public final static native int file_storage_flag_pad_file_get();
  public final static native int file_storage_flag_hidden_get();
  public final static native int file_storage_flag_executable_get();
  public final static native int file_storage_flag_symlink_get();
  public final static native long file_storage_paths(long jarg1, file_storage jarg1_);
  public final static native int file_storage_file_flags(long jarg1, file_storage jarg1_, int jarg2);
  public final static native int file_storage_file_index_at_offset(long jarg1, file_storage jarg1_, long jarg2);
  public final static native String file_storage_file_name_ptr(long jarg1, file_storage jarg1_, int jarg2);
  public final static native int file_storage_file_name_len(long jarg1, file_storage jarg1_, int jarg2);
  public final static native void sanitize_append_path_element(String jarg1, String jarg2, int jarg3);
  public final static native boolean verify_encoding__SWIG_0(String jarg1, boolean jarg2);
  public final static native boolean verify_encoding__SWIG_1(String jarg1);
  public final static native int tracker_retry_delay_min_get();
  public final static native int tracker_retry_delay_max_get();
  public final static native long new_announce_entry__SWIG_0(String jarg1);
  public final static native long new_announce_entry__SWIG_1();
  public final static native void delete_announce_entry(long jarg1);
  public final static native void announce_entry_url_set(long jarg1, announce_entry jarg1_, String jarg2);
  public final static native String announce_entry_url_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_trackerid_set(long jarg1, announce_entry jarg1_, String jarg2);
  public final static native String announce_entry_trackerid_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_message_set(long jarg1, announce_entry jarg1_, String jarg2);
  public final static native String announce_entry_message_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_last_error_set(long jarg1, announce_entry jarg1_, long jarg2, error_code jarg2_);
  public final static native long announce_entry_last_error_get(long jarg1, announce_entry jarg1_);
  public final static native int announce_entry_next_announce_in(long jarg1, announce_entry jarg1_);
  public final static native int announce_entry_min_announce_in(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_next_announce_set(long jarg1, announce_entry jarg1_, long jarg2, high_resolution_clock.time_point jarg2_);
  public final static native long announce_entry_next_announce_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_min_announce_set(long jarg1, announce_entry jarg1_, long jarg2, high_resolution_clock.time_point jarg2_);
  public final static native long announce_entry_min_announce_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_scrape_incomplete_set(long jarg1, announce_entry jarg1_, int jarg2);
  public final static native int announce_entry_scrape_incomplete_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_scrape_complete_set(long jarg1, announce_entry jarg1_, int jarg2);
  public final static native int announce_entry_scrape_complete_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_scrape_downloaded_set(long jarg1, announce_entry jarg1_, int jarg2);
  public final static native int announce_entry_scrape_downloaded_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_tier_set(long jarg1, announce_entry jarg1_, short jarg2);
  public final static native short announce_entry_tier_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_fail_limit_set(long jarg1, announce_entry jarg1_, short jarg2);
  public final static native short announce_entry_fail_limit_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_fails_set(long jarg1, announce_entry jarg1_, short jarg2);
  public final static native short announce_entry_fails_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_updating_set(long jarg1, announce_entry jarg1_, boolean jarg2);
  public final static native boolean announce_entry_updating_get(long jarg1, announce_entry jarg1_);
  public final static native int announce_entry_source_torrent_get();
  public final static native int announce_entry_source_client_get();
  public final static native int announce_entry_source_magnet_link_get();
  public final static native int announce_entry_source_tex_get();
  public final static native void announce_entry_source_set(long jarg1, announce_entry jarg1_, short jarg2);
  public final static native short announce_entry_source_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_verified_set(long jarg1, announce_entry jarg1_, boolean jarg2);
  public final static native boolean announce_entry_verified_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_start_sent_set(long jarg1, announce_entry jarg1_, boolean jarg2);
  public final static native boolean announce_entry_start_sent_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_complete_sent_set(long jarg1, announce_entry jarg1_, boolean jarg2);
  public final static native boolean announce_entry_complete_sent_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_send_stats_set(long jarg1, announce_entry jarg1_, boolean jarg2);
  public final static native boolean announce_entry_send_stats_get(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_reset(long jarg1, announce_entry jarg1_);
  public final static native boolean announce_entry_can_announce(long jarg1, announce_entry jarg1_, long jarg2, high_resolution_clock.time_point jarg2_, boolean jarg3);
  public final static native boolean announce_entry_is_working(long jarg1, announce_entry jarg1_);
  public final static native void announce_entry_trim(long jarg1, announce_entry jarg1_);
  public final static native long new_web_seed_entry__SWIG_0(String jarg1, int jarg2, String jarg3, long jarg4, string_string_pair_vector jarg4_);
  public final static native long new_web_seed_entry__SWIG_1(String jarg1, int jarg2, String jarg3);
  public final static native long new_web_seed_entry__SWIG_2(String jarg1, int jarg2);
  public final static native boolean web_seed_entry_op_eq(long jarg1, web_seed_entry jarg1_, long jarg2, web_seed_entry jarg2_);
  public final static native boolean web_seed_entry_op_lt(long jarg1, web_seed_entry jarg1_, long jarg2, web_seed_entry jarg2_);
  public final static native void web_seed_entry_url_set(long jarg1, web_seed_entry jarg1_, String jarg2);
  public final static native String web_seed_entry_url_get(long jarg1, web_seed_entry jarg1_);
  public final static native void web_seed_entry_auth_set(long jarg1, web_seed_entry jarg1_, String jarg2);
  public final static native String web_seed_entry_auth_get(long jarg1, web_seed_entry jarg1_);
  public final static native void web_seed_entry_extra_headers_set(long jarg1, web_seed_entry jarg1_, long jarg2, string_string_pair_vector jarg2_);
  public final static native long web_seed_entry_extra_headers_get(long jarg1, web_seed_entry jarg1_);
  public final static native void web_seed_entry_type_set(long jarg1, web_seed_entry jarg1_, short jarg2);
  public final static native short web_seed_entry_type_get(long jarg1, web_seed_entry jarg1_);
  public final static native void delete_web_seed_entry(long jarg1);
  public final static native long new_torrent_info__SWIG_0(long jarg1, bdecode_node jarg1_, int jarg2);
  public final static native long new_torrent_info__SWIG_1(long jarg1, bdecode_node jarg1_);
  public final static native long new_torrent_info__SWIG_2(String jarg1, int jarg2);
  public final static native long new_torrent_info__SWIG_3(String jarg1);
  public final static native long new_torrent_info__SWIG_4(long jarg1, torrent_info jarg1_);
  public final static native long new_torrent_info__SWIG_5(long jarg1, sha1_hash jarg1_, int jarg2);
  public final static native long new_torrent_info__SWIG_6(long jarg1, sha1_hash jarg1_);
  public final static native long new_torrent_info__SWIG_7(long jarg1, bdecode_node jarg1_, long jarg2, error_code jarg2_, int jarg3);
  public final static native long new_torrent_info__SWIG_8(long jarg1, bdecode_node jarg1_, long jarg2, error_code jarg2_);
  public final static native long new_torrent_info__SWIG_9(String jarg1, long jarg2, error_code jarg2_, int jarg3);
  public final static native long new_torrent_info__SWIG_10(String jarg1, long jarg2, error_code jarg2_);
  public final static native void delete_torrent_info(long jarg1);
  public final static native long torrent_info_files(long jarg1, torrent_info jarg1_);
  public final static native long torrent_info_orig_files(long jarg1, torrent_info jarg1_);
  public final static native void torrent_info_rename_file(long jarg1, torrent_info jarg1_, int jarg2, String jarg3);
  public final static native void torrent_info_remap_files(long jarg1, torrent_info jarg1_, long jarg2, file_storage jarg2_);
  public final static native void torrent_info_add_tracker__SWIG_0(long jarg1, torrent_info jarg1_, String jarg2, int jarg3);
  public final static native void torrent_info_add_tracker__SWIG_1(long jarg1, torrent_info jarg1_, String jarg2);
  public final static native long torrent_info_trackers(long jarg1, torrent_info jarg1_);
  public final static native long torrent_info_similar_torrents(long jarg1, torrent_info jarg1_);
  public final static native long torrent_info_collections(long jarg1, torrent_info jarg1_);
  public final static native void torrent_info_add_url_seed__SWIG_0(long jarg1, torrent_info jarg1_, String jarg2, String jarg3, long jarg4, string_string_pair_vector jarg4_);
  public final static native void torrent_info_add_url_seed__SWIG_1(long jarg1, torrent_info jarg1_, String jarg2, String jarg3);
  public final static native void torrent_info_add_url_seed__SWIG_2(long jarg1, torrent_info jarg1_, String jarg2);
  public final static native void torrent_info_add_http_seed__SWIG_0(long jarg1, torrent_info jarg1_, String jarg2, String jarg3, long jarg4, string_string_pair_vector jarg4_);
  public final static native void torrent_info_add_http_seed__SWIG_1(long jarg1, torrent_info jarg1_, String jarg2, String jarg3);
  public final static native void torrent_info_add_http_seed__SWIG_2(long jarg1, torrent_info jarg1_, String jarg2);
  public final static native long torrent_info_web_seeds(long jarg1, torrent_info jarg1_);
  public final static native long torrent_info_total_size(long jarg1, torrent_info jarg1_);
  public final static native int torrent_info_piece_length(long jarg1, torrent_info jarg1_);
  public final static native int torrent_info_num_pieces(long jarg1, torrent_info jarg1_);
  public final static native long torrent_info_info_hash(long jarg1, torrent_info jarg1_);
  public final static native int torrent_info_num_files(long jarg1, torrent_info jarg1_);
  public final static native long torrent_info_map_block(long jarg1, torrent_info jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native long torrent_info_map_file(long jarg1, torrent_info jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native void torrent_info_load(long jarg1, torrent_info jarg1_, String jarg2, int jarg3, long jarg4, error_code jarg4_);
  public final static native void torrent_info_unload(long jarg1, torrent_info jarg1_);
  public final static native String torrent_info_ssl_cert(long jarg1, torrent_info jarg1_);
  public final static native boolean torrent_info_is_valid(long jarg1, torrent_info jarg1_);
  public final static native boolean torrent_info_priv(long jarg1, torrent_info jarg1_);
  public final static native boolean torrent_info_is_i2p(long jarg1, torrent_info jarg1_);
  public final static native int torrent_info_piece_size(long jarg1, torrent_info jarg1_, int jarg2);
  public final static native long torrent_info_hash_for_piece(long jarg1, torrent_info jarg1_, int jarg2);
  public final static native String torrent_info_hash_for_piece_ptr(long jarg1, torrent_info jarg1_, int jarg2);
  public final static native boolean torrent_info_is_loaded(long jarg1, torrent_info jarg1_);
  public final static native long torrent_info_merkle_tree(long jarg1, torrent_info jarg1_);
  public final static native void torrent_info_set_merkle_tree(long jarg1, torrent_info jarg1_, long jarg2, sha1_hash_vector jarg2_);
  public final static native String torrent_info_name(long jarg1, torrent_info jarg1_);
  public final static native String torrent_info_creator(long jarg1, torrent_info jarg1_);
  public final static native String torrent_info_comment(long jarg1, torrent_info jarg1_);
  public final static native long torrent_info_nodes(long jarg1, torrent_info jarg1_);
  public final static native void torrent_info_add_node(long jarg1, torrent_info jarg1_, long jarg2, string_int_pair jarg2_);
  public final static native boolean torrent_info_parse_info_section(long jarg1, torrent_info jarg1_, long jarg2, bdecode_node jarg2_, long jarg3, error_code jarg3_, int jarg4);
  public final static native long torrent_info_info(long jarg1, torrent_info jarg1_, String jarg2);
  public final static native void torrent_info_swap(long jarg1, torrent_info jarg1_, long jarg2, torrent_info jarg2_);
  public final static native int torrent_info_metadata_size(long jarg1, torrent_info jarg1_);
  public final static native boolean torrent_info_add_merkle_nodes(long jarg1, torrent_info jarg1_, long jarg2, int_sha1_hash_map jarg2_, int jarg3);
  public final static native long torrent_info_build_merkle_list(long jarg1, torrent_info jarg1_, int jarg2);
  public final static native boolean torrent_info_is_merkle_torrent(long jarg1, torrent_info jarg1_);
  public final static native boolean torrent_info_parse_torrent_file(long jarg1, torrent_info jarg1_, long jarg2, bdecode_node jarg2_, long jarg3, error_code jarg3_, int jarg4);
  public final static native int torrent_info_get_creation_date(long jarg1, torrent_info jarg1_);
  public final static native long torrent_info_copy(long jarg1, torrent_info jarg1_);
  public final static native void throw_invalid_handle();
  public final static native void block_info_set_peer(long jarg1, block_info jarg1_, long jarg2, tcp_endpoint jarg2_);
  public final static native long block_info_peer(long jarg1, block_info jarg1_);
  public final static native void block_info_bytes_progress_set(long jarg1, block_info jarg1_, long jarg2);
  public final static native long block_info_bytes_progress_get(long jarg1, block_info jarg1_);
  public final static native void block_info_block_size_set(long jarg1, block_info jarg1_, long jarg2);
  public final static native long block_info_block_size_get(long jarg1, block_info jarg1_);
  public final static native void block_info_state_set(long jarg1, block_info jarg1_, long jarg2);
  public final static native long block_info_state_get(long jarg1, block_info jarg1_);
  public final static native void block_info_num_peers_set(long jarg1, block_info jarg1_, long jarg2);
  public final static native long block_info_num_peers_get(long jarg1, block_info jarg1_);
  public final static native long new_block_info();
  public final static native void delete_block_info(long jarg1);
  public final static native void partial_piece_info_piece_index_set(long jarg1, partial_piece_info jarg1_, int jarg2);
  public final static native int partial_piece_info_piece_index_get(long jarg1, partial_piece_info jarg1_);
  public final static native void partial_piece_info_blocks_in_piece_set(long jarg1, partial_piece_info jarg1_, int jarg2);
  public final static native int partial_piece_info_blocks_in_piece_get(long jarg1, partial_piece_info jarg1_);
  public final static native void partial_piece_info_finished_set(long jarg1, partial_piece_info jarg1_, int jarg2);
  public final static native int partial_piece_info_finished_get(long jarg1, partial_piece_info jarg1_);
  public final static native void partial_piece_info_writing_set(long jarg1, partial_piece_info jarg1_, int jarg2);
  public final static native int partial_piece_info_writing_get(long jarg1, partial_piece_info jarg1_);
  public final static native void partial_piece_info_requested_set(long jarg1, partial_piece_info jarg1_, int jarg2);
  public final static native int partial_piece_info_requested_get(long jarg1, partial_piece_info jarg1_);
  public final static native void partial_piece_info_blocks_set(long jarg1, partial_piece_info jarg1_, long jarg2, block_info jarg2_);
  public final static native long partial_piece_info_blocks_get(long jarg1, partial_piece_info jarg1_);
  public final static native void partial_piece_info_piece_state_set(long jarg1, partial_piece_info jarg1_, int jarg2);
  public final static native int partial_piece_info_piece_state_get(long jarg1, partial_piece_info jarg1_);
  public final static native long new_partial_piece_info();
  public final static native void delete_partial_piece_info(long jarg1);
  public final static native long new_torrent_handle__SWIG_0();
  public final static native long new_torrent_handle__SWIG_1(long jarg1, torrent_handle jarg1_);
  public final static native int torrent_handle_overwrite_existing_get();
  public final static native void torrent_handle_add_piece__SWIG_0(long jarg1, torrent_handle jarg1_, int jarg2, String jarg3, int jarg4);
  public final static native void torrent_handle_add_piece__SWIG_1(long jarg1, torrent_handle jarg1_, int jarg2, String jarg3);
  public final static native void torrent_handle_read_piece(long jarg1, torrent_handle jarg1_, int jarg2);
  public final static native boolean torrent_handle_have_piece(long jarg1, torrent_handle jarg1_, int jarg2);
  public final static native void torrent_handle_get_full_peer_list(long jarg1, torrent_handle jarg1_, long jarg2, peer_list_entry_vector jarg2_);
  public final static native void torrent_handle_get_peer_info(long jarg1, torrent_handle jarg1_, long jarg2, peer_info_vector jarg2_);
  public final static native int torrent_handle_query_distributed_copies_get();
  public final static native int torrent_handle_query_accurate_download_counters_get();
  public final static native int torrent_handle_query_last_seen_complete_get();
  public final static native int torrent_handle_query_pieces_get();
  public final static native int torrent_handle_query_verified_pieces_get();
  public final static native int torrent_handle_query_torrent_file_get();
  public final static native int torrent_handle_query_name_get();
  public final static native int torrent_handle_query_save_path_get();
  public final static native long torrent_handle_status__SWIG_0(long jarg1, torrent_handle jarg1_, long jarg2);
  public final static native long torrent_handle_status__SWIG_1(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_get_download_queue(long jarg1, torrent_handle jarg1_, long jarg2, partial_piece_info_vector jarg2_);
  public final static native int torrent_handle_alert_when_available_get();
  public final static native void torrent_handle_set_piece_deadline__SWIG_0(long jarg1, torrent_handle jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void torrent_handle_set_piece_deadline__SWIG_1(long jarg1, torrent_handle jarg1_, int jarg2, int jarg3);
  public final static native void torrent_handle_reset_piece_deadline(long jarg1, torrent_handle jarg1_, int jarg2);
  public final static native void torrent_handle_clear_piece_deadlines(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_set_priority(long jarg1, torrent_handle jarg1_, int jarg2);
  public final static native int torrent_handle_piece_granularity_get();
  public final static native void torrent_handle_file_progress__SWIG_0(long jarg1, torrent_handle jarg1_, long jarg2, int64_vector jarg2_, int jarg3);
  public final static native void torrent_handle_file_progress__SWIG_1(long jarg1, torrent_handle jarg1_, long jarg2, int64_vector jarg2_);
  public final static native void torrent_handle_clear_error(long jarg1, torrent_handle jarg1_);
  public final static native long torrent_handle_trackers(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_replace_trackers(long jarg1, torrent_handle jarg1_, long jarg2, announce_entry_vector jarg2_);
  public final static native void torrent_handle_add_tracker(long jarg1, torrent_handle jarg1_, long jarg2, announce_entry jarg2_);
  public final static native void torrent_handle_add_url_seed(long jarg1, torrent_handle jarg1_, String jarg2);
  public final static native void torrent_handle_remove_url_seed(long jarg1, torrent_handle jarg1_, String jarg2);
  public final static native void torrent_handle_add_http_seed(long jarg1, torrent_handle jarg1_, String jarg2);
  public final static native void torrent_handle_remove_http_seed(long jarg1, torrent_handle jarg1_, String jarg2);
  public final static native boolean torrent_handle_set_metadata(long jarg1, torrent_handle jarg1_, String jarg2, int jarg3);
  public final static native boolean torrent_handle_is_valid(long jarg1, torrent_handle jarg1_);
  public final static native int torrent_handle_graceful_pause_get();
  public final static native void torrent_handle_pause__SWIG_0(long jarg1, torrent_handle jarg1_, int jarg2);
  public final static native void torrent_handle_pause__SWIG_1(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_resume(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_set_upload_mode(long jarg1, torrent_handle jarg1_, boolean jarg2);
  public final static native void torrent_handle_set_share_mode(long jarg1, torrent_handle jarg1_, boolean jarg2);
  public final static native void torrent_handle_flush_cache(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_apply_ip_filter(long jarg1, torrent_handle jarg1_, boolean jarg2);
  public final static native void torrent_handle_force_recheck(long jarg1, torrent_handle jarg1_);
  public final static native int torrent_handle_flush_disk_cache_get();
  public final static native int torrent_handle_save_info_dict_get();
  public final static native int torrent_handle_only_if_modified_get();
  public final static native void torrent_handle_save_resume_data__SWIG_0(long jarg1, torrent_handle jarg1_, int jarg2);
  public final static native void torrent_handle_save_resume_data__SWIG_1(long jarg1, torrent_handle jarg1_);
  public final static native boolean torrent_handle_need_save_resume_data(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_auto_managed(long jarg1, torrent_handle jarg1_, boolean jarg2);
  public final static native int torrent_handle_queue_position(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_queue_position_up(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_queue_position_down(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_queue_position_top(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_queue_position_bottom(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_resolve_countries__SWIG_0(long jarg1, torrent_handle jarg1_, boolean jarg2);
  public final static native boolean torrent_handle_resolve_countries__SWIG_1(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_set_ssl_certificate__SWIG_0(long jarg1, torrent_handle jarg1_, String jarg2, String jarg3, String jarg4, String jarg5);
  public final static native void torrent_handle_set_ssl_certificate__SWIG_1(long jarg1, torrent_handle jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void torrent_handle_set_ssl_certificate_buffer(long jarg1, torrent_handle jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native long torrent_handle_torrent_file(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_piece_availability(long jarg1, torrent_handle jarg1_, long jarg2, int_vector jarg2_);
  public final static native void torrent_handle_piece_priority__SWIG_0(long jarg1, torrent_handle jarg1_, int jarg2, int jarg3);
  public final static native int torrent_handle_piece_priority__SWIG_1(long jarg1, torrent_handle jarg1_, int jarg2);
  public final static native void torrent_handle_prioritize_pieces__SWIG_0(long jarg1, torrent_handle jarg1_, long jarg2, int_vector jarg2_);
  public final static native void torrent_handle_prioritize_pieces__SWIG_1(long jarg1, torrent_handle jarg1_, long jarg2, int_int_pair_vector jarg2_);
  public final static native long torrent_handle_piece_priorities(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_file_priority__SWIG_0(long jarg1, torrent_handle jarg1_, int jarg2, int jarg3);
  public final static native int torrent_handle_file_priority__SWIG_1(long jarg1, torrent_handle jarg1_, int jarg2);
  public final static native void torrent_handle_prioritize_files(long jarg1, torrent_handle jarg1_, long jarg2, int_vector jarg2_);
  public final static native long torrent_handle_file_priorities(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_force_reannounce__SWIG_0(long jarg1, torrent_handle jarg1_, int jarg2, int jarg3);
  public final static native void torrent_handle_force_reannounce__SWIG_1(long jarg1, torrent_handle jarg1_, int jarg2);
  public final static native void torrent_handle_force_reannounce__SWIG_2(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_force_dht_announce(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_scrape_tracker(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_set_upload_limit(long jarg1, torrent_handle jarg1_, int jarg2);
  public final static native int torrent_handle_upload_limit(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_set_download_limit(long jarg1, torrent_handle jarg1_, int jarg2);
  public final static native int torrent_handle_download_limit(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_set_pinned(long jarg1, torrent_handle jarg1_, boolean jarg2);
  public final static native void torrent_handle_set_sequential_download(long jarg1, torrent_handle jarg1_, boolean jarg2);
  public final static native void torrent_handle_connect_peer__SWIG_0(long jarg1, torrent_handle jarg1_, long jarg2, tcp_endpoint jarg2_, int jarg3, int jarg4);
  public final static native void torrent_handle_connect_peer__SWIG_1(long jarg1, torrent_handle jarg1_, long jarg2, tcp_endpoint jarg2_, int jarg3);
  public final static native void torrent_handle_connect_peer__SWIG_2(long jarg1, torrent_handle jarg1_, long jarg2, tcp_endpoint jarg2_);
  public final static native void torrent_handle_set_max_uploads(long jarg1, torrent_handle jarg1_, int jarg2);
  public final static native int torrent_handle_max_uploads(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_set_max_connections(long jarg1, torrent_handle jarg1_, int jarg2);
  public final static native int torrent_handle_max_connections(long jarg1, torrent_handle jarg1_);
  public final static native void torrent_handle_set_tracker_login(long jarg1, torrent_handle jarg1_, String jarg2, String jarg3);
  public final static native void torrent_handle_move_storage__SWIG_0(long jarg1, torrent_handle jarg1_, String jarg2, int jarg3);
  public final static native void torrent_handle_move_storage__SWIG_1(long jarg1, torrent_handle jarg1_, String jarg2);
  public final static native void torrent_handle_rename_file(long jarg1, torrent_handle jarg1_, int jarg2, String jarg3);
  public final static native void torrent_handle_super_seeding(long jarg1, torrent_handle jarg1_, boolean jarg2);
  public final static native long torrent_handle_info_hash(long jarg1, torrent_handle jarg1_);
  public final static native boolean torrent_handle_op_eq(long jarg1, torrent_handle jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native boolean torrent_handle_op_neq(long jarg1, torrent_handle jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native boolean torrent_handle_op_lt(long jarg1, torrent_handle jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native long torrent_handle_id(long jarg1, torrent_handle jarg1_);
  public final static native void delete_torrent_handle(long jarg1);
  public final static native long new_torrent_status();
  public final static native void delete_torrent_status(long jarg1);
  public final static native boolean torrent_status_op_eq(long jarg1, torrent_status jarg1_, long jarg2, torrent_status jarg2_);
  public final static native void torrent_status_handle_set(long jarg1, torrent_status jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native long torrent_status_handle_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_error_set(long jarg1, torrent_status jarg1_, String jarg2);
  public final static native String torrent_status_error_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_save_path_set(long jarg1, torrent_status jarg1_, String jarg2);
  public final static native String torrent_status_save_path_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_name_set(long jarg1, torrent_status jarg1_, String jarg2);
  public final static native String torrent_status_name_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_next_announce_set(long jarg1, torrent_status jarg1_, long jarg2, high_resolution_clock.duration jarg2_);
  public final static native long torrent_status_next_announce_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_deprecated_announce_interval__set(long jarg1, torrent_status jarg1_, long jarg2, high_resolution_clock.duration jarg2_);
  public final static native long torrent_status_deprecated_announce_interval__get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_current_tracker_set(long jarg1, torrent_status jarg1_, String jarg2);
  public final static native String torrent_status_current_tracker_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_total_download_set(long jarg1, torrent_status jarg1_, long jarg2);
  public final static native long torrent_status_total_download_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_total_upload_set(long jarg1, torrent_status jarg1_, long jarg2);
  public final static native long torrent_status_total_upload_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_total_payload_download_set(long jarg1, torrent_status jarg1_, long jarg2);
  public final static native long torrent_status_total_payload_download_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_total_payload_upload_set(long jarg1, torrent_status jarg1_, long jarg2);
  public final static native long torrent_status_total_payload_upload_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_total_failed_bytes_set(long jarg1, torrent_status jarg1_, long jarg2);
  public final static native long torrent_status_total_failed_bytes_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_total_redundant_bytes_set(long jarg1, torrent_status jarg1_, long jarg2);
  public final static native long torrent_status_total_redundant_bytes_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_pieces_set(long jarg1, torrent_status jarg1_, long jarg2, bitfield jarg2_);
  public final static native long torrent_status_pieces_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_verified_pieces_set(long jarg1, torrent_status jarg1_, long jarg2, bitfield jarg2_);
  public final static native long torrent_status_verified_pieces_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_total_done_set(long jarg1, torrent_status jarg1_, long jarg2);
  public final static native long torrent_status_total_done_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_total_wanted_done_set(long jarg1, torrent_status jarg1_, long jarg2);
  public final static native long torrent_status_total_wanted_done_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_total_wanted_set(long jarg1, torrent_status jarg1_, long jarg2);
  public final static native long torrent_status_total_wanted_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_all_time_upload_set(long jarg1, torrent_status jarg1_, long jarg2);
  public final static native long torrent_status_all_time_upload_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_all_time_download_set(long jarg1, torrent_status jarg1_, long jarg2);
  public final static native long torrent_status_all_time_download_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_added_time_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_added_time_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_completed_time_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_completed_time_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_last_seen_complete_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_last_seen_complete_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_storage_mode_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_storage_mode_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_progress_set(long jarg1, torrent_status jarg1_, float jarg2);
  public final static native float torrent_status_progress_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_progress_ppm_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_progress_ppm_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_queue_position_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_queue_position_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_download_rate_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_download_rate_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_upload_rate_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_upload_rate_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_download_payload_rate_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_download_payload_rate_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_upload_payload_rate_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_upload_payload_rate_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_num_seeds_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_num_seeds_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_num_peers_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_num_peers_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_num_complete_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_num_complete_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_num_incomplete_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_num_incomplete_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_list_seeds_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_list_seeds_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_list_peers_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_list_peers_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_connect_candidates_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_connect_candidates_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_num_pieces_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_num_pieces_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_distributed_full_copies_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_distributed_full_copies_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_distributed_fraction_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_distributed_fraction_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_distributed_copies_set(long jarg1, torrent_status jarg1_, float jarg2);
  public final static native float torrent_status_distributed_copies_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_block_size_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_block_size_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_num_uploads_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_num_uploads_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_num_connections_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_num_connections_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_uploads_limit_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_uploads_limit_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_connections_limit_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_connections_limit_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_up_bandwidth_queue_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_up_bandwidth_queue_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_down_bandwidth_queue_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_down_bandwidth_queue_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_time_since_upload_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_time_since_upload_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_time_since_download_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_time_since_download_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_active_time_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_active_time_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_finished_time_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_finished_time_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_seeding_time_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_seeding_time_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_seed_rank_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_seed_rank_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_last_scrape_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_last_scrape_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_priority_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_priority_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_state_set(long jarg1, torrent_status jarg1_, int jarg2);
  public final static native int torrent_status_state_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_need_save_resume_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_need_save_resume_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_ip_filter_applies_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_ip_filter_applies_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_upload_mode_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_upload_mode_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_share_mode_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_share_mode_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_super_seeding_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_super_seeding_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_paused_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_paused_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_auto_managed_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_auto_managed_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_sequential_download_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_sequential_download_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_is_seeding_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_is_seeding_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_is_finished_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_is_finished_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_has_metadata_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_has_metadata_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_has_incoming_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_has_incoming_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_seed_mode_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_seed_mode_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_moving_storage_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_moving_storage_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_is_loaded_set(long jarg1, torrent_status jarg1_, boolean jarg2);
  public final static native boolean torrent_status_is_loaded_get(long jarg1, torrent_status jarg1_);
  public final static native void torrent_status_info_hash_set(long jarg1, torrent_status jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long torrent_status_info_hash_get(long jarg1, torrent_status jarg1_);
  public final static native int add_torrent_params_flag_seed_mode_get();
  public final static native int add_torrent_params_flag_override_resume_data_get();
  public final static native int add_torrent_params_flag_upload_mode_get();
  public final static native int add_torrent_params_flag_share_mode_get();
  public final static native int add_torrent_params_flag_apply_ip_filter_get();
  public final static native int add_torrent_params_flag_paused_get();
  public final static native int add_torrent_params_flag_auto_managed_get();
  public final static native int add_torrent_params_flag_duplicate_is_error_get();
  public final static native int add_torrent_params_flag_merge_resume_trackers_get();
  public final static native int add_torrent_params_flag_update_subscribe_get();
  public final static native int add_torrent_params_flag_super_seeding_get();
  public final static native int add_torrent_params_flag_sequential_download_get();
  public final static native int add_torrent_params_flag_use_resume_save_path_get();
  public final static native int add_torrent_params_flag_pinned_get();
  public final static native int add_torrent_params_default_flags_get();
  public final static native void add_torrent_params_version_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_version_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_ti_set(long jarg1, add_torrent_params jarg1_, long jarg2, torrent_info jarg2_);
  public final static native long add_torrent_params_ti_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_trackers_set(long jarg1, add_torrent_params jarg1_, long jarg2, string_vector jarg2_);
  public final static native long add_torrent_params_trackers_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_url_seeds_set(long jarg1, add_torrent_params jarg1_, long jarg2, string_vector jarg2_);
  public final static native long add_torrent_params_url_seeds_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_dht_nodes_set(long jarg1, add_torrent_params jarg1_, long jarg2, string_int_pair_vector jarg2_);
  public final static native long add_torrent_params_dht_nodes_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_name_set(long jarg1, add_torrent_params jarg1_, String jarg2);
  public final static native String add_torrent_params_name_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_save_path_set(long jarg1, add_torrent_params jarg1_, String jarg2);
  public final static native String add_torrent_params_save_path_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_resume_data_set(long jarg1, add_torrent_params jarg1_, long jarg2, char_vector jarg2_);
  public final static native long add_torrent_params_resume_data_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_storage_mode_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_storage_mode_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_file_priorities_set(long jarg1, add_torrent_params jarg1_, long jarg2, unsigned_char_vector jarg2_);
  public final static native long add_torrent_params_file_priorities_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_trackerid_set(long jarg1, add_torrent_params jarg1_, String jarg2);
  public final static native String add_torrent_params_trackerid_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_url_set(long jarg1, add_torrent_params jarg1_, String jarg2);
  public final static native String add_torrent_params_url_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_uuid_set(long jarg1, add_torrent_params jarg1_, String jarg2);
  public final static native String add_torrent_params_uuid_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_source_feed_url_set(long jarg1, add_torrent_params jarg1_, String jarg2);
  public final static native String add_torrent_params_source_feed_url_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_info_hash_set(long jarg1, add_torrent_params jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long add_torrent_params_info_hash_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_max_uploads_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_max_uploads_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_max_connections_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_max_connections_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_upload_limit_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_upload_limit_get(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_download_limit_set(long jarg1, add_torrent_params jarg1_, int jarg2);
  public final static native int add_torrent_params_download_limit_get(long jarg1, add_torrent_params jarg1_);
  public final static native long add_torrent_params_getFlags(long jarg1, add_torrent_params jarg1_);
  public final static native void add_torrent_params_setFlags(long jarg1, add_torrent_params jarg1_, long jarg2);
  public final static native long add_torrent_params_create_instance();
  public final static native long add_torrent_params_create_instance_no_storage();
  public final static native void delete_add_torrent_params(long jarg1);
  public final static native int op_bittorrent_get();
  public final static native void stats_metric_name_set(long jarg1, stats_metric jarg1_, String jarg2);
  public final static native String stats_metric_name_get(long jarg1, stats_metric jarg1_);
  public final static native void stats_metric_value_index_set(long jarg1, stats_metric jarg1_, int jarg2);
  public final static native int stats_metric_value_index_get(long jarg1, stats_metric jarg1_);
  public final static native int stats_metric_type_counter_get();
  public final static native int stats_metric_type_gauge_get();
  public final static native void stats_metric_type_set(long jarg1, stats_metric jarg1_, int jarg2);
  public final static native int stats_metric_type_get(long jarg1, stats_metric jarg1_);
  public final static native long new_stats_metric();
  public final static native void delete_stats_metric(long jarg1);
  public final static native long session_stats_metrics();
  public final static native int find_metric_idx(String jarg1);
  public final static native int counters_num_checking_torrents_get();
  public final static native int counters_num_gauges_counters_get();
  public final static native long new_counters__SWIG_0();
  public final static native long new_counters__SWIG_1(long jarg1, counters jarg1_);
  public final static native long counters_inc_stats_counter__SWIG_0(long jarg1, counters jarg1_, int jarg2, long jarg3);
  public final static native long counters_inc_stats_counter__SWIG_1(long jarg1, counters jarg1_, int jarg2);
  public final static native long counters_op_get_at(long jarg1, counters jarg1_, int jarg2);
  public final static native void counters_set_value(long jarg1, counters jarg1_, int jarg2, long jarg3);
  public final static native void counters_blend_stats_counter(long jarg1, counters jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native void delete_counters(long jarg1);
  public final static native int close_no_reason_get();
  public final static native int close_encryption_error_get();
  public final static native int error_to_close_reason(long jarg1, error_code jarg1_);
  public final static native int TORRENT_MAX_ALERT_TYPES_get();
  public final static native int alert_error_notification_get();
  public final static native int alert_peer_notification_get();
  public final static native int alert_port_mapping_notification_get();
  public final static native int alert_storage_notification_get();
  public final static native int alert_tracker_notification_get();
  public final static native int alert_debug_notification_get();
  public final static native int alert_status_notification_get();
  public final static native int alert_progress_notification_get();
  public final static native int alert_ip_block_notification_get();
  public final static native int alert_performance_warning_get();
  public final static native int alert_dht_notification_get();
  public final static native int alert_stats_notification_get();
  public final static native int alert_session_log_notification_get();
  public final static native int alert_torrent_log_notification_get();
  public final static native int alert_peer_log_notification_get();
  public final static native int alert_incoming_request_notification_get();
  public final static native int alert_dht_log_notification_get();
  public final static native int alert_dht_operation_notification_get();
  public final static native int alert_all_categories_get();
  public final static native void delete_alert(long jarg1);
  public final static native long alert_timestamp(long jarg1, alert jarg1_);
  public final static native int alert_type(long jarg1, alert jarg1_);
  public final static native String alert_what(long jarg1, alert jarg1_);
  public final static native String alert_message(long jarg1, alert jarg1_);
  public final static native int alert_category(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_torrent_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_peer_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_tracker_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_torrent_added_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_torrent_removed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_read_piece_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_file_completed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_file_renamed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_file_rename_failed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_performance_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_state_changed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_tracker_error_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_tracker_warning_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_scrape_reply_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_scrape_failed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_tracker_reply_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_dht_reply_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_tracker_announce_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_hash_failed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_peer_ban_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_peer_unsnubbed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_peer_snubbed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_peer_error_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_peer_connect_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_peer_disconnected_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_invalid_request_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_torrent_finished_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_piece_finished_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_request_dropped_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_block_timeout_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_block_finished_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_block_downloading_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_unwanted_block_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_storage_moved_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_storage_moved_failed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_torrent_deleted_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_torrent_delete_failed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_save_resume_data_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_save_resume_data_failed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_torrent_paused_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_torrent_resumed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_torrent_checked_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_url_seed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_file_error_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_metadata_failed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_metadata_received_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_udp_error_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_external_ip_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_listen_failed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_listen_succeeded_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_portmap_error_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_portmap_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_portmap_log_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_fastresume_rejected_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_peer_blocked_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_dht_announce_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_dht_get_peers_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_stats_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_cache_flushed_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_anonymous_mode_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_lsd_peer_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_trackerid_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_dht_bootstrap_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_torrent_error_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_torrent_need_cert_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_incoming_connection_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_add_torrent_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_state_update_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_mmap_cache_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_session_stats_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_torrent_update_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_dht_error_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_dht_immutable_item_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_dht_mutable_item_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_dht_put_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_i2p_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_dht_outgoing_get_peers_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_log_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_torrent_log_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_peer_log_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_lsd_error_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_dht_stats_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_incoming_request_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_dht_log_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_dht_pkt_alert(long jarg1, alert jarg1_);
  public final static native long alert_cast_to_dht_get_peers_reply_alert(long jarg1, alert jarg1_);
  public final static native String operation_name(int jarg1);
  public final static native int user_alert_id_get();
  public final static native int torrent_alert_alert_type_get();
  public final static native String torrent_alert_message(long jarg1, torrent_alert jarg1_);
  public final static native void torrent_alert_handle_set(long jarg1, torrent_alert jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native long torrent_alert_handle_get(long jarg1, torrent_alert jarg1_);
  public final static native String torrent_alert_torrent_name(long jarg1, torrent_alert jarg1_);
  public final static native void delete_torrent_alert(long jarg1);
  public final static native int peer_alert_alert_type_get();
  public final static native int peer_alert_static_category_get();
  public final static native int peer_alert_category(long jarg1, peer_alert jarg1_);
  public final static native String peer_alert_message(long jarg1, peer_alert jarg1_);
  public final static native void peer_alert_ip_set(long jarg1, peer_alert jarg1_, long jarg2, tcp_endpoint jarg2_);
  public final static native long peer_alert_ip_get(long jarg1, peer_alert jarg1_);
  public final static native void peer_alert_pid_set(long jarg1, peer_alert jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long peer_alert_pid_get(long jarg1, peer_alert jarg1_);
  public final static native void delete_peer_alert(long jarg1);
  public final static native int tracker_alert_alert_type_get();
  public final static native int tracker_alert_static_category_get();
  public final static native int tracker_alert_category(long jarg1, tracker_alert jarg1_);
  public final static native String tracker_alert_message(long jarg1, tracker_alert jarg1_);
  public final static native String tracker_alert_tracker_url(long jarg1, tracker_alert jarg1_);
  public final static native void delete_tracker_alert(long jarg1);
  public final static native long new_torrent_added_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native int torrent_added_alert_priority_get();
  public final static native int torrent_added_alert_alert_type_get();
  public final static native int torrent_added_alert_type(long jarg1, torrent_added_alert jarg1_);
  public final static native int torrent_added_alert_category(long jarg1, torrent_added_alert jarg1_);
  public final static native String torrent_added_alert_what(long jarg1, torrent_added_alert jarg1_);
  public final static native int torrent_added_alert_static_category_get();
  public final static native String torrent_added_alert_message(long jarg1, torrent_added_alert jarg1_);
  public final static native void delete_torrent_added_alert(long jarg1);
  public final static native long new_torrent_removed_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, sha1_hash jarg3_);
  public final static native int torrent_removed_alert_priority_get();
  public final static native int torrent_removed_alert_alert_type_get();
  public final static native int torrent_removed_alert_type(long jarg1, torrent_removed_alert jarg1_);
  public final static native int torrent_removed_alert_category(long jarg1, torrent_removed_alert jarg1_);
  public final static native String torrent_removed_alert_what(long jarg1, torrent_removed_alert jarg1_);
  public final static native int torrent_removed_alert_static_category_get();
  public final static native String torrent_removed_alert_message(long jarg1, torrent_removed_alert jarg1_);
  public final static native void torrent_removed_alert_info_hash_set(long jarg1, torrent_removed_alert jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long torrent_removed_alert_info_hash_get(long jarg1, torrent_removed_alert jarg1_);
  public final static native void delete_torrent_removed_alert(long jarg1);
  public final static native int read_piece_alert_priority_get();
  public final static native int read_piece_alert_alert_type_get();
  public final static native int read_piece_alert_type(long jarg1, read_piece_alert jarg1_);
  public final static native int read_piece_alert_category(long jarg1, read_piece_alert jarg1_);
  public final static native String read_piece_alert_what(long jarg1, read_piece_alert jarg1_);
  public final static native int read_piece_alert_static_category_get();
  public final static native String read_piece_alert_message(long jarg1, read_piece_alert jarg1_);
  public final static native void read_piece_alert_ec_set(long jarg1, read_piece_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long read_piece_alert_ec_get(long jarg1, read_piece_alert jarg1_);
  public final static native void read_piece_alert_piece_set(long jarg1, read_piece_alert jarg1_, int jarg2);
  public final static native int read_piece_alert_piece_get(long jarg1, read_piece_alert jarg1_);
  public final static native void read_piece_alert_size_set(long jarg1, read_piece_alert jarg1_, int jarg2);
  public final static native int read_piece_alert_size_get(long jarg1, read_piece_alert jarg1_);
  public final static native void delete_read_piece_alert(long jarg1);
  public final static native long new_file_completed_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, int jarg3);
  public final static native int file_completed_alert_priority_get();
  public final static native int file_completed_alert_alert_type_get();
  public final static native int file_completed_alert_type(long jarg1, file_completed_alert jarg1_);
  public final static native int file_completed_alert_category(long jarg1, file_completed_alert jarg1_);
  public final static native String file_completed_alert_what(long jarg1, file_completed_alert jarg1_);
  public final static native int file_completed_alert_static_category_get();
  public final static native String file_completed_alert_message(long jarg1, file_completed_alert jarg1_);
  public final static native void file_completed_alert_index_set(long jarg1, file_completed_alert jarg1_, int jarg2);
  public final static native int file_completed_alert_index_get(long jarg1, file_completed_alert jarg1_);
  public final static native void delete_file_completed_alert(long jarg1);
  public final static native long new_file_renamed_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, String jarg3, int jarg4);
  public final static native int file_renamed_alert_priority_get();
  public final static native int file_renamed_alert_alert_type_get();
  public final static native int file_renamed_alert_type(long jarg1, file_renamed_alert jarg1_);
  public final static native int file_renamed_alert_category(long jarg1, file_renamed_alert jarg1_);
  public final static native String file_renamed_alert_what(long jarg1, file_renamed_alert jarg1_);
  public final static native int file_renamed_alert_static_category_get();
  public final static native String file_renamed_alert_message(long jarg1, file_renamed_alert jarg1_);
  public final static native String file_renamed_alert_new_name(long jarg1, file_renamed_alert jarg1_);
  public final static native void file_renamed_alert_index_set(long jarg1, file_renamed_alert jarg1_, int jarg2);
  public final static native int file_renamed_alert_index_get(long jarg1, file_renamed_alert jarg1_);
  public final static native void delete_file_renamed_alert(long jarg1);
  public final static native long new_file_rename_failed_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, int jarg3, long jarg4, error_code jarg4_);
  public final static native int file_rename_failed_alert_priority_get();
  public final static native int file_rename_failed_alert_alert_type_get();
  public final static native int file_rename_failed_alert_type(long jarg1, file_rename_failed_alert jarg1_);
  public final static native int file_rename_failed_alert_category(long jarg1, file_rename_failed_alert jarg1_);
  public final static native String file_rename_failed_alert_what(long jarg1, file_rename_failed_alert jarg1_);
  public final static native int file_rename_failed_alert_static_category_get();
  public final static native String file_rename_failed_alert_message(long jarg1, file_rename_failed_alert jarg1_);
  public final static native void file_rename_failed_alert_index_set(long jarg1, file_rename_failed_alert jarg1_, int jarg2);
  public final static native int file_rename_failed_alert_index_get(long jarg1, file_rename_failed_alert jarg1_);
  public final static native void file_rename_failed_alert_error_set(long jarg1, file_rename_failed_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long file_rename_failed_alert_error_get(long jarg1, file_rename_failed_alert jarg1_);
  public final static native void delete_file_rename_failed_alert(long jarg1);
  public final static native long new_performance_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, int jarg3);
  public final static native int performance_alert_priority_get();
  public final static native int performance_alert_alert_type_get();
  public final static native int performance_alert_type(long jarg1, performance_alert jarg1_);
  public final static native int performance_alert_category(long jarg1, performance_alert jarg1_);
  public final static native String performance_alert_what(long jarg1, performance_alert jarg1_);
  public final static native int performance_alert_static_category_get();
  public final static native String performance_alert_message(long jarg1, performance_alert jarg1_);
  public final static native void performance_alert_warning_code_set(long jarg1, performance_alert jarg1_, int jarg2);
  public final static native int performance_alert_warning_code_get(long jarg1, performance_alert jarg1_);
  public final static native void delete_performance_alert(long jarg1);
  public final static native long new_state_changed_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, int jarg3, int jarg4);
  public final static native int state_changed_alert_priority_get();
  public final static native int state_changed_alert_alert_type_get();
  public final static native int state_changed_alert_type(long jarg1, state_changed_alert jarg1_);
  public final static native int state_changed_alert_category(long jarg1, state_changed_alert jarg1_);
  public final static native String state_changed_alert_what(long jarg1, state_changed_alert jarg1_);
  public final static native int state_changed_alert_static_category_get();
  public final static native String state_changed_alert_message(long jarg1, state_changed_alert jarg1_);
  public final static native void state_changed_alert_state_set(long jarg1, state_changed_alert jarg1_, int jarg2);
  public final static native int state_changed_alert_state_get(long jarg1, state_changed_alert jarg1_);
  public final static native void state_changed_alert_prev_state_set(long jarg1, state_changed_alert jarg1_, int jarg2);
  public final static native int state_changed_alert_prev_state_get(long jarg1, state_changed_alert jarg1_);
  public final static native void delete_state_changed_alert(long jarg1);
  public final static native long new_tracker_error_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, int jarg3, int jarg4, String jarg5, long jarg6, error_code jarg6_, String jarg7);
  public final static native int tracker_error_alert_priority_get();
  public final static native int tracker_error_alert_alert_type_get();
  public final static native int tracker_error_alert_type(long jarg1, tracker_error_alert jarg1_);
  public final static native int tracker_error_alert_category(long jarg1, tracker_error_alert jarg1_);
  public final static native String tracker_error_alert_what(long jarg1, tracker_error_alert jarg1_);
  public final static native int tracker_error_alert_static_category_get();
  public final static native String tracker_error_alert_message(long jarg1, tracker_error_alert jarg1_);
  public final static native void tracker_error_alert_times_in_row_set(long jarg1, tracker_error_alert jarg1_, int jarg2);
  public final static native int tracker_error_alert_times_in_row_get(long jarg1, tracker_error_alert jarg1_);
  public final static native void tracker_error_alert_status_code_set(long jarg1, tracker_error_alert jarg1_, int jarg2);
  public final static native int tracker_error_alert_status_code_get(long jarg1, tracker_error_alert jarg1_);
  public final static native void tracker_error_alert_error_set(long jarg1, tracker_error_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long tracker_error_alert_error_get(long jarg1, tracker_error_alert jarg1_);
  public final static native String tracker_error_alert_error_message(long jarg1, tracker_error_alert jarg1_);
  public final static native void delete_tracker_error_alert(long jarg1);
  public final static native long new_tracker_warning_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, String jarg3, String jarg4);
  public final static native int tracker_warning_alert_priority_get();
  public final static native int tracker_warning_alert_alert_type_get();
  public final static native int tracker_warning_alert_type(long jarg1, tracker_warning_alert jarg1_);
  public final static native int tracker_warning_alert_category(long jarg1, tracker_warning_alert jarg1_);
  public final static native String tracker_warning_alert_what(long jarg1, tracker_warning_alert jarg1_);
  public final static native int tracker_warning_alert_static_category_get();
  public final static native String tracker_warning_alert_message(long jarg1, tracker_warning_alert jarg1_);
  public final static native String tracker_warning_alert_warning_message(long jarg1, tracker_warning_alert jarg1_);
  public final static native void delete_tracker_warning_alert(long jarg1);
  public final static native long new_scrape_reply_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, int jarg3, int jarg4, String jarg5);
  public final static native int scrape_reply_alert_priority_get();
  public final static native int scrape_reply_alert_alert_type_get();
  public final static native int scrape_reply_alert_type(long jarg1, scrape_reply_alert jarg1_);
  public final static native int scrape_reply_alert_category(long jarg1, scrape_reply_alert jarg1_);
  public final static native String scrape_reply_alert_what(long jarg1, scrape_reply_alert jarg1_);
  public final static native String scrape_reply_alert_message(long jarg1, scrape_reply_alert jarg1_);
  public final static native void scrape_reply_alert_incomplete_set(long jarg1, scrape_reply_alert jarg1_, int jarg2);
  public final static native int scrape_reply_alert_incomplete_get(long jarg1, scrape_reply_alert jarg1_);
  public final static native void scrape_reply_alert_complete_set(long jarg1, scrape_reply_alert jarg1_, int jarg2);
  public final static native int scrape_reply_alert_complete_get(long jarg1, scrape_reply_alert jarg1_);
  public final static native void delete_scrape_reply_alert(long jarg1);
  public final static native long new_scrape_failed_alert__SWIG_0(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, String jarg3, long jarg4, error_code jarg4_);
  public final static native long new_scrape_failed_alert__SWIG_1(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, String jarg3, String jarg4);
  public final static native int scrape_failed_alert_priority_get();
  public final static native int scrape_failed_alert_alert_type_get();
  public final static native int scrape_failed_alert_type(long jarg1, scrape_failed_alert jarg1_);
  public final static native int scrape_failed_alert_category(long jarg1, scrape_failed_alert jarg1_);
  public final static native String scrape_failed_alert_what(long jarg1, scrape_failed_alert jarg1_);
  public final static native int scrape_failed_alert_static_category_get();
  public final static native String scrape_failed_alert_message(long jarg1, scrape_failed_alert jarg1_);
  public final static native void scrape_failed_alert_error_set(long jarg1, scrape_failed_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long scrape_failed_alert_error_get(long jarg1, scrape_failed_alert jarg1_);
  public final static native String scrape_failed_alert_error_message(long jarg1, scrape_failed_alert jarg1_);
  public final static native void delete_scrape_failed_alert(long jarg1);
  public final static native long new_tracker_reply_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, int jarg3, String jarg4);
  public final static native int tracker_reply_alert_priority_get();
  public final static native int tracker_reply_alert_alert_type_get();
  public final static native int tracker_reply_alert_type(long jarg1, tracker_reply_alert jarg1_);
  public final static native int tracker_reply_alert_category(long jarg1, tracker_reply_alert jarg1_);
  public final static native String tracker_reply_alert_what(long jarg1, tracker_reply_alert jarg1_);
  public final static native String tracker_reply_alert_message(long jarg1, tracker_reply_alert jarg1_);
  public final static native void tracker_reply_alert_num_peers_set(long jarg1, tracker_reply_alert jarg1_, int jarg2);
  public final static native int tracker_reply_alert_num_peers_get(long jarg1, tracker_reply_alert jarg1_);
  public final static native void delete_tracker_reply_alert(long jarg1);
  public final static native long new_dht_reply_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, int jarg3);
  public final static native int dht_reply_alert_priority_get();
  public final static native int dht_reply_alert_alert_type_get();
  public final static native int dht_reply_alert_type(long jarg1, dht_reply_alert jarg1_);
  public final static native int dht_reply_alert_category(long jarg1, dht_reply_alert jarg1_);
  public final static native String dht_reply_alert_what(long jarg1, dht_reply_alert jarg1_);
  public final static native String dht_reply_alert_message(long jarg1, dht_reply_alert jarg1_);
  public final static native void dht_reply_alert_num_peers_set(long jarg1, dht_reply_alert jarg1_, int jarg2);
  public final static native int dht_reply_alert_num_peers_get(long jarg1, dht_reply_alert jarg1_);
  public final static native void delete_dht_reply_alert(long jarg1);
  public final static native long new_tracker_announce_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, String jarg3, int jarg4);
  public final static native int tracker_announce_alert_priority_get();
  public final static native int tracker_announce_alert_alert_type_get();
  public final static native int tracker_announce_alert_type(long jarg1, tracker_announce_alert jarg1_);
  public final static native int tracker_announce_alert_category(long jarg1, tracker_announce_alert jarg1_);
  public final static native String tracker_announce_alert_what(long jarg1, tracker_announce_alert jarg1_);
  public final static native String tracker_announce_alert_message(long jarg1, tracker_announce_alert jarg1_);
  public final static native void tracker_announce_alert_event_set(long jarg1, tracker_announce_alert jarg1_, int jarg2);
  public final static native int tracker_announce_alert_event_get(long jarg1, tracker_announce_alert jarg1_);
  public final static native void delete_tracker_announce_alert(long jarg1);
  public final static native long new_hash_failed_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, int jarg3);
  public final static native int hash_failed_alert_priority_get();
  public final static native int hash_failed_alert_alert_type_get();
  public final static native int hash_failed_alert_type(long jarg1, hash_failed_alert jarg1_);
  public final static native int hash_failed_alert_category(long jarg1, hash_failed_alert jarg1_);
  public final static native String hash_failed_alert_what(long jarg1, hash_failed_alert jarg1_);
  public final static native int hash_failed_alert_static_category_get();
  public final static native String hash_failed_alert_message(long jarg1, hash_failed_alert jarg1_);
  public final static native void hash_failed_alert_piece_index_set(long jarg1, hash_failed_alert jarg1_, int jarg2);
  public final static native int hash_failed_alert_piece_index_get(long jarg1, hash_failed_alert jarg1_);
  public final static native void delete_hash_failed_alert(long jarg1);
  public final static native long new_peer_ban_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, tcp_endpoint jarg3_, long jarg4, sha1_hash jarg4_);
  public final static native int peer_ban_alert_priority_get();
  public final static native int peer_ban_alert_alert_type_get();
  public final static native int peer_ban_alert_type(long jarg1, peer_ban_alert jarg1_);
  public final static native int peer_ban_alert_category(long jarg1, peer_ban_alert jarg1_);
  public final static native String peer_ban_alert_what(long jarg1, peer_ban_alert jarg1_);
  public final static native String peer_ban_alert_message(long jarg1, peer_ban_alert jarg1_);
  public final static native void delete_peer_ban_alert(long jarg1);
  public final static native long new_peer_unsnubbed_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, tcp_endpoint jarg3_, long jarg4, sha1_hash jarg4_);
  public final static native int peer_unsnubbed_alert_priority_get();
  public final static native int peer_unsnubbed_alert_alert_type_get();
  public final static native int peer_unsnubbed_alert_type(long jarg1, peer_unsnubbed_alert jarg1_);
  public final static native int peer_unsnubbed_alert_category(long jarg1, peer_unsnubbed_alert jarg1_);
  public final static native String peer_unsnubbed_alert_what(long jarg1, peer_unsnubbed_alert jarg1_);
  public final static native String peer_unsnubbed_alert_message(long jarg1, peer_unsnubbed_alert jarg1_);
  public final static native void delete_peer_unsnubbed_alert(long jarg1);
  public final static native long new_peer_snubbed_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, tcp_endpoint jarg3_, long jarg4, sha1_hash jarg4_);
  public final static native int peer_snubbed_alert_priority_get();
  public final static native int peer_snubbed_alert_alert_type_get();
  public final static native int peer_snubbed_alert_type(long jarg1, peer_snubbed_alert jarg1_);
  public final static native int peer_snubbed_alert_category(long jarg1, peer_snubbed_alert jarg1_);
  public final static native String peer_snubbed_alert_what(long jarg1, peer_snubbed_alert jarg1_);
  public final static native String peer_snubbed_alert_message(long jarg1, peer_snubbed_alert jarg1_);
  public final static native void delete_peer_snubbed_alert(long jarg1);
  public final static native long new_peer_error_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, tcp_endpoint jarg3_, long jarg4, sha1_hash jarg4_, int jarg5, long jarg6, error_code jarg6_);
  public final static native int peer_error_alert_priority_get();
  public final static native int peer_error_alert_alert_type_get();
  public final static native int peer_error_alert_type(long jarg1, peer_error_alert jarg1_);
  public final static native int peer_error_alert_category(long jarg1, peer_error_alert jarg1_);
  public final static native String peer_error_alert_what(long jarg1, peer_error_alert jarg1_);
  public final static native int peer_error_alert_static_category_get();
  public final static native String peer_error_alert_message(long jarg1, peer_error_alert jarg1_);
  public final static native void peer_error_alert_operation_set(long jarg1, peer_error_alert jarg1_, int jarg2);
  public final static native int peer_error_alert_operation_get(long jarg1, peer_error_alert jarg1_);
  public final static native void peer_error_alert_error_set(long jarg1, peer_error_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long peer_error_alert_error_get(long jarg1, peer_error_alert jarg1_);
  public final static native void delete_peer_error_alert(long jarg1);
  public final static native long new_peer_connect_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, tcp_endpoint jarg3_, long jarg4, sha1_hash jarg4_, int jarg5);
  public final static native int peer_connect_alert_priority_get();
  public final static native int peer_connect_alert_alert_type_get();
  public final static native int peer_connect_alert_type(long jarg1, peer_connect_alert jarg1_);
  public final static native int peer_connect_alert_category(long jarg1, peer_connect_alert jarg1_);
  public final static native String peer_connect_alert_what(long jarg1, peer_connect_alert jarg1_);
  public final static native int peer_connect_alert_static_category_get();
  public final static native String peer_connect_alert_message(long jarg1, peer_connect_alert jarg1_);
  public final static native void peer_connect_alert_socket_type_set(long jarg1, peer_connect_alert jarg1_, int jarg2);
  public final static native int peer_connect_alert_socket_type_get(long jarg1, peer_connect_alert jarg1_);
  public final static native void delete_peer_connect_alert(long jarg1);
  public final static native long new_peer_disconnected_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, tcp_endpoint jarg3_, long jarg4, sha1_hash jarg4_, int jarg5, int jarg6, long jarg7, error_code jarg7_, int jarg8);
  public final static native int peer_disconnected_alert_priority_get();
  public final static native int peer_disconnected_alert_alert_type_get();
  public final static native int peer_disconnected_alert_type(long jarg1, peer_disconnected_alert jarg1_);
  public final static native int peer_disconnected_alert_category(long jarg1, peer_disconnected_alert jarg1_);
  public final static native String peer_disconnected_alert_what(long jarg1, peer_disconnected_alert jarg1_);
  public final static native int peer_disconnected_alert_static_category_get();
  public final static native String peer_disconnected_alert_message(long jarg1, peer_disconnected_alert jarg1_);
  public final static native void peer_disconnected_alert_socket_type_set(long jarg1, peer_disconnected_alert jarg1_, int jarg2);
  public final static native int peer_disconnected_alert_socket_type_get(long jarg1, peer_disconnected_alert jarg1_);
  public final static native void peer_disconnected_alert_operation_set(long jarg1, peer_disconnected_alert jarg1_, int jarg2);
  public final static native int peer_disconnected_alert_operation_get(long jarg1, peer_disconnected_alert jarg1_);
  public final static native void peer_disconnected_alert_error_set(long jarg1, peer_disconnected_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long peer_disconnected_alert_error_get(long jarg1, peer_disconnected_alert jarg1_);
  public final static native void peer_disconnected_alert_reason_set(long jarg1, peer_disconnected_alert jarg1_, int jarg2);
  public final static native int peer_disconnected_alert_reason_get(long jarg1, peer_disconnected_alert jarg1_);
  public final static native void delete_peer_disconnected_alert(long jarg1);
  public final static native long new_invalid_request_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, tcp_endpoint jarg3_, long jarg4, sha1_hash jarg4_, long jarg5, peer_request jarg5_, boolean jarg6, boolean jarg7, boolean jarg8);
  public final static native int invalid_request_alert_priority_get();
  public final static native int invalid_request_alert_alert_type_get();
  public final static native int invalid_request_alert_type(long jarg1, invalid_request_alert jarg1_);
  public final static native int invalid_request_alert_category(long jarg1, invalid_request_alert jarg1_);
  public final static native String invalid_request_alert_what(long jarg1, invalid_request_alert jarg1_);
  public final static native String invalid_request_alert_message(long jarg1, invalid_request_alert jarg1_);
  public final static native void invalid_request_alert_request_set(long jarg1, invalid_request_alert jarg1_, long jarg2, peer_request jarg2_);
  public final static native long invalid_request_alert_request_get(long jarg1, invalid_request_alert jarg1_);
  public final static native void invalid_request_alert_we_have_set(long jarg1, invalid_request_alert jarg1_, boolean jarg2);
  public final static native boolean invalid_request_alert_we_have_get(long jarg1, invalid_request_alert jarg1_);
  public final static native void invalid_request_alert_peer_interested_set(long jarg1, invalid_request_alert jarg1_, boolean jarg2);
  public final static native boolean invalid_request_alert_peer_interested_get(long jarg1, invalid_request_alert jarg1_);
  public final static native void invalid_request_alert_withheld_set(long jarg1, invalid_request_alert jarg1_, boolean jarg2);
  public final static native boolean invalid_request_alert_withheld_get(long jarg1, invalid_request_alert jarg1_);
  public final static native void delete_invalid_request_alert(long jarg1);
  public final static native long new_torrent_finished_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native int torrent_finished_alert_priority_get();
  public final static native int torrent_finished_alert_alert_type_get();
  public final static native int torrent_finished_alert_type(long jarg1, torrent_finished_alert jarg1_);
  public final static native int torrent_finished_alert_category(long jarg1, torrent_finished_alert jarg1_);
  public final static native String torrent_finished_alert_what(long jarg1, torrent_finished_alert jarg1_);
  public final static native int torrent_finished_alert_static_category_get();
  public final static native String torrent_finished_alert_message(long jarg1, torrent_finished_alert jarg1_);
  public final static native void delete_torrent_finished_alert(long jarg1);
  public final static native long new_piece_finished_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, int jarg3);
  public final static native int piece_finished_alert_priority_get();
  public final static native int piece_finished_alert_alert_type_get();
  public final static native int piece_finished_alert_type(long jarg1, piece_finished_alert jarg1_);
  public final static native int piece_finished_alert_category(long jarg1, piece_finished_alert jarg1_);
  public final static native String piece_finished_alert_what(long jarg1, piece_finished_alert jarg1_);
  public final static native int piece_finished_alert_static_category_get();
  public final static native String piece_finished_alert_message(long jarg1, piece_finished_alert jarg1_);
  public final static native void piece_finished_alert_piece_index_set(long jarg1, piece_finished_alert jarg1_, int jarg2);
  public final static native int piece_finished_alert_piece_index_get(long jarg1, piece_finished_alert jarg1_);
  public final static native void delete_piece_finished_alert(long jarg1);
  public final static native long new_request_dropped_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, tcp_endpoint jarg3_, long jarg4, sha1_hash jarg4_, int jarg5, int jarg6);
  public final static native int request_dropped_alert_priority_get();
  public final static native int request_dropped_alert_alert_type_get();
  public final static native int request_dropped_alert_type(long jarg1, request_dropped_alert jarg1_);
  public final static native int request_dropped_alert_category(long jarg1, request_dropped_alert jarg1_);
  public final static native String request_dropped_alert_what(long jarg1, request_dropped_alert jarg1_);
  public final static native int request_dropped_alert_static_category_get();
  public final static native String request_dropped_alert_message(long jarg1, request_dropped_alert jarg1_);
  public final static native void request_dropped_alert_block_index_set(long jarg1, request_dropped_alert jarg1_, int jarg2);
  public final static native int request_dropped_alert_block_index_get(long jarg1, request_dropped_alert jarg1_);
  public final static native void request_dropped_alert_piece_index_set(long jarg1, request_dropped_alert jarg1_, int jarg2);
  public final static native int request_dropped_alert_piece_index_get(long jarg1, request_dropped_alert jarg1_);
  public final static native void delete_request_dropped_alert(long jarg1);
  public final static native long new_block_timeout_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, tcp_endpoint jarg3_, long jarg4, sha1_hash jarg4_, int jarg5, int jarg6);
  public final static native int block_timeout_alert_priority_get();
  public final static native int block_timeout_alert_alert_type_get();
  public final static native int block_timeout_alert_type(long jarg1, block_timeout_alert jarg1_);
  public final static native int block_timeout_alert_category(long jarg1, block_timeout_alert jarg1_);
  public final static native String block_timeout_alert_what(long jarg1, block_timeout_alert jarg1_);
  public final static native int block_timeout_alert_static_category_get();
  public final static native String block_timeout_alert_message(long jarg1, block_timeout_alert jarg1_);
  public final static native void block_timeout_alert_block_index_set(long jarg1, block_timeout_alert jarg1_, int jarg2);
  public final static native int block_timeout_alert_block_index_get(long jarg1, block_timeout_alert jarg1_);
  public final static native void block_timeout_alert_piece_index_set(long jarg1, block_timeout_alert jarg1_, int jarg2);
  public final static native int block_timeout_alert_piece_index_get(long jarg1, block_timeout_alert jarg1_);
  public final static native void delete_block_timeout_alert(long jarg1);
  public final static native long new_block_finished_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, tcp_endpoint jarg3_, long jarg4, sha1_hash jarg4_, int jarg5, int jarg6);
  public final static native int block_finished_alert_priority_get();
  public final static native int block_finished_alert_alert_type_get();
  public final static native int block_finished_alert_type(long jarg1, block_finished_alert jarg1_);
  public final static native int block_finished_alert_category(long jarg1, block_finished_alert jarg1_);
  public final static native String block_finished_alert_what(long jarg1, block_finished_alert jarg1_);
  public final static native int block_finished_alert_static_category_get();
  public final static native String block_finished_alert_message(long jarg1, block_finished_alert jarg1_);
  public final static native void block_finished_alert_block_index_set(long jarg1, block_finished_alert jarg1_, int jarg2);
  public final static native int block_finished_alert_block_index_get(long jarg1, block_finished_alert jarg1_);
  public final static native void block_finished_alert_piece_index_set(long jarg1, block_finished_alert jarg1_, int jarg2);
  public final static native int block_finished_alert_piece_index_get(long jarg1, block_finished_alert jarg1_);
  public final static native void delete_block_finished_alert(long jarg1);
  public final static native long new_block_downloading_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, tcp_endpoint jarg3_, long jarg4, sha1_hash jarg4_, int jarg5, int jarg6);
  public final static native int block_downloading_alert_priority_get();
  public final static native int block_downloading_alert_alert_type_get();
  public final static native int block_downloading_alert_type(long jarg1, block_downloading_alert jarg1_);
  public final static native int block_downloading_alert_category(long jarg1, block_downloading_alert jarg1_);
  public final static native String block_downloading_alert_what(long jarg1, block_downloading_alert jarg1_);
  public final static native int block_downloading_alert_static_category_get();
  public final static native String block_downloading_alert_message(long jarg1, block_downloading_alert jarg1_);
  public final static native void block_downloading_alert_block_index_set(long jarg1, block_downloading_alert jarg1_, int jarg2);
  public final static native int block_downloading_alert_block_index_get(long jarg1, block_downloading_alert jarg1_);
  public final static native void block_downloading_alert_piece_index_set(long jarg1, block_downloading_alert jarg1_, int jarg2);
  public final static native int block_downloading_alert_piece_index_get(long jarg1, block_downloading_alert jarg1_);
  public final static native void delete_block_downloading_alert(long jarg1);
  public final static native long new_unwanted_block_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, tcp_endpoint jarg3_, long jarg4, sha1_hash jarg4_, int jarg5, int jarg6);
  public final static native int unwanted_block_alert_priority_get();
  public final static native int unwanted_block_alert_alert_type_get();
  public final static native int unwanted_block_alert_type(long jarg1, unwanted_block_alert jarg1_);
  public final static native int unwanted_block_alert_category(long jarg1, unwanted_block_alert jarg1_);
  public final static native String unwanted_block_alert_what(long jarg1, unwanted_block_alert jarg1_);
  public final static native String unwanted_block_alert_message(long jarg1, unwanted_block_alert jarg1_);
  public final static native void unwanted_block_alert_block_index_set(long jarg1, unwanted_block_alert jarg1_, int jarg2);
  public final static native int unwanted_block_alert_block_index_get(long jarg1, unwanted_block_alert jarg1_);
  public final static native void unwanted_block_alert_piece_index_set(long jarg1, unwanted_block_alert jarg1_, int jarg2);
  public final static native int unwanted_block_alert_piece_index_get(long jarg1, unwanted_block_alert jarg1_);
  public final static native void delete_unwanted_block_alert(long jarg1);
  public final static native long new_storage_moved_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, String jarg3);
  public final static native int storage_moved_alert_priority_get();
  public final static native int storage_moved_alert_alert_type_get();
  public final static native int storage_moved_alert_type(long jarg1, storage_moved_alert jarg1_);
  public final static native int storage_moved_alert_category(long jarg1, storage_moved_alert jarg1_);
  public final static native String storage_moved_alert_what(long jarg1, storage_moved_alert jarg1_);
  public final static native int storage_moved_alert_static_category_get();
  public final static native String storage_moved_alert_message(long jarg1, storage_moved_alert jarg1_);
  public final static native String storage_moved_alert_storage_path(long jarg1, storage_moved_alert jarg1_);
  public final static native void delete_storage_moved_alert(long jarg1);
  public final static native long new_storage_moved_failed_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, error_code jarg3_, String jarg4, String jarg5);
  public final static native int storage_moved_failed_alert_priority_get();
  public final static native int storage_moved_failed_alert_alert_type_get();
  public final static native int storage_moved_failed_alert_type(long jarg1, storage_moved_failed_alert jarg1_);
  public final static native int storage_moved_failed_alert_category(long jarg1, storage_moved_failed_alert jarg1_);
  public final static native String storage_moved_failed_alert_what(long jarg1, storage_moved_failed_alert jarg1_);
  public final static native int storage_moved_failed_alert_static_category_get();
  public final static native String storage_moved_failed_alert_message(long jarg1, storage_moved_failed_alert jarg1_);
  public final static native void storage_moved_failed_alert_error_set(long jarg1, storage_moved_failed_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long storage_moved_failed_alert_error_get(long jarg1, storage_moved_failed_alert jarg1_);
  public final static native String storage_moved_failed_alert_file_path(long jarg1, storage_moved_failed_alert jarg1_);
  public final static native void storage_moved_failed_alert_operation_set(long jarg1, storage_moved_failed_alert jarg1_, String jarg2);
  public final static native String storage_moved_failed_alert_operation_get(long jarg1, storage_moved_failed_alert jarg1_);
  public final static native void delete_storage_moved_failed_alert(long jarg1);
  public final static native long new_torrent_deleted_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, sha1_hash jarg3_);
  public final static native int torrent_deleted_alert_priority_get();
  public final static native int torrent_deleted_alert_alert_type_get();
  public final static native int torrent_deleted_alert_type(long jarg1, torrent_deleted_alert jarg1_);
  public final static native int torrent_deleted_alert_category(long jarg1, torrent_deleted_alert jarg1_);
  public final static native String torrent_deleted_alert_what(long jarg1, torrent_deleted_alert jarg1_);
  public final static native int torrent_deleted_alert_static_category_get();
  public final static native String torrent_deleted_alert_message(long jarg1, torrent_deleted_alert jarg1_);
  public final static native void torrent_deleted_alert_info_hash_set(long jarg1, torrent_deleted_alert jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long torrent_deleted_alert_info_hash_get(long jarg1, torrent_deleted_alert jarg1_);
  public final static native void delete_torrent_deleted_alert(long jarg1);
  public final static native long new_torrent_delete_failed_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, error_code jarg3_, long jarg4, sha1_hash jarg4_);
  public final static native int torrent_delete_failed_alert_priority_get();
  public final static native int torrent_delete_failed_alert_alert_type_get();
  public final static native int torrent_delete_failed_alert_type(long jarg1, torrent_delete_failed_alert jarg1_);
  public final static native int torrent_delete_failed_alert_category(long jarg1, torrent_delete_failed_alert jarg1_);
  public final static native String torrent_delete_failed_alert_what(long jarg1, torrent_delete_failed_alert jarg1_);
  public final static native int torrent_delete_failed_alert_static_category_get();
  public final static native String torrent_delete_failed_alert_message(long jarg1, torrent_delete_failed_alert jarg1_);
  public final static native void torrent_delete_failed_alert_error_set(long jarg1, torrent_delete_failed_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long torrent_delete_failed_alert_error_get(long jarg1, torrent_delete_failed_alert jarg1_);
  public final static native void torrent_delete_failed_alert_info_hash_set(long jarg1, torrent_delete_failed_alert jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long torrent_delete_failed_alert_info_hash_get(long jarg1, torrent_delete_failed_alert jarg1_);
  public final static native void delete_torrent_delete_failed_alert(long jarg1);
  public final static native long new_save_resume_data_alert(long jarg1, stack_allocator jarg1_, long jarg2, entry jarg2_, long jarg3, torrent_handle jarg3_);
  public final static native int save_resume_data_alert_priority_get();
  public final static native int save_resume_data_alert_alert_type_get();
  public final static native int save_resume_data_alert_type(long jarg1, save_resume_data_alert jarg1_);
  public final static native int save_resume_data_alert_category(long jarg1, save_resume_data_alert jarg1_);
  public final static native String save_resume_data_alert_what(long jarg1, save_resume_data_alert jarg1_);
  public final static native int save_resume_data_alert_static_category_get();
  public final static native String save_resume_data_alert_message(long jarg1, save_resume_data_alert jarg1_);
  public final static native void save_resume_data_alert_resume_data_set(long jarg1, save_resume_data_alert jarg1_, long jarg2, entry jarg2_);
  public final static native long save_resume_data_alert_resume_data_get(long jarg1, save_resume_data_alert jarg1_);
  public final static native void delete_save_resume_data_alert(long jarg1);
  public final static native long new_save_resume_data_failed_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, error_code jarg3_);
  public final static native int save_resume_data_failed_alert_priority_get();
  public final static native int save_resume_data_failed_alert_alert_type_get();
  public final static native int save_resume_data_failed_alert_type(long jarg1, save_resume_data_failed_alert jarg1_);
  public final static native int save_resume_data_failed_alert_category(long jarg1, save_resume_data_failed_alert jarg1_);
  public final static native String save_resume_data_failed_alert_what(long jarg1, save_resume_data_failed_alert jarg1_);
  public final static native int save_resume_data_failed_alert_static_category_get();
  public final static native String save_resume_data_failed_alert_message(long jarg1, save_resume_data_failed_alert jarg1_);
  public final static native void save_resume_data_failed_alert_error_set(long jarg1, save_resume_data_failed_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long save_resume_data_failed_alert_error_get(long jarg1, save_resume_data_failed_alert jarg1_);
  public final static native void delete_save_resume_data_failed_alert(long jarg1);
  public final static native long new_torrent_paused_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native int torrent_paused_alert_priority_get();
  public final static native int torrent_paused_alert_alert_type_get();
  public final static native int torrent_paused_alert_type(long jarg1, torrent_paused_alert jarg1_);
  public final static native int torrent_paused_alert_category(long jarg1, torrent_paused_alert jarg1_);
  public final static native String torrent_paused_alert_what(long jarg1, torrent_paused_alert jarg1_);
  public final static native int torrent_paused_alert_static_category_get();
  public final static native String torrent_paused_alert_message(long jarg1, torrent_paused_alert jarg1_);
  public final static native void delete_torrent_paused_alert(long jarg1);
  public final static native long new_torrent_resumed_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native int torrent_resumed_alert_priority_get();
  public final static native int torrent_resumed_alert_alert_type_get();
  public final static native int torrent_resumed_alert_type(long jarg1, torrent_resumed_alert jarg1_);
  public final static native int torrent_resumed_alert_category(long jarg1, torrent_resumed_alert jarg1_);
  public final static native String torrent_resumed_alert_what(long jarg1, torrent_resumed_alert jarg1_);
  public final static native int torrent_resumed_alert_static_category_get();
  public final static native String torrent_resumed_alert_message(long jarg1, torrent_resumed_alert jarg1_);
  public final static native void delete_torrent_resumed_alert(long jarg1);
  public final static native long new_torrent_checked_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native int torrent_checked_alert_priority_get();
  public final static native int torrent_checked_alert_alert_type_get();
  public final static native int torrent_checked_alert_type(long jarg1, torrent_checked_alert jarg1_);
  public final static native int torrent_checked_alert_category(long jarg1, torrent_checked_alert jarg1_);
  public final static native String torrent_checked_alert_what(long jarg1, torrent_checked_alert jarg1_);
  public final static native int torrent_checked_alert_static_category_get();
  public final static native String torrent_checked_alert_message(long jarg1, torrent_checked_alert jarg1_);
  public final static native void delete_torrent_checked_alert(long jarg1);
  public final static native long new_url_seed_alert__SWIG_0(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, String jarg3, long jarg4, error_code jarg4_);
  public final static native long new_url_seed_alert__SWIG_1(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, String jarg3, String jarg4);
  public final static native int url_seed_alert_priority_get();
  public final static native int url_seed_alert_alert_type_get();
  public final static native int url_seed_alert_type(long jarg1, url_seed_alert jarg1_);
  public final static native int url_seed_alert_category(long jarg1, url_seed_alert jarg1_);
  public final static native String url_seed_alert_what(long jarg1, url_seed_alert jarg1_);
  public final static native int url_seed_alert_static_category_get();
  public final static native String url_seed_alert_message(long jarg1, url_seed_alert jarg1_);
  public final static native void url_seed_alert_error_set(long jarg1, url_seed_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long url_seed_alert_error_get(long jarg1, url_seed_alert jarg1_);
  public final static native String url_seed_alert_server_url(long jarg1, url_seed_alert jarg1_);
  public final static native String url_seed_alert_error_message(long jarg1, url_seed_alert jarg1_);
  public final static native void delete_url_seed_alert(long jarg1);
  public final static native long new_file_error_alert(long jarg1, stack_allocator jarg1_, long jarg2, error_code jarg2_, String jarg3, String jarg4, long jarg5, torrent_handle jarg5_);
  public final static native int file_error_alert_priority_get();
  public final static native int file_error_alert_alert_type_get();
  public final static native int file_error_alert_type(long jarg1, file_error_alert jarg1_);
  public final static native int file_error_alert_category(long jarg1, file_error_alert jarg1_);
  public final static native String file_error_alert_what(long jarg1, file_error_alert jarg1_);
  public final static native int file_error_alert_static_category_get();
  public final static native String file_error_alert_message(long jarg1, file_error_alert jarg1_);
  public final static native void file_error_alert_error_set(long jarg1, file_error_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long file_error_alert_error_get(long jarg1, file_error_alert jarg1_);
  public final static native void file_error_alert_operation_set(long jarg1, file_error_alert jarg1_, String jarg2);
  public final static native String file_error_alert_operation_get(long jarg1, file_error_alert jarg1_);
  public final static native String file_error_alert_filename(long jarg1, file_error_alert jarg1_);
  public final static native void delete_file_error_alert(long jarg1);
  public final static native long new_metadata_failed_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, error_code jarg3_);
  public final static native int metadata_failed_alert_priority_get();
  public final static native int metadata_failed_alert_alert_type_get();
  public final static native int metadata_failed_alert_type(long jarg1, metadata_failed_alert jarg1_);
  public final static native int metadata_failed_alert_category(long jarg1, metadata_failed_alert jarg1_);
  public final static native String metadata_failed_alert_what(long jarg1, metadata_failed_alert jarg1_);
  public final static native int metadata_failed_alert_static_category_get();
  public final static native String metadata_failed_alert_message(long jarg1, metadata_failed_alert jarg1_);
  public final static native void metadata_failed_alert_error_set(long jarg1, metadata_failed_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long metadata_failed_alert_error_get(long jarg1, metadata_failed_alert jarg1_);
  public final static native void delete_metadata_failed_alert(long jarg1);
  public final static native long new_metadata_received_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native int metadata_received_alert_priority_get();
  public final static native int metadata_received_alert_alert_type_get();
  public final static native int metadata_received_alert_type(long jarg1, metadata_received_alert jarg1_);
  public final static native int metadata_received_alert_category(long jarg1, metadata_received_alert jarg1_);
  public final static native String metadata_received_alert_what(long jarg1, metadata_received_alert jarg1_);
  public final static native int metadata_received_alert_static_category_get();
  public final static native String metadata_received_alert_message(long jarg1, metadata_received_alert jarg1_);
  public final static native void delete_metadata_received_alert(long jarg1);
  public final static native long new_udp_error_alert(long jarg1, stack_allocator jarg1_, long jarg2, udp_endpoint jarg2_, long jarg3, error_code jarg3_);
  public final static native int udp_error_alert_priority_get();
  public final static native int udp_error_alert_alert_type_get();
  public final static native int udp_error_alert_type(long jarg1, udp_error_alert jarg1_);
  public final static native int udp_error_alert_category(long jarg1, udp_error_alert jarg1_);
  public final static native String udp_error_alert_what(long jarg1, udp_error_alert jarg1_);
  public final static native int udp_error_alert_static_category_get();
  public final static native String udp_error_alert_message(long jarg1, udp_error_alert jarg1_);
  public final static native void udp_error_alert_endpoint_set(long jarg1, udp_error_alert jarg1_, long jarg2, udp_endpoint jarg2_);
  public final static native long udp_error_alert_endpoint_get(long jarg1, udp_error_alert jarg1_);
  public final static native void udp_error_alert_error_set(long jarg1, udp_error_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long udp_error_alert_error_get(long jarg1, udp_error_alert jarg1_);
  public final static native void delete_udp_error_alert(long jarg1);
  public final static native long new_external_ip_alert(long jarg1, stack_allocator jarg1_, long jarg2, address jarg2_);
  public final static native int external_ip_alert_priority_get();
  public final static native int external_ip_alert_alert_type_get();
  public final static native int external_ip_alert_type(long jarg1, external_ip_alert jarg1_);
  public final static native int external_ip_alert_category(long jarg1, external_ip_alert jarg1_);
  public final static native String external_ip_alert_what(long jarg1, external_ip_alert jarg1_);
  public final static native int external_ip_alert_static_category_get();
  public final static native String external_ip_alert_message(long jarg1, external_ip_alert jarg1_);
  public final static native void external_ip_alert_external_address_set(long jarg1, external_ip_alert jarg1_, long jarg2, address jarg2_);
  public final static native long external_ip_alert_external_address_get(long jarg1, external_ip_alert jarg1_);
  public final static native void delete_external_ip_alert(long jarg1);
  public final static native long new_listen_failed_alert(long jarg1, stack_allocator jarg1_, String jarg2, int jarg3, long jarg4, error_code jarg4_, int jarg5);
  public final static native int listen_failed_alert_priority_get();
  public final static native int listen_failed_alert_alert_type_get();
  public final static native int listen_failed_alert_type(long jarg1, listen_failed_alert jarg1_);
  public final static native int listen_failed_alert_category(long jarg1, listen_failed_alert jarg1_);
  public final static native String listen_failed_alert_what(long jarg1, listen_failed_alert jarg1_);
  public final static native int listen_failed_alert_static_category_get();
  public final static native String listen_failed_alert_message(long jarg1, listen_failed_alert jarg1_);
  public final static native String listen_failed_alert_listen_interface(long jarg1, listen_failed_alert jarg1_);
  public final static native void listen_failed_alert_error_set(long jarg1, listen_failed_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long listen_failed_alert_error_get(long jarg1, listen_failed_alert jarg1_);
  public final static native void listen_failed_alert_operation_set(long jarg1, listen_failed_alert jarg1_, int jarg2);
  public final static native int listen_failed_alert_operation_get(long jarg1, listen_failed_alert jarg1_);
  public final static native void listen_failed_alert_sock_type_set(long jarg1, listen_failed_alert jarg1_, int jarg2);
  public final static native int listen_failed_alert_sock_type_get(long jarg1, listen_failed_alert jarg1_);
  public final static native void delete_listen_failed_alert(long jarg1);
  public final static native long new_listen_succeeded_alert(long jarg1, stack_allocator jarg1_, long jarg2, tcp_endpoint jarg2_, int jarg3);
  public final static native int listen_succeeded_alert_priority_get();
  public final static native int listen_succeeded_alert_alert_type_get();
  public final static native int listen_succeeded_alert_type(long jarg1, listen_succeeded_alert jarg1_);
  public final static native int listen_succeeded_alert_category(long jarg1, listen_succeeded_alert jarg1_);
  public final static native String listen_succeeded_alert_what(long jarg1, listen_succeeded_alert jarg1_);
  public final static native int listen_succeeded_alert_static_category_get();
  public final static native String listen_succeeded_alert_message(long jarg1, listen_succeeded_alert jarg1_);
  public final static native void listen_succeeded_alert_endpoint_set(long jarg1, listen_succeeded_alert jarg1_, long jarg2, tcp_endpoint jarg2_);
  public final static native long listen_succeeded_alert_endpoint_get(long jarg1, listen_succeeded_alert jarg1_);
  public final static native void listen_succeeded_alert_sock_type_set(long jarg1, listen_succeeded_alert jarg1_, int jarg2);
  public final static native int listen_succeeded_alert_sock_type_get(long jarg1, listen_succeeded_alert jarg1_);
  public final static native void delete_listen_succeeded_alert(long jarg1);
  public final static native long new_portmap_error_alert(long jarg1, stack_allocator jarg1_, int jarg2, int jarg3, long jarg4, error_code jarg4_);
  public final static native int portmap_error_alert_priority_get();
  public final static native int portmap_error_alert_alert_type_get();
  public final static native int portmap_error_alert_type(long jarg1, portmap_error_alert jarg1_);
  public final static native int portmap_error_alert_category(long jarg1, portmap_error_alert jarg1_);
  public final static native String portmap_error_alert_what(long jarg1, portmap_error_alert jarg1_);
  public final static native int portmap_error_alert_static_category_get();
  public final static native String portmap_error_alert_message(long jarg1, portmap_error_alert jarg1_);
  public final static native void portmap_error_alert_mapping_set(long jarg1, portmap_error_alert jarg1_, int jarg2);
  public final static native int portmap_error_alert_mapping_get(long jarg1, portmap_error_alert jarg1_);
  public final static native void portmap_error_alert_map_type_set(long jarg1, portmap_error_alert jarg1_, int jarg2);
  public final static native int portmap_error_alert_map_type_get(long jarg1, portmap_error_alert jarg1_);
  public final static native void portmap_error_alert_error_set(long jarg1, portmap_error_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long portmap_error_alert_error_get(long jarg1, portmap_error_alert jarg1_);
  public final static native void delete_portmap_error_alert(long jarg1);
  public final static native long new_portmap_alert(long jarg1, stack_allocator jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int portmap_alert_priority_get();
  public final static native int portmap_alert_alert_type_get();
  public final static native int portmap_alert_type(long jarg1, portmap_alert jarg1_);
  public final static native int portmap_alert_category(long jarg1, portmap_alert jarg1_);
  public final static native String portmap_alert_what(long jarg1, portmap_alert jarg1_);
  public final static native int portmap_alert_static_category_get();
  public final static native String portmap_alert_message(long jarg1, portmap_alert jarg1_);
  public final static native void portmap_alert_mapping_set(long jarg1, portmap_alert jarg1_, int jarg2);
  public final static native int portmap_alert_mapping_get(long jarg1, portmap_alert jarg1_);
  public final static native void portmap_alert_external_port_set(long jarg1, portmap_alert jarg1_, int jarg2);
  public final static native int portmap_alert_external_port_get(long jarg1, portmap_alert jarg1_);
  public final static native void portmap_alert_map_type_set(long jarg1, portmap_alert jarg1_, int jarg2);
  public final static native int portmap_alert_map_type_get(long jarg1, portmap_alert jarg1_);
  public final static native void delete_portmap_alert(long jarg1);
  public final static native long new_portmap_log_alert(long jarg1, stack_allocator jarg1_, int jarg2, String jarg3);
  public final static native int portmap_log_alert_priority_get();
  public final static native int portmap_log_alert_alert_type_get();
  public final static native int portmap_log_alert_type(long jarg1, portmap_log_alert jarg1_);
  public final static native int portmap_log_alert_category(long jarg1, portmap_log_alert jarg1_);
  public final static native String portmap_log_alert_what(long jarg1, portmap_log_alert jarg1_);
  public final static native int portmap_log_alert_static_category_get();
  public final static native String portmap_log_alert_message(long jarg1, portmap_log_alert jarg1_);
  public final static native void portmap_log_alert_map_type_set(long jarg1, portmap_log_alert jarg1_, int jarg2);
  public final static native int portmap_log_alert_map_type_get(long jarg1, portmap_log_alert jarg1_);
  public final static native String portmap_log_alert_log_message(long jarg1, portmap_log_alert jarg1_);
  public final static native void delete_portmap_log_alert(long jarg1);
  public final static native long new_fastresume_rejected_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, error_code jarg3_, String jarg4, String jarg5);
  public final static native int fastresume_rejected_alert_priority_get();
  public final static native int fastresume_rejected_alert_alert_type_get();
  public final static native int fastresume_rejected_alert_type(long jarg1, fastresume_rejected_alert jarg1_);
  public final static native int fastresume_rejected_alert_category(long jarg1, fastresume_rejected_alert jarg1_);
  public final static native String fastresume_rejected_alert_what(long jarg1, fastresume_rejected_alert jarg1_);
  public final static native int fastresume_rejected_alert_static_category_get();
  public final static native String fastresume_rejected_alert_message(long jarg1, fastresume_rejected_alert jarg1_);
  public final static native void fastresume_rejected_alert_error_set(long jarg1, fastresume_rejected_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long fastresume_rejected_alert_error_get(long jarg1, fastresume_rejected_alert jarg1_);
  public final static native String fastresume_rejected_alert_file_path(long jarg1, fastresume_rejected_alert jarg1_);
  public final static native void fastresume_rejected_alert_operation_set(long jarg1, fastresume_rejected_alert jarg1_, String jarg2);
  public final static native String fastresume_rejected_alert_operation_get(long jarg1, fastresume_rejected_alert jarg1_);
  public final static native void delete_fastresume_rejected_alert(long jarg1);
  public final static native long new_peer_blocked_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, address jarg3_, int jarg4);
  public final static native int peer_blocked_alert_priority_get();
  public final static native int peer_blocked_alert_alert_type_get();
  public final static native int peer_blocked_alert_type(long jarg1, peer_blocked_alert jarg1_);
  public final static native int peer_blocked_alert_category(long jarg1, peer_blocked_alert jarg1_);
  public final static native String peer_blocked_alert_what(long jarg1, peer_blocked_alert jarg1_);
  public final static native int peer_blocked_alert_static_category_get();
  public final static native String peer_blocked_alert_message(long jarg1, peer_blocked_alert jarg1_);
  public final static native void peer_blocked_alert_ip_set(long jarg1, peer_blocked_alert jarg1_, long jarg2, address jarg2_);
  public final static native long peer_blocked_alert_ip_get(long jarg1, peer_blocked_alert jarg1_);
  public final static native void peer_blocked_alert_reason_set(long jarg1, peer_blocked_alert jarg1_, int jarg2);
  public final static native int peer_blocked_alert_reason_get(long jarg1, peer_blocked_alert jarg1_);
  public final static native void delete_peer_blocked_alert(long jarg1);
  public final static native long new_dht_announce_alert(long jarg1, stack_allocator jarg1_, long jarg2, address jarg2_, int jarg3, long jarg4, sha1_hash jarg4_);
  public final static native int dht_announce_alert_priority_get();
  public final static native int dht_announce_alert_alert_type_get();
  public final static native int dht_announce_alert_type(long jarg1, dht_announce_alert jarg1_);
  public final static native int dht_announce_alert_category(long jarg1, dht_announce_alert jarg1_);
  public final static native String dht_announce_alert_what(long jarg1, dht_announce_alert jarg1_);
  public final static native int dht_announce_alert_static_category_get();
  public final static native String dht_announce_alert_message(long jarg1, dht_announce_alert jarg1_);
  public final static native void dht_announce_alert_ip_set(long jarg1, dht_announce_alert jarg1_, long jarg2, address jarg2_);
  public final static native long dht_announce_alert_ip_get(long jarg1, dht_announce_alert jarg1_);
  public final static native void dht_announce_alert_port_set(long jarg1, dht_announce_alert jarg1_, int jarg2);
  public final static native int dht_announce_alert_port_get(long jarg1, dht_announce_alert jarg1_);
  public final static native void dht_announce_alert_info_hash_set(long jarg1, dht_announce_alert jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long dht_announce_alert_info_hash_get(long jarg1, dht_announce_alert jarg1_);
  public final static native void delete_dht_announce_alert(long jarg1);
  public final static native long new_dht_get_peers_alert(long jarg1, stack_allocator jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native int dht_get_peers_alert_priority_get();
  public final static native int dht_get_peers_alert_alert_type_get();
  public final static native int dht_get_peers_alert_type(long jarg1, dht_get_peers_alert jarg1_);
  public final static native int dht_get_peers_alert_category(long jarg1, dht_get_peers_alert jarg1_);
  public final static native String dht_get_peers_alert_what(long jarg1, dht_get_peers_alert jarg1_);
  public final static native int dht_get_peers_alert_static_category_get();
  public final static native String dht_get_peers_alert_message(long jarg1, dht_get_peers_alert jarg1_);
  public final static native void dht_get_peers_alert_info_hash_set(long jarg1, dht_get_peers_alert jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long dht_get_peers_alert_info_hash_get(long jarg1, dht_get_peers_alert jarg1_);
  public final static native void delete_dht_get_peers_alert(long jarg1);
  public final static native long new_stats_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, int jarg3, long jarg4, stat jarg4_);
  public final static native int stats_alert_priority_get();
  public final static native int stats_alert_alert_type_get();
  public final static native int stats_alert_type(long jarg1, stats_alert jarg1_);
  public final static native int stats_alert_category(long jarg1, stats_alert jarg1_);
  public final static native String stats_alert_what(long jarg1, stats_alert jarg1_);
  public final static native int stats_alert_static_category_get();
  public final static native String stats_alert_message(long jarg1, stats_alert jarg1_);
  public final static native void stats_alert_interval_set(long jarg1, stats_alert jarg1_, int jarg2);
  public final static native int stats_alert_interval_get(long jarg1, stats_alert jarg1_);
  public final static native int stats_alert_get_transferred(long jarg1, stats_alert jarg1_, int jarg2);
  public final static native void delete_stats_alert(long jarg1);
  public final static native long new_cache_flushed_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native int cache_flushed_alert_priority_get();
  public final static native int cache_flushed_alert_alert_type_get();
  public final static native int cache_flushed_alert_type(long jarg1, cache_flushed_alert jarg1_);
  public final static native int cache_flushed_alert_category(long jarg1, cache_flushed_alert jarg1_);
  public final static native String cache_flushed_alert_what(long jarg1, cache_flushed_alert jarg1_);
  public final static native int cache_flushed_alert_static_category_get();
  public final static native void delete_cache_flushed_alert(long jarg1);
  public final static native long new_anonymous_mode_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, int jarg3, String jarg4);
  public final static native int anonymous_mode_alert_priority_get();
  public final static native int anonymous_mode_alert_alert_type_get();
  public final static native int anonymous_mode_alert_type(long jarg1, anonymous_mode_alert jarg1_);
  public final static native int anonymous_mode_alert_category(long jarg1, anonymous_mode_alert jarg1_);
  public final static native String anonymous_mode_alert_what(long jarg1, anonymous_mode_alert jarg1_);
  public final static native int anonymous_mode_alert_static_category_get();
  public final static native String anonymous_mode_alert_message(long jarg1, anonymous_mode_alert jarg1_);
  public final static native int anonymous_mode_alert_tracker_not_anonymous_get();
  public final static native void anonymous_mode_alert_kind_set(long jarg1, anonymous_mode_alert jarg1_, int jarg2);
  public final static native int anonymous_mode_alert_kind_get(long jarg1, anonymous_mode_alert jarg1_);
  public final static native void anonymous_mode_alert_str_set(long jarg1, anonymous_mode_alert jarg1_, String jarg2);
  public final static native String anonymous_mode_alert_str_get(long jarg1, anonymous_mode_alert jarg1_);
  public final static native void delete_anonymous_mode_alert(long jarg1);
  public final static native long new_lsd_peer_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, tcp_endpoint jarg3_);
  public final static native int lsd_peer_alert_priority_get();
  public final static native int lsd_peer_alert_alert_type_get();
  public final static native int lsd_peer_alert_type(long jarg1, lsd_peer_alert jarg1_);
  public final static native int lsd_peer_alert_category(long jarg1, lsd_peer_alert jarg1_);
  public final static native String lsd_peer_alert_what(long jarg1, lsd_peer_alert jarg1_);
  public final static native int lsd_peer_alert_static_category_get();
  public final static native String lsd_peer_alert_message(long jarg1, lsd_peer_alert jarg1_);
  public final static native void delete_lsd_peer_alert(long jarg1);
  public final static native long new_trackerid_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, String jarg3, String jarg4);
  public final static native int trackerid_alert_priority_get();
  public final static native int trackerid_alert_alert_type_get();
  public final static native int trackerid_alert_type(long jarg1, trackerid_alert jarg1_);
  public final static native int trackerid_alert_category(long jarg1, trackerid_alert jarg1_);
  public final static native String trackerid_alert_what(long jarg1, trackerid_alert jarg1_);
  public final static native int trackerid_alert_static_category_get();
  public final static native String trackerid_alert_message(long jarg1, trackerid_alert jarg1_);
  public final static native String trackerid_alert_tracker_id(long jarg1, trackerid_alert jarg1_);
  public final static native void delete_trackerid_alert(long jarg1);
  public final static native long new_dht_bootstrap_alert(long jarg1, stack_allocator jarg1_);
  public final static native int dht_bootstrap_alert_priority_get();
  public final static native int dht_bootstrap_alert_alert_type_get();
  public final static native int dht_bootstrap_alert_type(long jarg1, dht_bootstrap_alert jarg1_);
  public final static native int dht_bootstrap_alert_category(long jarg1, dht_bootstrap_alert jarg1_);
  public final static native String dht_bootstrap_alert_what(long jarg1, dht_bootstrap_alert jarg1_);
  public final static native int dht_bootstrap_alert_static_category_get();
  public final static native String dht_bootstrap_alert_message(long jarg1, dht_bootstrap_alert jarg1_);
  public final static native void delete_dht_bootstrap_alert(long jarg1);
  public final static native int torrent_error_alert_priority_get();
  public final static native int torrent_error_alert_alert_type_get();
  public final static native int torrent_error_alert_type(long jarg1, torrent_error_alert jarg1_);
  public final static native int torrent_error_alert_category(long jarg1, torrent_error_alert jarg1_);
  public final static native String torrent_error_alert_what(long jarg1, torrent_error_alert jarg1_);
  public final static native int torrent_error_alert_static_category_get();
  public final static native String torrent_error_alert_message(long jarg1, torrent_error_alert jarg1_);
  public final static native void torrent_error_alert_error_set(long jarg1, torrent_error_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long torrent_error_alert_error_get(long jarg1, torrent_error_alert jarg1_);
  public final static native void delete_torrent_error_alert(long jarg1);
  public final static native long new_torrent_need_cert_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native int torrent_need_cert_alert_priority_get();
  public final static native int torrent_need_cert_alert_alert_type_get();
  public final static native int torrent_need_cert_alert_type(long jarg1, torrent_need_cert_alert jarg1_);
  public final static native int torrent_need_cert_alert_category(long jarg1, torrent_need_cert_alert jarg1_);
  public final static native String torrent_need_cert_alert_what(long jarg1, torrent_need_cert_alert jarg1_);
  public final static native int torrent_need_cert_alert_static_category_get();
  public final static native String torrent_need_cert_alert_message(long jarg1, torrent_need_cert_alert jarg1_);
  public final static native void torrent_need_cert_alert_error_set(long jarg1, torrent_need_cert_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long torrent_need_cert_alert_error_get(long jarg1, torrent_need_cert_alert jarg1_);
  public final static native void delete_torrent_need_cert_alert(long jarg1);
  public final static native long new_incoming_connection_alert(long jarg1, stack_allocator jarg1_, int jarg2, long jarg3, tcp_endpoint jarg3_);
  public final static native int incoming_connection_alert_priority_get();
  public final static native int incoming_connection_alert_alert_type_get();
  public final static native int incoming_connection_alert_type(long jarg1, incoming_connection_alert jarg1_);
  public final static native int incoming_connection_alert_category(long jarg1, incoming_connection_alert jarg1_);
  public final static native String incoming_connection_alert_what(long jarg1, incoming_connection_alert jarg1_);
  public final static native int incoming_connection_alert_static_category_get();
  public final static native String incoming_connection_alert_message(long jarg1, incoming_connection_alert jarg1_);
  public final static native void incoming_connection_alert_socket_type_set(long jarg1, incoming_connection_alert jarg1_, int jarg2);
  public final static native int incoming_connection_alert_socket_type_get(long jarg1, incoming_connection_alert jarg1_);
  public final static native void incoming_connection_alert_ip_set(long jarg1, incoming_connection_alert jarg1_, long jarg2, tcp_endpoint jarg2_);
  public final static native long incoming_connection_alert_ip_get(long jarg1, incoming_connection_alert jarg1_);
  public final static native void delete_incoming_connection_alert(long jarg1);
  public final static native long new_add_torrent_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, add_torrent_params jarg3_, long jarg4, error_code jarg4_);
  public final static native int add_torrent_alert_priority_get();
  public final static native int add_torrent_alert_alert_type_get();
  public final static native int add_torrent_alert_type(long jarg1, add_torrent_alert jarg1_);
  public final static native int add_torrent_alert_category(long jarg1, add_torrent_alert jarg1_);
  public final static native String add_torrent_alert_what(long jarg1, add_torrent_alert jarg1_);
  public final static native int add_torrent_alert_static_category_get();
  public final static native String add_torrent_alert_message(long jarg1, add_torrent_alert jarg1_);
  public final static native void add_torrent_alert_params_set(long jarg1, add_torrent_alert jarg1_, long jarg2, add_torrent_params jarg2_);
  public final static native long add_torrent_alert_params_get(long jarg1, add_torrent_alert jarg1_);
  public final static native void add_torrent_alert_error_set(long jarg1, add_torrent_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long add_torrent_alert_error_get(long jarg1, add_torrent_alert jarg1_);
  public final static native void delete_add_torrent_alert(long jarg1);
  public final static native long new_state_update_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_status_vector jarg2_);
  public final static native int state_update_alert_priority_get();
  public final static native int state_update_alert_alert_type_get();
  public final static native int state_update_alert_type(long jarg1, state_update_alert jarg1_);
  public final static native int state_update_alert_category(long jarg1, state_update_alert jarg1_);
  public final static native String state_update_alert_what(long jarg1, state_update_alert jarg1_);
  public final static native int state_update_alert_static_category_get();
  public final static native String state_update_alert_message(long jarg1, state_update_alert jarg1_);
  public final static native void state_update_alert_status_set(long jarg1, state_update_alert jarg1_, long jarg2, torrent_status_vector jarg2_);
  public final static native long state_update_alert_status_get(long jarg1, state_update_alert jarg1_);
  public final static native void delete_state_update_alert(long jarg1);
  public final static native long new_mmap_cache_alert(long jarg1, stack_allocator jarg1_, long jarg2, error_code jarg2_);
  public final static native int mmap_cache_alert_priority_get();
  public final static native int mmap_cache_alert_alert_type_get();
  public final static native int mmap_cache_alert_type(long jarg1, mmap_cache_alert jarg1_);
  public final static native int mmap_cache_alert_category(long jarg1, mmap_cache_alert jarg1_);
  public final static native String mmap_cache_alert_what(long jarg1, mmap_cache_alert jarg1_);
  public final static native int mmap_cache_alert_static_category_get();
  public final static native String mmap_cache_alert_message(long jarg1, mmap_cache_alert jarg1_);
  public final static native void mmap_cache_alert_error_set(long jarg1, mmap_cache_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long mmap_cache_alert_error_get(long jarg1, mmap_cache_alert jarg1_);
  public final static native void delete_mmap_cache_alert(long jarg1);
  public final static native long new_session_stats_alert(long jarg1, stack_allocator jarg1_, long jarg2, counters jarg2_);
  public final static native int session_stats_alert_priority_get();
  public final static native int session_stats_alert_alert_type_get();
  public final static native int session_stats_alert_type(long jarg1, session_stats_alert jarg1_);
  public final static native int session_stats_alert_category(long jarg1, session_stats_alert jarg1_);
  public final static native String session_stats_alert_what(long jarg1, session_stats_alert jarg1_);
  public final static native int session_stats_alert_static_category_get();
  public final static native String session_stats_alert_message(long jarg1, session_stats_alert jarg1_);
  public final static native long session_stats_alert_get_value(long jarg1, session_stats_alert jarg1_, int jarg2);
  public final static native void delete_session_stats_alert(long jarg1);
  public final static native long new_torrent_update_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, long jarg3, sha1_hash jarg3_, long jarg4, sha1_hash jarg4_);
  public final static native int torrent_update_alert_priority_get();
  public final static native int torrent_update_alert_alert_type_get();
  public final static native int torrent_update_alert_type(long jarg1, torrent_update_alert jarg1_);
  public final static native int torrent_update_alert_category(long jarg1, torrent_update_alert jarg1_);
  public final static native String torrent_update_alert_what(long jarg1, torrent_update_alert jarg1_);
  public final static native int torrent_update_alert_static_category_get();
  public final static native String torrent_update_alert_message(long jarg1, torrent_update_alert jarg1_);
  public final static native void torrent_update_alert_old_ih_set(long jarg1, torrent_update_alert jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long torrent_update_alert_old_ih_get(long jarg1, torrent_update_alert jarg1_);
  public final static native void torrent_update_alert_new_ih_set(long jarg1, torrent_update_alert jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long torrent_update_alert_new_ih_get(long jarg1, torrent_update_alert jarg1_);
  public final static native void delete_torrent_update_alert(long jarg1);
  public final static native long new_dht_error_alert(long jarg1, stack_allocator jarg1_, int jarg2, long jarg3, error_code jarg3_);
  public final static native int dht_error_alert_priority_get();
  public final static native int dht_error_alert_alert_type_get();
  public final static native int dht_error_alert_type(long jarg1, dht_error_alert jarg1_);
  public final static native int dht_error_alert_category(long jarg1, dht_error_alert jarg1_);
  public final static native String dht_error_alert_what(long jarg1, dht_error_alert jarg1_);
  public final static native int dht_error_alert_static_category_get();
  public final static native String dht_error_alert_message(long jarg1, dht_error_alert jarg1_);
  public final static native void dht_error_alert_error_set(long jarg1, dht_error_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long dht_error_alert_error_get(long jarg1, dht_error_alert jarg1_);
  public final static native void dht_error_alert_operation_set(long jarg1, dht_error_alert jarg1_, int jarg2);
  public final static native int dht_error_alert_operation_get(long jarg1, dht_error_alert jarg1_);
  public final static native void delete_dht_error_alert(long jarg1);
  public final static native long new_dht_immutable_item_alert(long jarg1, stack_allocator jarg1_, long jarg2, sha1_hash jarg2_, long jarg3, entry jarg3_);
  public final static native int dht_immutable_item_alert_priority_get();
  public final static native int dht_immutable_item_alert_alert_type_get();
  public final static native int dht_immutable_item_alert_type(long jarg1, dht_immutable_item_alert jarg1_);
  public final static native int dht_immutable_item_alert_category(long jarg1, dht_immutable_item_alert jarg1_);
  public final static native String dht_immutable_item_alert_what(long jarg1, dht_immutable_item_alert jarg1_);
  public final static native int dht_immutable_item_alert_static_category_get();
  public final static native String dht_immutable_item_alert_message(long jarg1, dht_immutable_item_alert jarg1_);
  public final static native void dht_immutable_item_alert_target_set(long jarg1, dht_immutable_item_alert jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long dht_immutable_item_alert_target_get(long jarg1, dht_immutable_item_alert jarg1_);
  public final static native void dht_immutable_item_alert_item_set(long jarg1, dht_immutable_item_alert jarg1_, long jarg2, entry jarg2_);
  public final static native long dht_immutable_item_alert_item_get(long jarg1, dht_immutable_item_alert jarg1_);
  public final static native void delete_dht_immutable_item_alert(long jarg1);
  public final static native int dht_mutable_item_alert_priority_get();
  public final static native int dht_mutable_item_alert_alert_type_get();
  public final static native int dht_mutable_item_alert_type(long jarg1, dht_mutable_item_alert jarg1_);
  public final static native int dht_mutable_item_alert_category(long jarg1, dht_mutable_item_alert jarg1_);
  public final static native String dht_mutable_item_alert_what(long jarg1, dht_mutable_item_alert jarg1_);
  public final static native int dht_mutable_item_alert_static_category_get();
  public final static native String dht_mutable_item_alert_message(long jarg1, dht_mutable_item_alert jarg1_);
  public final static native void dht_mutable_item_alert_seq_set(long jarg1, dht_mutable_item_alert jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger dht_mutable_item_alert_seq_get(long jarg1, dht_mutable_item_alert jarg1_);
  public final static native void dht_mutable_item_alert_salt_set(long jarg1, dht_mutable_item_alert jarg1_, String jarg2);
  public final static native String dht_mutable_item_alert_salt_get(long jarg1, dht_mutable_item_alert jarg1_);
  public final static native void dht_mutable_item_alert_item_set(long jarg1, dht_mutable_item_alert jarg1_, long jarg2, entry jarg2_);
  public final static native long dht_mutable_item_alert_item_get(long jarg1, dht_mutable_item_alert jarg1_);
  public final static native long dht_mutable_item_alert_key_v(long jarg1, dht_mutable_item_alert jarg1_);
  public final static native long dht_mutable_item_alert_signature_v(long jarg1, dht_mutable_item_alert jarg1_);
  public final static native void delete_dht_mutable_item_alert(long jarg1);
  public final static native int dht_put_alert_priority_get();
  public final static native int dht_put_alert_alert_type_get();
  public final static native int dht_put_alert_type(long jarg1, dht_put_alert jarg1_);
  public final static native int dht_put_alert_category(long jarg1, dht_put_alert jarg1_);
  public final static native String dht_put_alert_what(long jarg1, dht_put_alert jarg1_);
  public final static native int dht_put_alert_static_category_get();
  public final static native String dht_put_alert_message(long jarg1, dht_put_alert jarg1_);
  public final static native void dht_put_alert_target_set(long jarg1, dht_put_alert jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long dht_put_alert_target_get(long jarg1, dht_put_alert jarg1_);
  public final static native void dht_put_alert_salt_set(long jarg1, dht_put_alert jarg1_, String jarg2);
  public final static native String dht_put_alert_salt_get(long jarg1, dht_put_alert jarg1_);
  public final static native void dht_put_alert_seq_set(long jarg1, dht_put_alert jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger dht_put_alert_seq_get(long jarg1, dht_put_alert jarg1_);
  public final static native long dht_put_alert_public_key_v(long jarg1, dht_put_alert jarg1_);
  public final static native long dht_put_alert_signature_v(long jarg1, dht_put_alert jarg1_);
  public final static native void delete_dht_put_alert(long jarg1);
  public final static native long new_i2p_alert(long jarg1, stack_allocator jarg1_, long jarg2, error_code jarg2_);
  public final static native int i2p_alert_priority_get();
  public final static native int i2p_alert_alert_type_get();
  public final static native int i2p_alert_type(long jarg1, i2p_alert jarg1_);
  public final static native int i2p_alert_category(long jarg1, i2p_alert jarg1_);
  public final static native String i2p_alert_what(long jarg1, i2p_alert jarg1_);
  public final static native int i2p_alert_static_category_get();
  public final static native String i2p_alert_message(long jarg1, i2p_alert jarg1_);
  public final static native void i2p_alert_error_set(long jarg1, i2p_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long i2p_alert_error_get(long jarg1, i2p_alert jarg1_);
  public final static native void delete_i2p_alert(long jarg1);
  public final static native long new_dht_outgoing_get_peers_alert(long jarg1, stack_allocator jarg1_, long jarg2, sha1_hash jarg2_, long jarg3, sha1_hash jarg3_, long jarg4, udp_endpoint jarg4_);
  public final static native int dht_outgoing_get_peers_alert_priority_get();
  public final static native int dht_outgoing_get_peers_alert_alert_type_get();
  public final static native int dht_outgoing_get_peers_alert_type(long jarg1, dht_outgoing_get_peers_alert jarg1_);
  public final static native int dht_outgoing_get_peers_alert_category(long jarg1, dht_outgoing_get_peers_alert jarg1_);
  public final static native String dht_outgoing_get_peers_alert_what(long jarg1, dht_outgoing_get_peers_alert jarg1_);
  public final static native int dht_outgoing_get_peers_alert_static_category_get();
  public final static native String dht_outgoing_get_peers_alert_message(long jarg1, dht_outgoing_get_peers_alert jarg1_);
  public final static native void dht_outgoing_get_peers_alert_info_hash_set(long jarg1, dht_outgoing_get_peers_alert jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long dht_outgoing_get_peers_alert_info_hash_get(long jarg1, dht_outgoing_get_peers_alert jarg1_);
  public final static native void dht_outgoing_get_peers_alert_obfuscated_info_hash_set(long jarg1, dht_outgoing_get_peers_alert jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long dht_outgoing_get_peers_alert_obfuscated_info_hash_get(long jarg1, dht_outgoing_get_peers_alert jarg1_);
  public final static native void dht_outgoing_get_peers_alert_ip_set(long jarg1, dht_outgoing_get_peers_alert jarg1_, long jarg2, udp_endpoint jarg2_);
  public final static native long dht_outgoing_get_peers_alert_ip_get(long jarg1, dht_outgoing_get_peers_alert jarg1_);
  public final static native void delete_dht_outgoing_get_peers_alert(long jarg1);
  public final static native long new_log_alert(long jarg1, stack_allocator jarg1_, String jarg2);
  public final static native int log_alert_priority_get();
  public final static native int log_alert_alert_type_get();
  public final static native int log_alert_type(long jarg1, log_alert jarg1_);
  public final static native int log_alert_category(long jarg1, log_alert jarg1_);
  public final static native String log_alert_what(long jarg1, log_alert jarg1_);
  public final static native int log_alert_static_category_get();
  public final static native String log_alert_message(long jarg1, log_alert jarg1_);
  public final static native String log_alert_msg(long jarg1, log_alert jarg1_);
  public final static native void delete_log_alert(long jarg1);
  public final static native long new_torrent_log_alert(long jarg1, stack_allocator jarg1_, long jarg2, torrent_handle jarg2_, String jarg3);
  public final static native int torrent_log_alert_priority_get();
  public final static native int torrent_log_alert_alert_type_get();
  public final static native int torrent_log_alert_type(long jarg1, torrent_log_alert jarg1_);
  public final static native int torrent_log_alert_category(long jarg1, torrent_log_alert jarg1_);
  public final static native String torrent_log_alert_what(long jarg1, torrent_log_alert jarg1_);
  public final static native int torrent_log_alert_static_category_get();
  public final static native String torrent_log_alert_message(long jarg1, torrent_log_alert jarg1_);
  public final static native String torrent_log_alert_msg(long jarg1, torrent_log_alert jarg1_);
  public final static native void delete_torrent_log_alert(long jarg1);
  public final static native int peer_log_alert_priority_get();
  public final static native int peer_log_alert_alert_type_get();
  public final static native int peer_log_alert_type(long jarg1, peer_log_alert jarg1_);
  public final static native int peer_log_alert_category(long jarg1, peer_log_alert jarg1_);
  public final static native String peer_log_alert_what(long jarg1, peer_log_alert jarg1_);
  public final static native int peer_log_alert_static_category_get();
  public final static native String peer_log_alert_message(long jarg1, peer_log_alert jarg1_);
  public final static native void peer_log_alert_event_type_set(long jarg1, peer_log_alert jarg1_, String jarg2);
  public final static native String peer_log_alert_event_type_get(long jarg1, peer_log_alert jarg1_);
  public final static native void peer_log_alert_direction_set(long jarg1, peer_log_alert jarg1_, int jarg2);
  public final static native int peer_log_alert_direction_get(long jarg1, peer_log_alert jarg1_);
  public final static native String peer_log_alert_msg(long jarg1, peer_log_alert jarg1_);
  public final static native void delete_peer_log_alert(long jarg1);
  public final static native long new_lsd_error_alert(long jarg1, stack_allocator jarg1_, long jarg2, error_code jarg2_);
  public final static native int lsd_error_alert_priority_get();
  public final static native int lsd_error_alert_alert_type_get();
  public final static native int lsd_error_alert_type(long jarg1, lsd_error_alert jarg1_);
  public final static native int lsd_error_alert_category(long jarg1, lsd_error_alert jarg1_);
  public final static native String lsd_error_alert_what(long jarg1, lsd_error_alert jarg1_);
  public final static native int lsd_error_alert_static_category_get();
  public final static native String lsd_error_alert_message(long jarg1, lsd_error_alert jarg1_);
  public final static native void lsd_error_alert_error_set(long jarg1, lsd_error_alert jarg1_, long jarg2, error_code jarg2_);
  public final static native long lsd_error_alert_error_get(long jarg1, lsd_error_alert jarg1_);
  public final static native void delete_lsd_error_alert(long jarg1);
  public final static native void dht_lookup_type_set(long jarg1, dht_lookup jarg1_, String jarg2);
  public final static native String dht_lookup_type_get(long jarg1, dht_lookup jarg1_);
  public final static native void dht_lookup_outstanding_requests_set(long jarg1, dht_lookup jarg1_, int jarg2);
  public final static native int dht_lookup_outstanding_requests_get(long jarg1, dht_lookup jarg1_);
  public final static native void dht_lookup_timeouts_set(long jarg1, dht_lookup jarg1_, int jarg2);
  public final static native int dht_lookup_timeouts_get(long jarg1, dht_lookup jarg1_);
  public final static native void dht_lookup_responses_set(long jarg1, dht_lookup jarg1_, int jarg2);
  public final static native int dht_lookup_responses_get(long jarg1, dht_lookup jarg1_);
  public final static native void dht_lookup_branch_factor_set(long jarg1, dht_lookup jarg1_, int jarg2);
  public final static native int dht_lookup_branch_factor_get(long jarg1, dht_lookup jarg1_);
  public final static native void dht_lookup_nodes_left_set(long jarg1, dht_lookup jarg1_, int jarg2);
  public final static native int dht_lookup_nodes_left_get(long jarg1, dht_lookup jarg1_);
  public final static native void dht_lookup_last_sent_set(long jarg1, dht_lookup jarg1_, int jarg2);
  public final static native int dht_lookup_last_sent_get(long jarg1, dht_lookup jarg1_);
  public final static native void dht_lookup_first_timeout_set(long jarg1, dht_lookup jarg1_, int jarg2);
  public final static native int dht_lookup_first_timeout_get(long jarg1, dht_lookup jarg1_);
  public final static native long new_dht_lookup();
  public final static native void delete_dht_lookup(long jarg1);
  public final static native void dht_routing_bucket_num_nodes_set(long jarg1, dht_routing_bucket jarg1_, int jarg2);
  public final static native int dht_routing_bucket_num_nodes_get(long jarg1, dht_routing_bucket jarg1_);
  public final static native void dht_routing_bucket_num_replacements_set(long jarg1, dht_routing_bucket jarg1_, int jarg2);
  public final static native int dht_routing_bucket_num_replacements_get(long jarg1, dht_routing_bucket jarg1_);
  public final static native void dht_routing_bucket_last_active_set(long jarg1, dht_routing_bucket jarg1_, int jarg2);
  public final static native int dht_routing_bucket_last_active_get(long jarg1, dht_routing_bucket jarg1_);
  public final static native long new_dht_routing_bucket();
  public final static native void delete_dht_routing_bucket(long jarg1);
  public final static native long new_dht_stats_alert(long jarg1, stack_allocator jarg1_, long jarg2, dht_routing_bucket_vector jarg2_, long jarg3, dht_lookup_vector jarg3_);
  public final static native int dht_stats_alert_priority_get();
  public final static native int dht_stats_alert_alert_type_get();
  public final static native int dht_stats_alert_type(long jarg1, dht_stats_alert jarg1_);
  public final static native int dht_stats_alert_category(long jarg1, dht_stats_alert jarg1_);
  public final static native String dht_stats_alert_what(long jarg1, dht_stats_alert jarg1_);
  public final static native int dht_stats_alert_static_category_get();
  public final static native String dht_stats_alert_message(long jarg1, dht_stats_alert jarg1_);
  public final static native void dht_stats_alert_active_requests_set(long jarg1, dht_stats_alert jarg1_, long jarg2, dht_lookup_vector jarg2_);
  public final static native long dht_stats_alert_active_requests_get(long jarg1, dht_stats_alert jarg1_);
  public final static native void dht_stats_alert_routing_table_set(long jarg1, dht_stats_alert jarg1_, long jarg2, dht_routing_bucket_vector jarg2_);
  public final static native long dht_stats_alert_routing_table_get(long jarg1, dht_stats_alert jarg1_);
  public final static native void delete_dht_stats_alert(long jarg1);
  public final static native int incoming_request_alert_static_category_get();
  public final static native int incoming_request_alert_priority_get();
  public final static native int incoming_request_alert_alert_type_get();
  public final static native int incoming_request_alert_type(long jarg1, incoming_request_alert jarg1_);
  public final static native int incoming_request_alert_category(long jarg1, incoming_request_alert jarg1_);
  public final static native String incoming_request_alert_what(long jarg1, incoming_request_alert jarg1_);
  public final static native String incoming_request_alert_message(long jarg1, incoming_request_alert jarg1_);
  public final static native void incoming_request_alert_req_set(long jarg1, incoming_request_alert jarg1_, long jarg2, peer_request jarg2_);
  public final static native long incoming_request_alert_req_get(long jarg1, incoming_request_alert jarg1_);
  public final static native void delete_incoming_request_alert(long jarg1);
  public final static native int dht_log_alert_static_category_get();
  public final static native int dht_log_alert_priority_get();
  public final static native int dht_log_alert_alert_type_get();
  public final static native int dht_log_alert_type(long jarg1, dht_log_alert jarg1_);
  public final static native int dht_log_alert_category(long jarg1, dht_log_alert jarg1_);
  public final static native String dht_log_alert_what(long jarg1, dht_log_alert jarg1_);
  public final static native String dht_log_alert_message(long jarg1, dht_log_alert jarg1_);
  public final static native String dht_log_alert_log_message(long jarg1, dht_log_alert jarg1_);
  public final static native void dht_log_alert_module_set(long jarg1, dht_log_alert jarg1_, int jarg2);
  public final static native int dht_log_alert_module_get(long jarg1, dht_log_alert jarg1_);
  public final static native void delete_dht_log_alert(long jarg1);
  public final static native long new_dht_pkt_alert(long jarg1, stack_allocator jarg1_, String jarg2, int jarg3, int jarg4, long jarg5, udp_endpoint jarg5_);
  public final static native int dht_pkt_alert_static_category_get();
  public final static native int dht_pkt_alert_priority_get();
  public final static native int dht_pkt_alert_alert_type_get();
  public final static native int dht_pkt_alert_type(long jarg1, dht_pkt_alert jarg1_);
  public final static native int dht_pkt_alert_category(long jarg1, dht_pkt_alert jarg1_);
  public final static native String dht_pkt_alert_what(long jarg1, dht_pkt_alert jarg1_);
  public final static native String dht_pkt_alert_message(long jarg1, dht_pkt_alert jarg1_);
  public final static native String dht_pkt_alert_pkt_buf(long jarg1, dht_pkt_alert jarg1_);
  public final static native int dht_pkt_alert_pkt_size(long jarg1, dht_pkt_alert jarg1_);
  public final static native void dht_pkt_alert_dir_set(long jarg1, dht_pkt_alert jarg1_, int jarg2);
  public final static native int dht_pkt_alert_dir_get(long jarg1, dht_pkt_alert jarg1_);
  public final static native void dht_pkt_alert_node_set(long jarg1, dht_pkt_alert jarg1_, long jarg2, udp_endpoint jarg2_);
  public final static native long dht_pkt_alert_node_get(long jarg1, dht_pkt_alert jarg1_);
  public final static native void delete_dht_pkt_alert(long jarg1);
  public final static native long new_dht_get_peers_reply_alert(long jarg1, stack_allocator jarg1_, long jarg2, sha1_hash jarg2_, long jarg3, tcp_endpoint_vector jarg3_);
  public final static native int dht_get_peers_reply_alert_static_category_get();
  public final static native int dht_get_peers_reply_alert_priority_get();
  public final static native int dht_get_peers_reply_alert_alert_type_get();
  public final static native int dht_get_peers_reply_alert_type(long jarg1, dht_get_peers_reply_alert jarg1_);
  public final static native int dht_get_peers_reply_alert_category(long jarg1, dht_get_peers_reply_alert jarg1_);
  public final static native String dht_get_peers_reply_alert_what(long jarg1, dht_get_peers_reply_alert jarg1_);
  public final static native String dht_get_peers_reply_alert_message(long jarg1, dht_get_peers_reply_alert jarg1_);
  public final static native void dht_get_peers_reply_alert_info_hash_set(long jarg1, dht_get_peers_reply_alert jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long dht_get_peers_reply_alert_info_hash_get(long jarg1, dht_get_peers_reply_alert jarg1_);
  public final static native int dht_get_peers_reply_alert_num_peers(long jarg1, dht_get_peers_reply_alert jarg1_);
  public final static native void dht_get_peers_reply_alert_peers(long jarg1, dht_get_peers_reply_alert jarg1_, long jarg2, tcp_endpoint_vector jarg2_);
  public final static native void delete_dht_get_peers_reply_alert(long jarg1);
  public final static native int num_alert_types_get();
  public final static native int TORRENT_ALERT_MANAGER_MAX_ARITY_get();
  public final static native void cached_piece_info_blocks_set(long jarg1, cached_piece_info jarg1_, long jarg2, bool_vector jarg2_);
  public final static native long cached_piece_info_blocks_get(long jarg1, cached_piece_info jarg1_);
  public final static native void cached_piece_info_last_use_set(long jarg1, cached_piece_info jarg1_, long jarg2, high_resolution_clock.time_point jarg2_);
  public final static native long cached_piece_info_last_use_get(long jarg1, cached_piece_info jarg1_);
  public final static native void cached_piece_info_next_to_hash_set(long jarg1, cached_piece_info jarg1_, int jarg2);
  public final static native int cached_piece_info_next_to_hash_get(long jarg1, cached_piece_info jarg1_);
  public final static native void cached_piece_info_piece_set(long jarg1, cached_piece_info jarg1_, int jarg2);
  public final static native int cached_piece_info_piece_get(long jarg1, cached_piece_info jarg1_);
  public final static native int cached_piece_info_read_cache_get();
  public final static native int cached_piece_info_write_cache_get();
  public final static native int cached_piece_info_volatile_read_cache_get();
  public final static native void cached_piece_info_kind_set(long jarg1, cached_piece_info jarg1_, int jarg2);
  public final static native int cached_piece_info_kind_get(long jarg1, cached_piece_info jarg1_);
  public final static native void cached_piece_info_need_readback_set(long jarg1, cached_piece_info jarg1_, boolean jarg2);
  public final static native boolean cached_piece_info_need_readback_get(long jarg1, cached_piece_info jarg1_);
  public final static native long new_cached_piece_info();
  public final static native void delete_cached_piece_info(long jarg1);
  public final static native long new_cache_status();
  public final static native void cache_status_pieces_set(long jarg1, cache_status jarg1_, long jarg2, cached_piece_info_vector jarg2_);
  public final static native long cache_status_pieces_get(long jarg1, cache_status jarg1_);
  public final static native void delete_cache_status(long jarg1);
  public final static native void peer_entry_hostname_set(long jarg1, peer_entry jarg1_, String jarg2);
  public final static native String peer_entry_hostname_get(long jarg1, peer_entry jarg1_);
  public final static native void peer_entry_pid_set(long jarg1, peer_entry jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long peer_entry_pid_get(long jarg1, peer_entry jarg1_);
  public final static native void peer_entry_port_set(long jarg1, peer_entry jarg1_, int jarg2);
  public final static native int peer_entry_port_get(long jarg1, peer_entry jarg1_);
  public final static native boolean peer_entry_op_eq(long jarg1, peer_entry jarg1_, long jarg2, peer_entry jarg2_);
  public final static native boolean peer_entry_op_lt(long jarg1, peer_entry jarg1_, long jarg2, peer_entry jarg2_);
  public final static native long new_peer_entry();
  public final static native void delete_peer_entry(long jarg1);
  public final static native void ipv4_peer_entry_port_set(long jarg1, ipv4_peer_entry jarg1_, int jarg2);
  public final static native int ipv4_peer_entry_port_get(long jarg1, ipv4_peer_entry jarg1_);
  public final static native long new_ipv4_peer_entry();
  public final static native void delete_ipv4_peer_entry(long jarg1);
  public final static native void ipv6_peer_entry_port_set(long jarg1, ipv6_peer_entry jarg1_, int jarg2);
  public final static native int ipv6_peer_entry_port_get(long jarg1, ipv6_peer_entry jarg1_);
  public final static native long new_ipv6_peer_entry();
  public final static native void delete_ipv6_peer_entry(long jarg1);
  public final static native void peer_info_inet_as_name_set(long jarg1, peer_info jarg1_, String jarg2);
  public final static native String peer_info_inet_as_name_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_client_set(long jarg1, peer_info jarg1_, String jarg2);
  public final static native String peer_info_client_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_pieces_set(long jarg1, peer_info jarg1_, long jarg2, bitfield jarg2_);
  public final static native long peer_info_pieces_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_total_download_set(long jarg1, peer_info jarg1_, long jarg2);
  public final static native long peer_info_total_download_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_total_upload_set(long jarg1, peer_info jarg1_, long jarg2);
  public final static native long peer_info_total_upload_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_last_request_set(long jarg1, peer_info jarg1_, long jarg2, high_resolution_clock.duration jarg2_);
  public final static native long peer_info_last_request_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_last_active_set(long jarg1, peer_info jarg1_, long jarg2, high_resolution_clock.duration jarg2_);
  public final static native long peer_info_last_active_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_download_queue_time_set(long jarg1, peer_info jarg1_, long jarg2, high_resolution_clock.duration jarg2_);
  public final static native long peer_info_download_queue_time_get(long jarg1, peer_info jarg1_);
  public final static native int peer_info_interesting_get();
  public final static native int peer_info_choked_get();
  public final static native int peer_info_remote_interested_get();
  public final static native int peer_info_remote_choked_get();
  public final static native int peer_info_supports_extensions_get();
  public final static native int peer_info_local_connection_get();
  public final static native int peer_info_handshake_get();
  public final static native int peer_info_connecting_get();
  public final static native int peer_info_deprecated___get();
  public final static native int peer_info_on_parole_get();
  public final static native int peer_info_seed_get();
  public final static native int peer_info_optimistic_unchoke_get();
  public final static native int peer_info_snubbed_get();
  public final static native int peer_info_upload_only_get();
  public final static native int peer_info_endgame_mode_get();
  public final static native int peer_info_holepunched_get();
  public final static native int peer_info_i2p_socket_get();
  public final static native int peer_info_utp_socket_get();
  public final static native int peer_info_ssl_socket_get();
  public final static native int peer_info_rc4_encrypted_get();
  public final static native int peer_info_plaintext_encrypted_get();
  public final static native void peer_info_flags_set(long jarg1, peer_info jarg1_, long jarg2);
  public final static native long peer_info_flags_get(long jarg1, peer_info jarg1_);
  public final static native int peer_info_tracker_get();
  public final static native int peer_info_dht_get();
  public final static native int peer_info_pex_get();
  public final static native int peer_info_lsd_get();
  public final static native int peer_info_resume_data_get();
  public final static native int peer_info_incoming_get();
  public final static native void peer_info_source_set(long jarg1, peer_info jarg1_, long jarg2);
  public final static native long peer_info_source_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_up_speed_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_up_speed_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_down_speed_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_down_speed_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_payload_up_speed_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_payload_up_speed_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_payload_down_speed_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_payload_down_speed_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_pid_set(long jarg1, peer_info jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long peer_info_pid_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_queue_bytes_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_queue_bytes_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_request_timeout_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_request_timeout_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_send_buffer_size_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_send_buffer_size_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_used_send_buffer_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_used_send_buffer_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_receive_buffer_size_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_receive_buffer_size_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_used_receive_buffer_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_used_receive_buffer_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_num_hashfails_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_num_hashfails_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_inet_as_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_inet_as_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_download_queue_length_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_download_queue_length_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_timed_out_requests_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_timed_out_requests_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_busy_requests_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_busy_requests_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_requests_in_buffer_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_requests_in_buffer_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_target_dl_queue_length_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_target_dl_queue_length_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_upload_queue_length_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_upload_queue_length_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_failcount_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_failcount_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_downloading_piece_index_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_downloading_piece_index_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_downloading_block_index_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_downloading_block_index_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_downloading_progress_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_downloading_progress_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_downloading_total_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_downloading_total_get(long jarg1, peer_info jarg1_);
  public final static native int peer_info_standard_bittorrent_get();
  public final static native int peer_info_web_seed_get();
  public final static native int peer_info_http_seed_get();
  public final static native void peer_info_connection_type_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_connection_type_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_remote_dl_rate_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_remote_dl_rate_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_pending_disk_bytes_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_pending_disk_bytes_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_pending_disk_read_bytes_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_pending_disk_read_bytes_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_send_quota_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_send_quota_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_receive_quota_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_receive_quota_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_rtt_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_rtt_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_num_pieces_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_num_pieces_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_download_rate_peak_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_download_rate_peak_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_upload_rate_peak_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_upload_rate_peak_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_progress_set(long jarg1, peer_info jarg1_, float jarg2);
  public final static native float peer_info_progress_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_progress_ppm_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_progress_ppm_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_estimated_reciprocation_rate_set(long jarg1, peer_info jarg1_, int jarg2);
  public final static native int peer_info_estimated_reciprocation_rate_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_ip_set(long jarg1, peer_info jarg1_, long jarg2, tcp_endpoint jarg2_);
  public final static native long peer_info_ip_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_local_endpoint_set(long jarg1, peer_info jarg1_, long jarg2, tcp_endpoint jarg2_);
  public final static native long peer_info_local_endpoint_get(long jarg1, peer_info jarg1_);
  public final static native int peer_info_bw_idle_get();
  public final static native int peer_info_bw_limit_get();
  public final static native int peer_info_bw_network_get();
  public final static native int peer_info_bw_disk_get();
  public final static native void peer_info_read_state_set(long jarg1, peer_info jarg1_, char jarg2);
  public final static native char peer_info_read_state_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_write_state_set(long jarg1, peer_info jarg1_, char jarg2);
  public final static native char peer_info_write_state_get(long jarg1, peer_info jarg1_);
  public final static native void peer_info_country_set(long jarg1, peer_info jarg1_, String jarg2);
  public final static native String peer_info_country_get(long jarg1, peer_info jarg1_);
  public final static native long new_peer_info();
  public final static native void delete_peer_info(long jarg1);
  public final static native int peer_list_entry_banned_get();
  public final static native void peer_list_entry_ip_set(long jarg1, peer_list_entry jarg1_, long jarg2, tcp_endpoint jarg2_);
  public final static native long peer_list_entry_ip_get(long jarg1, peer_list_entry jarg1_);
  public final static native void peer_list_entry_flags_set(long jarg1, peer_list_entry jarg1_, int jarg2);
  public final static native int peer_list_entry_flags_get(long jarg1, peer_list_entry jarg1_);
  public final static native void peer_list_entry_failcount_set(long jarg1, peer_list_entry jarg1_, short jarg2);
  public final static native short peer_list_entry_failcount_get(long jarg1, peer_list_entry jarg1_);
  public final static native void peer_list_entry_source_set(long jarg1, peer_list_entry jarg1_, short jarg2);
  public final static native short peer_list_entry_source_get(long jarg1, peer_list_entry jarg1_);
  public final static native long new_peer_list_entry();
  public final static native void delete_peer_list_entry(long jarg1);
  public final static native void bandwidth_socket_assign_bandwidth(long jarg1, bandwidth_socket jarg1_, int jarg2, int jarg3);
  public final static native boolean bandwidth_socket_is_disconnecting(long jarg1, bandwidth_socket jarg1_);
  public final static native void delete_bandwidth_socket(long jarg1);
  public final static native int bandwidth_channel_inf_get();
  public final static native long new_bandwidth_channel();
  public final static native void bandwidth_channel_throttle__SWIG_0(long jarg1, bandwidth_channel jarg1_, int jarg2);
  public final static native int bandwidth_channel_throttle__SWIG_1(long jarg1, bandwidth_channel jarg1_);
  public final static native int bandwidth_channel_quota_left(long jarg1, bandwidth_channel jarg1_);
  public final static native void bandwidth_channel_update_quota(long jarg1, bandwidth_channel jarg1_, int jarg2);
  public final static native void bandwidth_channel_return_quota(long jarg1, bandwidth_channel jarg1_, int jarg2);
  public final static native void bandwidth_channel_use_quota(long jarg1, bandwidth_channel jarg1_, int jarg2);
  public final static native boolean bandwidth_channel_need_queueing(long jarg1, bandwidth_channel jarg1_, int jarg2);
  public final static native void bandwidth_channel_tmp_set(long jarg1, bandwidth_channel jarg1_, int jarg2);
  public final static native int bandwidth_channel_tmp_get(long jarg1, bandwidth_channel jarg1_);
  public final static native void bandwidth_channel_distribute_quota_set(long jarg1, bandwidth_channel jarg1_, int jarg2);
  public final static native int bandwidth_channel_distribute_quota_get(long jarg1, bandwidth_channel jarg1_);
  public final static native void delete_bandwidth_channel(long jarg1);
  public final static native long new_ip_voter();
  public final static native boolean ip_voter_cast_vote(long jarg1, ip_voter jarg1_, long jarg2, address jarg2_, int jarg3, long jarg4, address jarg4_);
  public final static native long ip_voter_external_address(long jarg1, ip_voter jarg1_);
  public final static native void delete_ip_voter(long jarg1);
  public final static native boolean external_ip_cast_vote(long jarg1, external_ip jarg1_, long jarg2, address jarg2_, int jarg3, long jarg4, address jarg4_);
  public final static native long external_ip_external_address(long jarg1, external_ip jarg1_, long jarg2, address jarg2_);
  public final static native long new_external_ip();
  public final static native void delete_external_ip(long jarg1);
  public final static native long peer_connection_interface_remote(long jarg1, peer_connection_interface jarg1_);
  public final static native long peer_connection_interface_local_endpoint(long jarg1, peer_connection_interface jarg1_);
  public final static native void peer_connection_interface_disconnect__SWIG_0(long jarg1, peer_connection_interface jarg1_, long jarg2, error_code jarg2_, int jarg3, int jarg4);
  public final static native void peer_connection_interface_disconnect__SWIG_1(long jarg1, peer_connection_interface jarg1_, long jarg2, error_code jarg2_, int jarg3);
  public final static native long peer_connection_interface_pid(long jarg1, peer_connection_interface jarg1_);
  public final static native void peer_connection_interface_set_holepunch_mode(long jarg1, peer_connection_interface jarg1_);
  public final static native long peer_connection_interface_peer_info_struct(long jarg1, peer_connection_interface jarg1_);
  public final static native void peer_connection_interface_set_peer_info(long jarg1, peer_connection_interface jarg1_, long jarg2, torrent_peer jarg2_);
  public final static native boolean peer_connection_interface_is_outgoing(long jarg1, peer_connection_interface jarg1_);
  public final static native void peer_connection_interface_add_stat(long jarg1, peer_connection_interface jarg1_, long jarg2, long jarg3);
  public final static native boolean peer_connection_interface_fast_reconnect(long jarg1, peer_connection_interface jarg1_);
  public final static native boolean peer_connection_interface_is_choked(long jarg1, peer_connection_interface jarg1_);
  public final static native boolean peer_connection_interface_failed(long jarg1, peer_connection_interface jarg1_);
  public final static native long peer_connection_interface_statistics(long jarg1, peer_connection_interface jarg1_);
  public final static native void peer_connection_interface_get_peer_info(long jarg1, peer_connection_interface jarg1_, long jarg2, peer_info jarg2_);
  public final static native long peer_priority(long jarg1, tcp_endpoint jarg1_, long jarg2, tcp_endpoint jarg2_);
  public final static native long new_torrent_peer(int jarg1, boolean jarg2, int jarg3);
  public final static native java.math.BigInteger torrent_peer_total_download(long jarg1, torrent_peer jarg1_);
  public final static native java.math.BigInteger torrent_peer_total_upload(long jarg1, torrent_peer jarg1_);
  public final static native long torrent_peer_address(long jarg1, torrent_peer jarg1_);
  public final static native String torrent_peer_dest(long jarg1, torrent_peer jarg1_);
  public final static native long torrent_peer_ip(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_prev_amount_upload_set(long jarg1, torrent_peer jarg1_, long jarg2);
  public final static native long torrent_peer_prev_amount_upload_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_prev_amount_download_set(long jarg1, torrent_peer jarg1_, long jarg2);
  public final static native long torrent_peer_prev_amount_download_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_connection_set(long jarg1, torrent_peer jarg1_, long jarg2, peer_connection_interface jarg2_);
  public final static native long torrent_peer_connection_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_peer_rank_set(long jarg1, torrent_peer jarg1_, long jarg2);
  public final static native long torrent_peer_peer_rank_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_last_optimistically_unchoked_set(long jarg1, torrent_peer jarg1_, int jarg2);
  public final static native int torrent_peer_last_optimistically_unchoked_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_last_connected_set(long jarg1, torrent_peer jarg1_, int jarg2);
  public final static native int torrent_peer_last_connected_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_port_set(long jarg1, torrent_peer jarg1_, int jarg2);
  public final static native int torrent_peer_port_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_hashfails_set(long jarg1, torrent_peer jarg1_, short jarg2);
  public final static native short torrent_peer_hashfails_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_failcount_set(long jarg1, torrent_peer jarg1_, long jarg2);
  public final static native long torrent_peer_failcount_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_connectable_set(long jarg1, torrent_peer jarg1_, boolean jarg2);
  public final static native boolean torrent_peer_connectable_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_optimistically_unchoked_set(long jarg1, torrent_peer jarg1_, boolean jarg2);
  public final static native boolean torrent_peer_optimistically_unchoked_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_seed_set(long jarg1, torrent_peer jarg1_, boolean jarg2);
  public final static native boolean torrent_peer_seed_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_fast_reconnects_set(long jarg1, torrent_peer jarg1_, long jarg2);
  public final static native long torrent_peer_fast_reconnects_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_trust_points_set(long jarg1, torrent_peer jarg1_, int jarg2);
  public final static native int torrent_peer_trust_points_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_source_set(long jarg1, torrent_peer jarg1_, long jarg2);
  public final static native long torrent_peer_source_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_pe_support_set(long jarg1, torrent_peer jarg1_, boolean jarg2);
  public final static native boolean torrent_peer_pe_support_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_is_v6_addr_set(long jarg1, torrent_peer jarg1_, boolean jarg2);
  public final static native boolean torrent_peer_is_v6_addr_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_on_parole_set(long jarg1, torrent_peer jarg1_, boolean jarg2);
  public final static native boolean torrent_peer_on_parole_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_banned_set(long jarg1, torrent_peer jarg1_, boolean jarg2);
  public final static native boolean torrent_peer_banned_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_supports_utp_set(long jarg1, torrent_peer jarg1_, boolean jarg2);
  public final static native boolean torrent_peer_supports_utp_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_confirmed_supports_utp_set(long jarg1, torrent_peer jarg1_, boolean jarg2);
  public final static native boolean torrent_peer_confirmed_supports_utp_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_supports_holepunch_set(long jarg1, torrent_peer jarg1_, boolean jarg2);
  public final static native boolean torrent_peer_supports_holepunch_get(long jarg1, torrent_peer jarg1_);
  public final static native void torrent_peer_web_seed_set(long jarg1, torrent_peer jarg1_, boolean jarg2);
  public final static native boolean torrent_peer_web_seed_get(long jarg1, torrent_peer jarg1_);
  public final static native void delete_torrent_peer(long jarg1);
  public final static native long new_ipv4_peer(long jarg1, tcp_endpoint jarg1_, boolean jarg2, int jarg3);
  public final static native void ipv4_peer_addr_set(long jarg1, ipv4_peer jarg1_, long jarg2, address_v4 jarg2_);
  public final static native long ipv4_peer_addr_get(long jarg1, ipv4_peer jarg1_);
  public final static native void delete_ipv4_peer(long jarg1);
  public final static native long new_ipv6_peer(long jarg1, tcp_endpoint jarg1_, boolean jarg2, int jarg3);
  public final static native void delete_ipv6_peer(long jarg1);
  public final static native long new_peer_address_compare();
  public final static native void delete_peer_address_compare(long jarg1);
  public final static native void peer_connection_args_stats_counters_set(long jarg1, peer_connection_args jarg1_, long jarg2, counters jarg2_);
  public final static native long peer_connection_args_stats_counters_get(long jarg1, peer_connection_args jarg1_);
  public final static native void peer_connection_args_endp_set(long jarg1, peer_connection_args jarg1_, long jarg2, tcp_endpoint jarg2_);
  public final static native long peer_connection_args_endp_get(long jarg1, peer_connection_args jarg1_);
  public final static native void peer_connection_args_peerinfo_set(long jarg1, peer_connection_args jarg1_, long jarg2, torrent_peer jarg2_);
  public final static native long peer_connection_args_peerinfo_get(long jarg1, peer_connection_args jarg1_);
  public final static native long new_peer_connection_args();
  public final static native void delete_peer_connection_args(long jarg1);
  public final static native int peer_connection_bittorrent_connection_get();
  public final static native int peer_connection_url_seed_connection_get();
  public final static native int peer_connection_http_seed_connection_get();
  public final static native int peer_connection_type(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_start(long jarg1, peer_connection jarg1_);
  public final static native void delete_peer_connection(long jarg1);
  public final static native void peer_connection_set_peer_info(long jarg1, peer_connection jarg1_, long jarg2, torrent_peer jarg2_);
  public final static native long peer_connection_peer_info_struct(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_peer_exceeds_limit(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_peer_disconnected_other(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_send_allowed_set(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_init(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_on_metadata(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_on_metadata_impl(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_picker_options__SWIG_0(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native int peer_connection_prefer_contiguous_blocks__SWIG_0(long jarg1, peer_connection jarg1_);
  public final static native boolean peer_connection_on_parole(long jarg1, peer_connection jarg1_);
  public final static native int peer_connection_picker_options__SWIG_1(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_prefer_contiguous_blocks__SWIG_1(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native boolean peer_connection_request_large_blocks__SWIG_0(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_request_large_blocks__SWIG_1(long jarg1, peer_connection jarg1_, boolean jarg2);
  public final static native void peer_connection_set_endgame(long jarg1, peer_connection jarg1_, boolean jarg2);
  public final static native boolean peer_connection_endgame(long jarg1, peer_connection jarg1_);
  public final static native boolean peer_connection_no_download__SWIG_0(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_no_download__SWIG_1(long jarg1, peer_connection jarg1_, boolean jarg2);
  public final static native boolean peer_connection_ignore_stats__SWIG_0(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_ignore_stats__SWIG_1(long jarg1, peer_connection jarg1_, boolean jarg2);
  public final static native long peer_connection_peer_rank(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_fast_reconnect__SWIG_0(long jarg1, peer_connection jarg1_, boolean jarg2);
  public final static native boolean peer_connection_fast_reconnect__SWIG_1(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_received_piece(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native void peer_connection_announce_piece(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native void peer_connection_superseed_piece(long jarg1, peer_connection jarg1_, int jarg2, int jarg3);
  public final static native boolean peer_connection_super_seeded_piece(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native boolean peer_connection_can_write(long jarg1, peer_connection jarg1_);
  public final static native boolean peer_connection_is_seed(long jarg1, peer_connection jarg1_);
  public final static native int peer_connection_num_have_pieces(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_set_share_mode(long jarg1, peer_connection jarg1_, boolean jarg2);
  public final static native boolean peer_connection_share_mode(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_set_upload_only(long jarg1, peer_connection jarg1_, boolean jarg2);
  public final static native boolean peer_connection_upload_only(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_set_holepunch_mode(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_keep_alive(long jarg1, peer_connection jarg1_);
  public final static native long peer_connection_pid(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_set_pid(long jarg1, peer_connection jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native boolean peer_connection_has_piece(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native long peer_connection_upload_queue(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_clear_request_queue(long jarg1, peer_connection jarg1_);
  public final static native long peer_connection_download_queue_time__SWIG_0(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native long peer_connection_download_queue_time__SWIG_1(long jarg1, peer_connection jarg1_);
  public final static native boolean peer_connection_is_interesting(long jarg1, peer_connection jarg1_);
  public final static native boolean peer_connection_is_choked(long jarg1, peer_connection jarg1_);
  public final static native boolean peer_connection_is_peer_interested(long jarg1, peer_connection jarg1_);
  public final static native boolean peer_connection_has_peer_choked(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_choke_this_peer(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_maybe_unchoke_this_peer(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_update_interest(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_get_peer_info(long jarg1, peer_connection jarg1_, long jarg2, peer_info jarg2_);
  public final static native long peer_connection_statistics(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_add_stat(long jarg1, peer_connection jarg1_, long jarg2, long jarg3);
  public final static native void peer_connection_sent_bytes(long jarg1, peer_connection jarg1_, int jarg2, int jarg3);
  public final static native void peer_connection_received_bytes(long jarg1, peer_connection jarg1_, int jarg2, int jarg3);
  public final static native void peer_connection_trancieve_ip_packet(long jarg1, peer_connection jarg1_, int jarg2, boolean jarg3);
  public final static native void peer_connection_sent_syn(long jarg1, peer_connection jarg1_, boolean jarg2);
  public final static native void peer_connection_received_synack(long jarg1, peer_connection jarg1_, boolean jarg2);
  public final static native void peer_connection_second_tick(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native long peer_connection_remote(long jarg1, peer_connection jarg1_);
  public final static native long peer_connection_local_endpoint(long jarg1, peer_connection jarg1_);
  public final static native long peer_connection_get_bitfield(long jarg1, peer_connection jarg1_);
  public final static native long peer_connection_allowed_fast(long jarg1, peer_connection jarg1_);
  public final static native long peer_connection_suggested_pieces(long jarg1, peer_connection jarg1_);
  public final static native long peer_connection_connected_time(long jarg1, peer_connection jarg1_);
  public final static native long peer_connection_last_received(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_disconnect__SWIG_0(long jarg1, peer_connection jarg1_, long jarg2, error_code jarg2_, int jarg3, int jarg4);
  public final static native void peer_connection_disconnect__SWIG_1(long jarg1, peer_connection jarg1_, long jarg2, error_code jarg2_, int jarg3);
  public final static native void peer_connection_connect_failed(long jarg1, peer_connection jarg1_, long jarg2, error_code jarg2_);
  public final static native boolean peer_connection_is_disconnecting(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_on_connection_complete(long jarg1, peer_connection jarg1_, long jarg2, error_code jarg2_);
  public final static native boolean peer_connection_is_connecting(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_received_valid_data(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native boolean peer_connection_received_invalid_data(long jarg1, peer_connection jarg1_, int jarg2, boolean jarg3);
  public final static native boolean peer_connection_is_outgoing(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_received_listen_port(long jarg1, peer_connection jarg1_);
  public final static native boolean peer_connection_on_local_network(long jarg1, peer_connection jarg1_);
  public final static native boolean peer_connection_ignore_unchoke_slots(long jarg1, peer_connection jarg1_);
  public final static native boolean peer_connection_failed(long jarg1, peer_connection jarg1_);
  public final static native int peer_connection_desired_queue_size(long jarg1, peer_connection jarg1_);
  public final static native int peer_connection_download_payload_rate(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_reset_choke_counters(long jarg1, peer_connection jarg1_);
  public final static native boolean peer_connection_disconnect_if_redundant(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_increase_est_reciprocation_rate(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_decrease_est_reciprocation_rate(long jarg1, peer_connection jarg1_);
  public final static native int peer_connection_est_reciprocation_rate(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_incoming_keepalive(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_incoming_choke(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_incoming_unchoke(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_incoming_interested(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_incoming_not_interested(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_incoming_have(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native void peer_connection_incoming_dont_have(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native void peer_connection_incoming_bitfield(long jarg1, peer_connection jarg1_, long jarg2, bitfield jarg2_);
  public final static native void peer_connection_incoming_request(long jarg1, peer_connection jarg1_, long jarg2, peer_request jarg2_);
  public final static native void peer_connection_incoming_piece_fragment(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native void peer_connection_start_receive_piece(long jarg1, peer_connection jarg1_, long jarg2, peer_request jarg2_);
  public final static native void peer_connection_incoming_cancel(long jarg1, peer_connection jarg1_, long jarg2, peer_request jarg2_);
  public final static native boolean peer_connection_can_disconnect(long jarg1, peer_connection jarg1_, long jarg2, error_code jarg2_);
  public final static native void peer_connection_incoming_dht_port(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native void peer_connection_incoming_reject_request(long jarg1, peer_connection jarg1_, long jarg2, peer_request jarg2_);
  public final static native void peer_connection_incoming_have_all(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_incoming_have_none(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_incoming_allowed_fast(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native void peer_connection_incoming_suggest(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native void peer_connection_set_has_metadata(long jarg1, peer_connection jarg1_, boolean jarg2);
  public final static native boolean peer_connection_has_metadata(long jarg1, peer_connection jarg1_);
  public final static native boolean peer_connection_send_choke(long jarg1, peer_connection jarg1_);
  public final static native boolean peer_connection_send_unchoke(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_send_interested(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_send_not_interested(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_send_suggest(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native void peer_connection_snub_peer(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_reject_piece(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native boolean peer_connection_can_request_time_critical(long jarg1, peer_connection jarg1_);
  public final static native int peer_connection_req_time_critical_get();
  public final static native int peer_connection_req_busy_get();
  public final static native void peer_connection_cancel_all_requests(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_send_block_requests(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_assign_bandwidth(long jarg1, peer_connection jarg1_, int jarg2, int jarg3);
  public final static native boolean peer_connection_in_handshake(long jarg1, peer_connection jarg1_);
  public final static native int peer_connection_message_type_request_get();
  public final static native void peer_connection_setup_send(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_cork_socket(long jarg1, peer_connection jarg1_);
  public final static native boolean peer_connection_is_corked(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_uncork_socket(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_set_country(long jarg1, peer_connection jarg1_, String jarg2);
  public final static native boolean peer_connection_has_country(long jarg1, peer_connection jarg1_);
  public final static native int peer_connection_outstanding_bytes(long jarg1, peer_connection jarg1_);
  public final static native int peer_connection_send_buffer_size(long jarg1, peer_connection jarg1_);
  public final static native int peer_connection_send_buffer_capacity(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_max_out_request_queue__SWIG_0(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native int peer_connection_max_out_request_queue__SWIG_1(long jarg1, peer_connection jarg1_);
  public final static native int peer_connection_last_seen_complete(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_set_last_seen_complete(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native long peer_connection_uploaded_in_last_round(long jarg1, peer_connection jarg1_);
  public final static native long peer_connection_downloaded_in_last_round(long jarg1, peer_connection jarg1_);
  public final static native long peer_connection_uploaded_since_unchoked(long jarg1, peer_connection jarg1_);
  public final static native long peer_connection_time_of_last_unchoke(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_on_disk(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_on_allocate_disk_buffer(long jarg1, peer_connection jarg1_, String jarg2, int jarg3);
  public final static native int peer_connection_num_reading_bytes(long jarg1, peer_connection jarg1_);
  public final static native void peer_connection_setup_receive(long jarg1, peer_connection jarg1_);
  public final static native long peer_connection_stats_counters(long jarg1, peer_connection jarg1_);
  public final static native int peer_connection_get_priority(long jarg1, peer_connection jarg1_, int jarg2);
  public final static native long new_cork(long jarg1, peer_connection jarg1_);
  public final static native void delete_cork(long jarg1);
  public final static native void cork_m_need_uncork_set(long jarg1, cork jarg1_, boolean jarg2);
  public final static native boolean cork_m_need_uncork_get(long jarg1, cork jarg1_);
  public final static native void proxy_settings_hostname_set(long jarg1, proxy_settings jarg1_, String jarg2);
  public final static native String proxy_settings_hostname_get(long jarg1, proxy_settings jarg1_);
  public final static native void proxy_settings_username_set(long jarg1, proxy_settings jarg1_, String jarg2);
  public final static native String proxy_settings_username_get(long jarg1, proxy_settings jarg1_);
  public final static native void proxy_settings_password_set(long jarg1, proxy_settings jarg1_, String jarg2);
  public final static native String proxy_settings_password_get(long jarg1, proxy_settings jarg1_);
  public final static native void proxy_settings_type_set(long jarg1, proxy_settings jarg1_, short jarg2);
  public final static native short proxy_settings_type_get(long jarg1, proxy_settings jarg1_);
  public final static native void proxy_settings_port_set(long jarg1, proxy_settings jarg1_, int jarg2);
  public final static native int proxy_settings_port_get(long jarg1, proxy_settings jarg1_);
  public final static native void proxy_settings_proxy_hostnames_set(long jarg1, proxy_settings jarg1_, boolean jarg2);
  public final static native boolean proxy_settings_proxy_hostnames_get(long jarg1, proxy_settings jarg1_);
  public final static native void proxy_settings_proxy_peer_connections_set(long jarg1, proxy_settings jarg1_, boolean jarg2);
  public final static native boolean proxy_settings_proxy_peer_connections_get(long jarg1, proxy_settings jarg1_);
  public final static native void delete_proxy_settings(long jarg1);
  public final static native long new_dht_settings();
  public final static native void dht_settings_max_peers_reply_set(long jarg1, dht_settings jarg1_, int jarg2);
  public final static native int dht_settings_max_peers_reply_get(long jarg1, dht_settings jarg1_);
  public final static native void dht_settings_search_branching_set(long jarg1, dht_settings jarg1_, int jarg2);
  public final static native int dht_settings_search_branching_get(long jarg1, dht_settings jarg1_);
  public final static native void dht_settings_max_fail_count_set(long jarg1, dht_settings jarg1_, int jarg2);
  public final static native int dht_settings_max_fail_count_get(long jarg1, dht_settings jarg1_);
  public final static native void dht_settings_max_torrents_set(long jarg1, dht_settings jarg1_, int jarg2);
  public final static native int dht_settings_max_torrents_get(long jarg1, dht_settings jarg1_);
  public final static native void dht_settings_max_dht_items_set(long jarg1, dht_settings jarg1_, int jarg2);
  public final static native int dht_settings_max_dht_items_get(long jarg1, dht_settings jarg1_);
  public final static native void dht_settings_max_torrent_search_reply_set(long jarg1, dht_settings jarg1_, int jarg2);
  public final static native int dht_settings_max_torrent_search_reply_get(long jarg1, dht_settings jarg1_);
  public final static native void dht_settings_restrict_routing_ips_set(long jarg1, dht_settings jarg1_, boolean jarg2);
  public final static native boolean dht_settings_restrict_routing_ips_get(long jarg1, dht_settings jarg1_);
  public final static native void dht_settings_restrict_search_ips_set(long jarg1, dht_settings jarg1_, boolean jarg2);
  public final static native boolean dht_settings_restrict_search_ips_get(long jarg1, dht_settings jarg1_);
  public final static native void dht_settings_extended_routing_table_set(long jarg1, dht_settings jarg1_, boolean jarg2);
  public final static native boolean dht_settings_extended_routing_table_get(long jarg1, dht_settings jarg1_);
  public final static native void dht_settings_aggressive_lookups_set(long jarg1, dht_settings jarg1_, boolean jarg2);
  public final static native boolean dht_settings_aggressive_lookups_get(long jarg1, dht_settings jarg1_);
  public final static native void dht_settings_privacy_lookups_set(long jarg1, dht_settings jarg1_, boolean jarg2);
  public final static native boolean dht_settings_privacy_lookups_get(long jarg1, dht_settings jarg1_);
  public final static native void dht_settings_enforce_node_id_set(long jarg1, dht_settings jarg1_, boolean jarg2);
  public final static native boolean dht_settings_enforce_node_id_get(long jarg1, dht_settings jarg1_);
  public final static native void dht_settings_ignore_dark_internet_set(long jarg1, dht_settings jarg1_, boolean jarg2);
  public final static native boolean dht_settings_ignore_dark_internet_get(long jarg1, dht_settings jarg1_);
  public final static native void dht_settings_block_timeout_set(long jarg1, dht_settings jarg1_, int jarg2);
  public final static native int dht_settings_block_timeout_get(long jarg1, dht_settings jarg1_);
  public final static native void dht_settings_block_ratelimit_set(long jarg1, dht_settings jarg1_, int jarg2);
  public final static native int dht_settings_block_ratelimit_get(long jarg1, dht_settings jarg1_);
  public final static native void delete_dht_settings(long jarg1);
  public final static native long piece_block_invalid_get();
  public final static native long new_piece_block__SWIG_0();
  public final static native long new_piece_block__SWIG_1(long jarg1, int jarg2);
  public final static native void piece_block_piece_index_set(long jarg1, piece_block jarg1_, long jarg2);
  public final static native long piece_block_piece_index_get(long jarg1, piece_block jarg1_);
  public final static native void piece_block_block_index_set(long jarg1, piece_block jarg1_, long jarg2);
  public final static native long piece_block_block_index_get(long jarg1, piece_block jarg1_);
  public final static native boolean piece_block_op_lt(long jarg1, piece_block jarg1_, long jarg2, piece_block jarg2_);
  public final static native boolean piece_block_op_eq(long jarg1, piece_block jarg1_, long jarg2, piece_block jarg2_);
  public final static native boolean piece_block_op_neq(long jarg1, piece_block jarg1_, long jarg2, piece_block jarg2_);
  public final static native void delete_piece_block(long jarg1);
  public final static native int piece_picker_priority_levels_get();
  public final static native int piece_picker_prio_factor_get();
  public final static native long new_piece_picker_block_info();
  public final static native void piece_picker_block_info_num_peers_set(long jarg1, piece_picker.block_info jarg1_, long jarg2);
  public final static native long piece_picker_block_info_num_peers_get(long jarg1, piece_picker.block_info jarg1_);
  public final static native int piece_picker_block_info_state_none_get();
  public final static native int piece_picker_block_info_state_requested_get();
  public final static native int piece_picker_block_info_state_writing_get();
  public final static native int piece_picker_block_info_state_finished_get();
  public final static native void piece_picker_block_info_state_set(long jarg1, piece_picker.block_info jarg1_, long jarg2);
  public final static native long piece_picker_block_info_state_get(long jarg1, piece_picker.block_info jarg1_);
  public final static native void delete_piece_picker_block_info(long jarg1);
  public final static native int piece_picker_rarest_first_get();
  public final static native int piece_picker_reverse_get();
  public final static native int piece_picker_on_parole_get();
  public final static native int piece_picker_prioritize_partials_get();
  public final static native int piece_picker_sequential_get();
  public final static native int piece_picker_time_critical_mode_get();
  public final static native int piece_picker_align_expanded_pieces_get();
  public final static native long new_piece_picker_downloading_piece();
  public final static native boolean piece_picker_downloading_piece_op_lt(long jarg1, piece_picker.downloading_piece jarg1_, long jarg2, piece_picker.downloading_piece jarg2_);
  public final static native void piece_picker_downloading_piece_index_set(long jarg1, piece_picker.downloading_piece jarg1_, long jarg2);
  public final static native long piece_picker_downloading_piece_index_get(long jarg1, piece_picker.downloading_piece jarg1_);
  public final static native void piece_picker_downloading_piece_info_idx_set(long jarg1, piece_picker.downloading_piece jarg1_, int jarg2);
  public final static native int piece_picker_downloading_piece_info_idx_get(long jarg1, piece_picker.downloading_piece jarg1_);
  public final static native void piece_picker_downloading_piece_finished_set(long jarg1, piece_picker.downloading_piece jarg1_, int jarg2);
  public final static native int piece_picker_downloading_piece_finished_get(long jarg1, piece_picker.downloading_piece jarg1_);
  public final static native void piece_picker_downloading_piece_passed_hash_check_set(long jarg1, piece_picker.downloading_piece jarg1_, int jarg2);
  public final static native int piece_picker_downloading_piece_passed_hash_check_get(long jarg1, piece_picker.downloading_piece jarg1_);
  public final static native void piece_picker_downloading_piece_writing_set(long jarg1, piece_picker.downloading_piece jarg1_, int jarg2);
  public final static native int piece_picker_downloading_piece_writing_get(long jarg1, piece_picker.downloading_piece jarg1_);
  public final static native void piece_picker_downloading_piece_locked_set(long jarg1, piece_picker.downloading_piece jarg1_, int jarg2);
  public final static native int piece_picker_downloading_piece_locked_get(long jarg1, piece_picker.downloading_piece jarg1_);
  public final static native void piece_picker_downloading_piece_requested_set(long jarg1, piece_picker.downloading_piece jarg1_, int jarg2);
  public final static native int piece_picker_downloading_piece_requested_get(long jarg1, piece_picker.downloading_piece jarg1_);
  public final static native void piece_picker_downloading_piece_outstanding_hash_check_set(long jarg1, piece_picker.downloading_piece jarg1_, int jarg2);
  public final static native int piece_picker_downloading_piece_outstanding_hash_check_get(long jarg1, piece_picker.downloading_piece jarg1_);
  public final static native void delete_piece_picker_downloading_piece(long jarg1);
  public final static native long new_piece_picker();
  public final static native void piece_picker_get_availability__SWIG_0(long jarg1, piece_picker jarg1_, long jarg2, int_vector jarg2_);
  public final static native int piece_picker_get_availability__SWIG_1(long jarg1, piece_picker jarg1_, int jarg2);
  public final static native void piece_picker_we_have(long jarg1, piece_picker jarg1_, int jarg2);
  public final static native void piece_picker_we_dont_have(long jarg1, piece_picker jarg1_, int jarg2);
  public final static native int piece_picker_cursor(long jarg1, piece_picker jarg1_);
  public final static native int piece_picker_reverse_cursor(long jarg1, piece_picker jarg1_);
  public final static native void piece_picker_init(long jarg1, piece_picker jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int piece_picker_num_pieces(long jarg1, piece_picker jarg1_);
  public final static native boolean piece_picker_have_piece(long jarg1, piece_picker jarg1_, int jarg2);
  public final static native boolean piece_picker_is_downloading(long jarg1, piece_picker jarg1_, int jarg2);
  public final static native boolean piece_picker_set_piece_priority(long jarg1, piece_picker jarg1_, int jarg2, int jarg3);
  public final static native int piece_picker_piece_priority(long jarg1, piece_picker jarg1_, int jarg2);
  public final static native void piece_picker_piece_priorities(long jarg1, piece_picker jarg1_, long jarg2, int_vector jarg2_);
  public final static native void piece_picker_filtered_pieces(long jarg1, piece_picker jarg1_, long jarg2, bool_vector jarg2_);
  public final static native boolean piece_picker_is_requested(long jarg1, piece_picker jarg1_, long jarg2, piece_block jarg2_);
  public final static native boolean piece_picker_is_downloaded(long jarg1, piece_picker jarg1_, long jarg2, piece_block jarg2_);
  public final static native boolean piece_picker_is_finished__SWIG_0(long jarg1, piece_picker jarg1_, long jarg2, piece_block jarg2_);
  public final static native void piece_picker_lock_piece(long jarg1, piece_picker jarg1_, int jarg2);
  public final static native void piece_picker_write_failed(long jarg1, piece_picker jarg1_, long jarg2, piece_block jarg2_);
  public final static native int piece_picker_num_peers(long jarg1, piece_picker jarg1_, long jarg2, piece_block jarg2_);
  public final static native void piece_picker_piece_passed(long jarg1, piece_picker jarg1_, int jarg2);
  public final static native void piece_picker_piece_info(long jarg1, piece_picker jarg1_, int jarg2, long jarg3, piece_picker.downloading_piece jarg3_);
  public final static native void piece_picker_piece_stats_t_peer_count_set(long jarg1, piece_picker.piece_stats_t jarg1_, int jarg2);
  public final static native int piece_picker_piece_stats_t_peer_count_get(long jarg1, piece_picker.piece_stats_t jarg1_);
  public final static native void piece_picker_piece_stats_t_priority_set(long jarg1, piece_picker.piece_stats_t jarg1_, int jarg2);
  public final static native int piece_picker_piece_stats_t_priority_get(long jarg1, piece_picker.piece_stats_t jarg1_);
  public final static native void piece_picker_piece_stats_t_have_set(long jarg1, piece_picker.piece_stats_t jarg1_, boolean jarg2);
  public final static native boolean piece_picker_piece_stats_t_have_get(long jarg1, piece_picker.piece_stats_t jarg1_);
  public final static native void piece_picker_piece_stats_t_downloading_set(long jarg1, piece_picker.piece_stats_t jarg1_, boolean jarg2);
  public final static native boolean piece_picker_piece_stats_t_downloading_get(long jarg1, piece_picker.piece_stats_t jarg1_);
  public final static native long new_piece_picker_piece_stats_t();
  public final static native void delete_piece_picker_piece_stats_t(long jarg1);
  public final static native long piece_picker_piece_stats(long jarg1, piece_picker jarg1_, int jarg2);
  public final static native void piece_picker_restore_piece(long jarg1, piece_picker jarg1_, int jarg2);
  public final static native boolean piece_picker_is_piece_finished(long jarg1, piece_picker jarg1_, int jarg2);
  public final static native boolean piece_picker_has_piece_passed(long jarg1, piece_picker jarg1_, int jarg2);
  public final static native int piece_picker_blocks_in_piece(long jarg1, piece_picker jarg1_, int jarg2);
  public final static native int piece_picker_unverified_blocks(long jarg1, piece_picker jarg1_);
  public final static native long piece_picker_get_download_queue(long jarg1, piece_picker jarg1_);
  public final static native int piece_picker_get_download_queue_size(long jarg1, piece_picker jarg1_);
  public final static native int piece_picker_num_filtered(long jarg1, piece_picker jarg1_);
  public final static native int piece_picker_num_have_filtered(long jarg1, piece_picker jarg1_);
  public final static native int piece_picker_num_have(long jarg1, piece_picker jarg1_);
  public final static native int piece_picker_num_passed(long jarg1, piece_picker jarg1_);
  public final static native boolean piece_picker_is_finished__SWIG_1(long jarg1, piece_picker jarg1_);
  public final static native boolean piece_picker_is_seeding(long jarg1, piece_picker jarg1_);
  public final static native int piece_picker_num_want_left(long jarg1, piece_picker jarg1_);
  public final static native long new_piece_picker_has_index(int jarg1);
  public final static native void piece_picker_has_index_index_set(long jarg1, piece_picker.has_index jarg1_, long jarg2);
  public final static native long piece_picker_has_index_index_get(long jarg1, piece_picker.has_index jarg1_);
  public final static native void delete_piece_picker_has_index(long jarg1);
  public final static native int piece_picker_blocks_in_last_piece(long jarg1, piece_picker jarg1_);
  public final static native long piece_picker_distributed_copies(long jarg1, piece_picker jarg1_);
  public final static native void piece_picker_set_num_pad_files(long jarg1, piece_picker jarg1_, int jarg2);
  public final static native long piece_picker_blocks_for_piece(long jarg1, piece_picker jarg1_, long jarg2, piece_picker.downloading_piece jarg2_);
  public final static native int piece_picker_max_pieces_get();
  public final static native void delete_piece_picker(long jarg1);
  public final static native void initialize_default_settings(long jarg1, session_settings jarg1_);
  public final static native void session_settings_set_str(long jarg1, session_settings jarg1_, int jarg2, String jarg3);
  public final static native String session_settings_get_str(long jarg1, session_settings jarg1_, int jarg2);
  public final static native void session_settings_set_int(long jarg1, session_settings jarg1_, int jarg2, int jarg3);
  public final static native int session_settings_get_int(long jarg1, session_settings jarg1_, int jarg2);
  public final static native void session_settings_set_bool(long jarg1, session_settings jarg1_, int jarg2, boolean jarg3);
  public final static native boolean session_settings_get_bool(long jarg1, session_settings jarg1_, int jarg2);
  public final static native long new_session_settings();
  public final static native void delete_session_settings(long jarg1);
  public final static native long load_pack_from_dict(long jarg1, bdecode_node jarg1_);
  public final static native void save_settings_to_dict(long jarg1, session_settings jarg1_, long jarg2, string_entry_map jarg2_);
  public final static native int setting_by_name(String jarg1);
  public final static native String name_for_setting(int jarg1);
  public final static native void settings_pack_set_str(long jarg1, settings_pack jarg1_, int jarg2, String jarg3);
  public final static native void settings_pack_set_int(long jarg1, settings_pack jarg1_, int jarg2, int jarg3);
  public final static native void settings_pack_set_bool(long jarg1, settings_pack jarg1_, int jarg2, boolean jarg3);
  public final static native boolean settings_pack_has_val(long jarg1, settings_pack jarg1_, int jarg2);
  public final static native void settings_pack_clear(long jarg1, settings_pack jarg1_);
  public final static native String settings_pack_get_str(long jarg1, settings_pack jarg1_, int jarg2);
  public final static native int settings_pack_get_int(long jarg1, settings_pack jarg1_, int jarg2);
  public final static native boolean settings_pack_get_bool(long jarg1, settings_pack jarg1_, int jarg2);
  public final static native int settings_pack_string_type_base_get();
  public final static native int settings_pack_int_type_base_get();
  public final static native int settings_pack_bool_type_base_get();
  public final static native int settings_pack_type_mask_get();
  public final static native int settings_pack_index_mask_get();
  public final static native int settings_pack_user_agent_get();
  public final static native int settings_pack_allow_multiple_connections_per_ip_get();
  public final static native int settings_pack_tracker_completion_timeout_get();
  public final static native int settings_pack_num_string_settings_get();
  public final static native int settings_pack_num_bool_settings_get();
  public final static native int settings_pack_num_int_settings_get();
  public final static native int settings_pack_no_piece_suggestions_get();
  public final static native int settings_pack_suggest_read_cache_get();
  public final static native int settings_pack_fixed_slots_choker_get();
  public final static native int settings_pack_rate_based_choker_get();
  public final static native int settings_pack_bittyrant_choker_get();
  public final static native int settings_pack_enable_os_cache_get();
  public final static native int settings_pack_deprecated_get();
  public final static native int settings_pack_disable_os_cache_get();
  public final static native int settings_pack_prefer_tcp_get();
  public final static native int settings_pack_peer_proportional_get();
  public final static native int settings_pack_pe_plaintext_get();
  public final static native int settings_pack_pe_rc4_get();
  public final static native int settings_pack_pe_both_get();
  public final static native long new_settings_pack();
  public final static native void delete_settings_pack(long jarg1);
  public final static native void peer_class_info_ignore_unchoke_slots_set(long jarg1, peer_class_info jarg1_, boolean jarg2);
  public final static native boolean peer_class_info_ignore_unchoke_slots_get(long jarg1, peer_class_info jarg1_);
  public final static native void peer_class_info_connection_limit_factor_set(long jarg1, peer_class_info jarg1_, int jarg2);
  public final static native int peer_class_info_connection_limit_factor_get(long jarg1, peer_class_info jarg1_);
  public final static native void peer_class_info_label_set(long jarg1, peer_class_info jarg1_, String jarg2);
  public final static native String peer_class_info_label_get(long jarg1, peer_class_info jarg1_);
  public final static native void peer_class_info_upload_limit_set(long jarg1, peer_class_info jarg1_, int jarg2);
  public final static native int peer_class_info_upload_limit_get(long jarg1, peer_class_info jarg1_);
  public final static native void peer_class_info_download_limit_set(long jarg1, peer_class_info jarg1_, int jarg2);
  public final static native int peer_class_info_download_limit_get(long jarg1, peer_class_info jarg1_);
  public final static native void peer_class_info_upload_priority_set(long jarg1, peer_class_info jarg1_, int jarg2);
  public final static native int peer_class_info_upload_priority_get(long jarg1, peer_class_info jarg1_);
  public final static native void peer_class_info_download_priority_set(long jarg1, peer_class_info jarg1_, int jarg2);
  public final static native int peer_class_info_download_priority_get(long jarg1, peer_class_info jarg1_);
  public final static native long new_peer_class_info();
  public final static native void delete_peer_class_info(long jarg1);
  public final static native long new_peer_class(String jarg1);
  public final static native void peer_class_set_info(long jarg1, peer_class jarg1_, long jarg2, peer_class_info jarg2_);
  public final static native void peer_class_get_info(long jarg1, peer_class jarg1_, long jarg2, peer_class_info jarg2_);
  public final static native void peer_class_set_upload_limit(long jarg1, peer_class jarg1_, int jarg2);
  public final static native void peer_class_set_download_limit(long jarg1, peer_class jarg1_, int jarg2);
  public final static native void peer_class_ignore_unchoke_slots_set(long jarg1, peer_class jarg1_, boolean jarg2);
  public final static native boolean peer_class_ignore_unchoke_slots_get(long jarg1, peer_class jarg1_);
  public final static native void peer_class_connection_limit_factor_set(long jarg1, peer_class jarg1_, int jarg2);
  public final static native int peer_class_connection_limit_factor_get(long jarg1, peer_class jarg1_);
  public final static native void peer_class_label_set(long jarg1, peer_class jarg1_, String jarg2);
  public final static native String peer_class_label_get(long jarg1, peer_class jarg1_);
  public final static native void delete_peer_class(long jarg1);
  public final static native short peer_class_pool_new_peer_class(long jarg1, peer_class_pool jarg1_, String jarg2);
  public final static native void peer_class_pool_decref(long jarg1, peer_class_pool jarg1_, short jarg2);
  public final static native void peer_class_pool_incref(long jarg1, peer_class_pool jarg1_, short jarg2);
  public final static native long peer_class_pool_at__SWIG_0(long jarg1, peer_class_pool jarg1_, short jarg2);
  public final static native long new_peer_class_pool();
  public final static native void delete_peer_class_pool(long jarg1);
  public final static native long new_peer_class_type_filter();
  public final static native int peer_class_type_filter_tcp_socket_get();
  public final static native void peer_class_type_filter_add(long jarg1, peer_class_type_filter jarg1_, int jarg2, int jarg3);
  public final static native void peer_class_type_filter_remove(long jarg1, peer_class_type_filter jarg1_, int jarg2, int jarg3);
  public final static native void peer_class_type_filter_disallow(long jarg1, peer_class_type_filter jarg1_, int jarg2, int jarg3);
  public final static native void peer_class_type_filter_allow(long jarg1, peer_class_type_filter jarg1_, int jarg2, int jarg3);
  public final static native long peer_class_type_filter_apply(long jarg1, peer_class_type_filter jarg1_, int jarg2, long jarg3);
  public final static native void delete_peer_class_type_filter(long jarg1);
  public final static native int TORRENT_DEBUG_STREAMING_get();
  public final static native void resume_data_t_buf_set(long jarg1, resume_data_t jarg1_, long jarg2, char_vector jarg2_);
  public final static native long resume_data_t_buf_get(long jarg1, resume_data_t jarg1_);
  public final static native void resume_data_t_node_set(long jarg1, resume_data_t jarg1_, long jarg2, bdecode_node jarg2_);
  public final static native long resume_data_t_node_get(long jarg1, resume_data_t jarg1_);
  public final static native long new_resume_data_t();
  public final static native void delete_resume_data_t(long jarg1);
  public final static native long new_web_seed_t__SWIG_0(long jarg1, web_seed_entry jarg1_);
  public final static native long new_web_seed_t__SWIG_1(String jarg1, int jarg2, String jarg3, long jarg4, string_string_pair_vector jarg4_);
  public final static native long new_web_seed_t__SWIG_2(String jarg1, int jarg2, String jarg3);
  public final static native long new_web_seed_t__SWIG_3(String jarg1, int jarg2);
  public final static native void web_seed_t_retry_set(long jarg1, web_seed_t jarg1_, long jarg2, high_resolution_clock.time_point jarg2_);
  public final static native long web_seed_t_retry_get(long jarg1, web_seed_t jarg1_);
  public final static native void web_seed_t_endpoints_set(long jarg1, web_seed_t jarg1_, long jarg2, tcp_endpoint_vector jarg2_);
  public final static native long web_seed_t_endpoints_get(long jarg1, web_seed_t jarg1_);
  public final static native long web_seed_t_peer_info_get(long jarg1, web_seed_t jarg1_);
  public final static native void web_seed_t_supports_keepalive_set(long jarg1, web_seed_t jarg1_, boolean jarg2);
  public final static native boolean web_seed_t_supports_keepalive_get(long jarg1, web_seed_t jarg1_);
  public final static native void web_seed_t_resolving_set(long jarg1, web_seed_t jarg1_, boolean jarg2);
  public final static native boolean web_seed_t_resolving_get(long jarg1, web_seed_t jarg1_);
  public final static native void web_seed_t_removed_set(long jarg1, web_seed_t jarg1_, boolean jarg2);
  public final static native boolean web_seed_t_removed_get(long jarg1, web_seed_t jarg1_);
  public final static native void web_seed_t_restart_request_set(long jarg1, web_seed_t jarg1_, long jarg2, peer_request jarg2_);
  public final static native long web_seed_t_restart_request_get(long jarg1, web_seed_t jarg1_);
  public final static native void web_seed_t_restart_piece_set(long jarg1, web_seed_t jarg1_, long jarg2, char_vector jarg2_);
  public final static native long web_seed_t_restart_piece_get(long jarg1, web_seed_t jarg1_);
  public final static native void delete_web_seed_t(long jarg1);
  public final static native void delete_torrent(long jarg1);
  public final static native long torrent_info_hash(long jarg1, torrent jarg1_);
  public final static native boolean torrent_is_deleted(long jarg1, torrent jarg1_);
  public final static native void torrent_start(long jarg1, torrent jarg1_, long jarg2, add_torrent_params jarg2_);
  public final static native void torrent_start_download_url(long jarg1, torrent jarg1_);
  public final static native int torrent_current_stats_state(long jarg1, torrent jarg1_);
  public final static native void torrent_add_extension(long jarg1, torrent jarg1_, long jarg2, torrent_plugin jarg2_);
  public final static native void torrent_remove_extension(long jarg1, torrent jarg1_, long jarg2, torrent_plugin jarg2_);
  public final static native void torrent_notify_extension_add_peer(long jarg1, torrent jarg1_, long jarg2, tcp_endpoint jarg2_, int jarg3, int jarg4);
  public final static native long torrent_find_lowest_ranking_peer(long jarg1, torrent jarg1_);
  public final static native void torrent_init(long jarg1, torrent jarg1_);
  public final static native boolean torrent_need_loaded(long jarg1, torrent jarg1_);
  public final static native void torrent_unload(long jarg1, torrent jarg1_);
  public final static native boolean torrent_load(long jarg1, torrent jarg1_, long jarg2, char_vector jarg2_);
  public final static native boolean torrent_is_pinned(long jarg1, torrent jarg1_);
  public final static native void torrent_set_pinned(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native boolean torrent_is_loaded(long jarg1, torrent jarg1_);
  public final static native boolean torrent_should_be_loaded(long jarg1, torrent jarg1_);
  public final static native long torrent_find_introducer(long jarg1, torrent jarg1_, long jarg2, tcp_endpoint jarg2_);
  public final static native long torrent_find_peer__SWIG_0(long jarg1, torrent jarg1_, long jarg2, tcp_endpoint jarg2_);
  public final static native long torrent_find_peer__SWIG_1(long jarg1, torrent jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native void torrent_files_checked(long jarg1, torrent jarg1_);
  public final static native void torrent_start_checking(long jarg1, torrent jarg1_);
  public final static native void torrent_start_announcing(long jarg1, torrent jarg1_);
  public final static native void torrent_stop_announcing(long jarg1, torrent jarg1_);
  public final static native void torrent_send_share_mode(long jarg1, torrent jarg1_);
  public final static native void torrent_send_upload_only(long jarg1, torrent jarg1_);
  public final static native void torrent_set_share_mode(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native boolean torrent_share_mode(long jarg1, torrent jarg1_);
  public final static native boolean torrent_graceful_pause(long jarg1, torrent jarg1_);
  public final static native void torrent_set_upload_mode(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native boolean torrent_upload_mode(long jarg1, torrent jarg1_);
  public final static native boolean torrent_is_upload_only(long jarg1, torrent jarg1_);
  public final static native int torrent_seed_rank(long jarg1, torrent jarg1_, long jarg2, session_settings jarg2_);
  public final static native int torrent_overwrite_existing_get();
  public final static native void torrent_add_piece__SWIG_0(long jarg1, torrent jarg1_, int jarg2, String jarg3, int jarg4);
  public final static native void torrent_add_piece__SWIG_1(long jarg1, torrent jarg1_, int jarg2, String jarg3);
  public final static native void torrent_schedule_storage_tick(long jarg1, torrent jarg1_);
  public final static native void torrent_set_progress_ppm(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_read_piece_struct_blocks_left_set(long jarg1, torrent.read_piece_struct jarg1_, int jarg2);
  public final static native int torrent_read_piece_struct_blocks_left_get(long jarg1, torrent.read_piece_struct jarg1_);
  public final static native void torrent_read_piece_struct_fail_set(long jarg1, torrent.read_piece_struct jarg1_, boolean jarg2);
  public final static native boolean torrent_read_piece_struct_fail_get(long jarg1, torrent.read_piece_struct jarg1_);
  public final static native void torrent_read_piece_struct_error_set(long jarg1, torrent.read_piece_struct jarg1_, long jarg2, error_code jarg2_);
  public final static native long torrent_read_piece_struct_error_get(long jarg1, torrent.read_piece_struct jarg1_);
  public final static native long new_torrent_read_piece_struct();
  public final static native void delete_torrent_read_piece_struct(long jarg1);
  public final static native void torrent_read_piece(long jarg1, torrent jarg1_, int jarg2);
  public final static native int torrent_storage_mode(long jarg1, torrent jarg1_);
  public final static native void torrent_abort(long jarg1, torrent jarg1_);
  public final static native boolean torrent_is_aborted(long jarg1, torrent jarg1_);
  public final static native void torrent_new_external_ip(long jarg1, torrent jarg1_);
  public final static native int torrent_state(long jarg1, torrent jarg1_);
  public final static native void torrent_set_state(long jarg1, torrent jarg1_, int jarg2);
  public final static native long torrent_settings(long jarg1, torrent jarg1_);
  public final static native void torrent_set_sequential_download(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native boolean torrent_is_sequential_download(long jarg1, torrent jarg1_);
  public final static native void torrent_queue_up(long jarg1, torrent jarg1_);
  public final static native void torrent_queue_down(long jarg1, torrent jarg1_);
  public final static native void torrent_set_queue_position(long jarg1, torrent jarg1_, int jarg2);
  public final static native int torrent_queue_position(long jarg1, torrent jarg1_);
  public final static native void torrent_set_queue_position_impl(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_second_tick(long jarg1, torrent jarg1_, int jarg2, int jarg3);
  public final static native void torrent_maybe_connect_web_seeds(long jarg1, torrent jarg1_);
  public final static native String torrent_name(long jarg1, torrent jarg1_);
  public final static native long torrent_statistics(long jarg1, torrent jarg1_);
  public final static native long torrent_bytes_left(long jarg1, torrent jarg1_);
  public final static native void torrent_bytes_done(long jarg1, torrent jarg1_, long jarg2, torrent_status jarg2_, boolean jarg3);
  public final static native long torrent_quantized_bytes_done(long jarg1, torrent jarg1_);
  public final static native void torrent_sent_bytes(long jarg1, torrent jarg1_, int jarg2, int jarg3);
  public final static native void torrent_received_bytes(long jarg1, torrent jarg1_, int jarg2, int jarg3);
  public final static native void torrent_trancieve_ip_packet(long jarg1, torrent jarg1_, int jarg2, boolean jarg3);
  public final static native void torrent_sent_syn(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native void torrent_received_synack(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native void torrent_port_filter_updated(long jarg1, torrent jarg1_);
  public final static native String torrent_resolve_filename(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_clear_error(long jarg1, torrent jarg1_);
  public final static native int torrent_error_file_none_get();
  public final static native int torrent_error_file_url_get();
  public final static native int torrent_error_file_ssl_ctx_get();
  public final static native int torrent_error_file_metadata_get();
  public final static native void torrent_set_error(long jarg1, torrent jarg1_, long jarg2, error_code jarg2_, int jarg3);
  public final static native boolean torrent_has_error(long jarg1, torrent jarg1_);
  public final static native long torrent_error(long jarg1, torrent jarg1_);
  public final static native void torrent_flush_cache(long jarg1, torrent jarg1_);
  public final static native void torrent_pause__SWIG_0(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native void torrent_pause__SWIG_1(long jarg1, torrent jarg1_);
  public final static native void torrent_resume(long jarg1, torrent jarg1_);
  public final static native void torrent_set_allow_peers__SWIG_0(long jarg1, torrent jarg1_, boolean jarg2, boolean jarg3);
  public final static native void torrent_set_allow_peers__SWIG_1(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native void torrent_set_announce_to_dht(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native void torrent_set_announce_to_trackers(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native void torrent_set_announce_to_lsd(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native int torrent_started(long jarg1, torrent jarg1_);
  public final static native void torrent_step_session_time(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_do_pause(long jarg1, torrent jarg1_);
  public final static native void torrent_do_resume(long jarg1, torrent jarg1_);
  public final static native int torrent_finished_time(long jarg1, torrent jarg1_);
  public final static native int torrent_active_time(long jarg1, torrent jarg1_);
  public final static native int torrent_seeding_time(long jarg1, torrent jarg1_);
  public final static native boolean torrent_is_paused(long jarg1, torrent jarg1_);
  public final static native boolean torrent_allows_peers(long jarg1, torrent jarg1_);
  public final static native boolean torrent_is_torrent_paused(long jarg1, torrent jarg1_);
  public final static native void torrent_force_recheck(long jarg1, torrent jarg1_);
  public final static native void torrent_save_resume_data(long jarg1, torrent jarg1_, int jarg2);
  public final static native boolean torrent_do_async_save_resume_data(long jarg1, torrent jarg1_);
  public final static native boolean torrent_need_save_resume_data(long jarg1, torrent jarg1_);
  public final static native boolean torrent_is_auto_managed(long jarg1, torrent jarg1_);
  public final static native void torrent_auto_managed(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native boolean torrent_should_check_files(long jarg1, torrent jarg1_);
  public final static native boolean torrent_delete_files(long jarg1, torrent jarg1_);
  public final static native void torrent_peers_erased(long jarg1, torrent jarg1_, long jarg2, torrent_peer_ptr_vector jarg2_);
  public final static native void torrent_filter_piece(long jarg1, torrent jarg1_, int jarg2, boolean jarg3);
  public final static native void torrent_filter_pieces(long jarg1, torrent jarg1_, long jarg2, bool_vector jarg2_);
  public final static native boolean torrent_is_piece_filtered(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_filtered_pieces(long jarg1, torrent jarg1_, long jarg2, bool_vector jarg2_);
  public final static native void torrent_filter_files(long jarg1, torrent jarg1_, long jarg2, bool_vector jarg2_);
  public final static native void torrent_file_progress__SWIG_0(long jarg1, torrent jarg1_, long jarg2, float_vector jarg2_);
  public final static native void torrent_piece_availability(long jarg1, torrent jarg1_, long jarg2, int_vector jarg2_);
  public final static native void torrent_set_piece_priority(long jarg1, torrent jarg1_, int jarg2, int jarg3);
  public final static native int torrent_piece_priority(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_prioritize_pieces(long jarg1, torrent jarg1_, long jarg2, int_vector jarg2_);
  public final static native void torrent_prioritize_piece_list(long jarg1, torrent jarg1_, long jarg2, int_int_pair_vector jarg2_);
  public final static native void torrent_piece_priorities(long jarg1, torrent jarg1_, long jarg2, int_vector jarg2_);
  public final static native void torrent_set_file_priority(long jarg1, torrent jarg1_, int jarg2, int jarg3);
  public final static native int torrent_file_priority(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_on_file_priority(long jarg1, torrent jarg1_);
  public final static native void torrent_prioritize_files(long jarg1, torrent jarg1_, long jarg2, int_vector jarg2_);
  public final static native void torrent_file_priorities(long jarg1, torrent jarg1_, long jarg2, int_vector jarg2_);
  public final static native void torrent_cancel_non_critical(long jarg1, torrent jarg1_);
  public final static native void torrent_set_piece_deadline(long jarg1, torrent jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void torrent_reset_piece_deadline(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_clear_time_critical(long jarg1, torrent jarg1_);
  public final static native void torrent_update_piece_priorities(long jarg1, torrent jarg1_);
  public final static native void torrent_status(long jarg1, torrent jarg1_, long jarg2, torrent_status jarg2_, long jarg3);
  public final static native void torrent_state_updated(long jarg1, torrent jarg1_);
  public final static native void torrent_file_progress__SWIG_1(long jarg1, torrent jarg1_, long jarg2, int64_vector jarg2_, int jarg3);
  public final static native void torrent_file_progress__SWIG_2(long jarg1, torrent jarg1_, long jarg2, int64_vector jarg2_);
  public final static native boolean torrent_connect_to_peer__SWIG_0(long jarg1, torrent jarg1_, long jarg2, torrent_peer jarg2_, boolean jarg3);
  public final static native boolean torrent_connect_to_peer__SWIG_1(long jarg1, torrent jarg1_, long jarg2, torrent_peer jarg2_);
  public final static native int torrent_priority(long jarg1, torrent jarg1_);
  public final static native void torrent_set_priority(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_resolve_countries(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native boolean torrent_resolving_countries(long jarg1, torrent jarg1_);
  public final static native void torrent_set_upload_limit(long jarg1, torrent jarg1_, int jarg2);
  public final static native int torrent_upload_limit(long jarg1, torrent jarg1_);
  public final static native void torrent_set_download_limit(long jarg1, torrent jarg1_, int jarg2);
  public final static native int torrent_download_limit(long jarg1, torrent jarg1_);
  public final static native short torrent_peer_class(long jarg1, torrent jarg1_);
  public final static native void torrent_set_max_uploads__SWIG_0(long jarg1, torrent jarg1_, int jarg2, boolean jarg3);
  public final static native void torrent_set_max_uploads__SWIG_1(long jarg1, torrent jarg1_, int jarg2);
  public final static native int torrent_max_uploads(long jarg1, torrent jarg1_);
  public final static native void torrent_set_max_connections__SWIG_0(long jarg1, torrent jarg1_, int jarg2, boolean jarg3);
  public final static native void torrent_set_max_connections__SWIG_1(long jarg1, torrent jarg1_, int jarg2);
  public final static native int torrent_max_connections(long jarg1, torrent jarg1_);
  public final static native void torrent_add_web_seed__SWIG_0(long jarg1, torrent jarg1_, String jarg2, int jarg3);
  public final static native void torrent_add_web_seed__SWIG_1(long jarg1, torrent jarg1_, String jarg2, int jarg3, String jarg4, long jarg5, string_string_pair_vector jarg5_);
  public final static native void torrent_disconnect_web_seed(long jarg1, torrent jarg1_, long jarg2, peer_connection jarg2_);
  public final static native void torrent_retry_web_seed__SWIG_0(long jarg1, torrent jarg1_, long jarg2, peer_connection jarg2_, int jarg3);
  public final static native void torrent_retry_web_seed__SWIG_1(long jarg1, torrent jarg1_, long jarg2, peer_connection jarg2_);
  public final static native boolean torrent_free_upload_slots(long jarg1, torrent jarg1_);
  public final static native boolean torrent_choke_peer(long jarg1, torrent jarg1_, long jarg2, peer_connection jarg2_);
  public final static native boolean torrent_unchoke_peer__SWIG_0(long jarg1, torrent jarg1_, long jarg2, peer_connection jarg2_, boolean jarg3);
  public final static native boolean torrent_unchoke_peer__SWIG_1(long jarg1, torrent jarg1_, long jarg2, peer_connection jarg2_);
  public final static native void torrent_trigger_unchoke(long jarg1, torrent jarg1_);
  public final static native void torrent_trigger_optimistic_unchoke(long jarg1, torrent jarg1_);
  public final static native boolean torrent_attach_peer(long jarg1, torrent jarg1_, long jarg2, peer_connection jarg2_);
  public final static native void torrent_remove_peer(long jarg1, torrent jarg1_, long jarg2, peer_connection jarg2_);
  public final static native boolean torrent_want_tick(long jarg1, torrent jarg1_);
  public final static native void torrent_update_want_tick(long jarg1, torrent jarg1_);
  public final static native void torrent_update_state_list(long jarg1, torrent jarg1_);
  public final static native boolean torrent_want_peers(long jarg1, torrent jarg1_);
  public final static native boolean torrent_want_peers_download(long jarg1, torrent jarg1_);
  public final static native boolean torrent_want_peers_finished(long jarg1, torrent jarg1_);
  public final static native void torrent_update_want_peers(long jarg1, torrent jarg1_);
  public final static native void torrent_update_want_scrape(long jarg1, torrent jarg1_);
  public final static native void torrent_update_gauge(long jarg1, torrent jarg1_);
  public final static native boolean torrent_try_connect_peer(long jarg1, torrent jarg1_);
  public final static native long torrent_add_peer__SWIG_0(long jarg1, torrent jarg1_, long jarg2, tcp_endpoint jarg2_, int jarg3, int jarg4);
  public final static native long torrent_add_peer__SWIG_1(long jarg1, torrent jarg1_, long jarg2, tcp_endpoint jarg2_, int jarg3);
  public final static native boolean torrent_ban_peer(long jarg1, torrent jarg1_, long jarg2, torrent_peer jarg2_);
  public final static native void torrent_update_peer_port(long jarg1, torrent jarg1_, int jarg2, long jarg3, torrent_peer jarg3_, int jarg4);
  public final static native void torrent_set_seed(long jarg1, torrent jarg1_, long jarg2, torrent_peer jarg2_, boolean jarg3);
  public final static native void torrent_clear_failcount(long jarg1, torrent jarg1_, long jarg2, torrent_peer jarg2_);
  public final static native int torrent_num_peers(long jarg1, torrent jarg1_);
  public final static native int torrent_num_seeds(long jarg1, torrent jarg1_);
  public final static native int torrent_num_downloaders(long jarg1, torrent jarg1_);
  public final static native void torrent_get_full_peer_list(long jarg1, torrent jarg1_, long jarg2, peer_list_entry_vector jarg2_);
  public final static native void torrent_get_peer_info(long jarg1, torrent jarg1_, long jarg2, peer_info_vector jarg2_);
  public final static native void torrent_get_download_queue(long jarg1, torrent jarg1_, long jarg2, partial_piece_info_vector jarg2_);
  public final static native void torrent_refresh_explicit_cache(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_add_suggest_piece(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_update_suggest_piece(long jarg1, torrent jarg1_, int jarg2, int jarg3);
  public final static native void torrent_update_auto_sequential(long jarg1, torrent jarg1_);
  public final static native void torrent_refresh_suggest_pieces(long jarg1, torrent jarg1_);
  public final static native void torrent_do_refresh_suggest_pieces(long jarg1, torrent jarg1_);
  public final static native void torrent_tracker_request_error(long jarg1, torrent jarg1_, long jarg2, tracker_request jarg2_, int jarg3, long jarg4, error_code jarg4_, String jarg5, int jarg6);
  public final static native void torrent_tracker_warning(long jarg1, torrent jarg1_, long jarg2, tracker_request jarg2_, String jarg3);
  public final static native void torrent_tracker_scrape_response(long jarg1, torrent jarg1_, long jarg2, tracker_request jarg2_, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void torrent_update_scrape_state(long jarg1, torrent jarg1_);
  public final static native String torrent_tracker_login(long jarg1, torrent jarg1_);
  public final static native long torrent_tracker_key(long jarg1, torrent jarg1_);
  public final static native void torrent_do_connect_boost(long jarg1, torrent jarg1_);
  public final static native long torrent_next_announce(long jarg1, torrent jarg1_);
  public final static native void torrent_force_tracker_request(long jarg1, torrent jarg1_, long jarg2, high_resolution_clock.time_point jarg2_, int jarg3);
  public final static native void torrent_scrape_tracker(long jarg1, torrent jarg1_);
  public final static native void torrent_announce_with_tracker__SWIG_0(long jarg1, torrent jarg1_, short jarg2, long jarg3, address jarg3_);
  public final static native void torrent_announce_with_tracker__SWIG_1(long jarg1, torrent jarg1_, short jarg2);
  public final static native void torrent_announce_with_tracker__SWIG_2(long jarg1, torrent jarg1_);
  public final static native int torrent_seconds_since_last_scrape(long jarg1, torrent jarg1_);
  public final static native void torrent_dht_announce(long jarg1, torrent jarg1_);
  public final static native void torrent_set_tracker_login(long jarg1, torrent jarg1_, String jarg2, String jarg3);
  public final static native long torrent_find_tracker(long jarg1, torrent jarg1_, long jarg2, tracker_request jarg2_);
  public final static native void torrent_recalc_share_mode(long jarg1, torrent jarg1_);
  public final static native void torrent_suggest_piece_t_piece_index_set(long jarg1, torrent.suggest_piece_t jarg1_, int jarg2);
  public final static native int torrent_suggest_piece_t_piece_index_get(long jarg1, torrent.suggest_piece_t jarg1_);
  public final static native void torrent_suggest_piece_t_num_peers_set(long jarg1, torrent.suggest_piece_t jarg1_, int jarg2);
  public final static native int torrent_suggest_piece_t_num_peers_get(long jarg1, torrent.suggest_piece_t jarg1_);
  public final static native boolean torrent_suggest_piece_t_op_lt(long jarg1, torrent.suggest_piece_t jarg1_, long jarg2, torrent.suggest_piece_t jarg2_);
  public final static native long new_torrent_suggest_piece_t();
  public final static native void delete_torrent_suggest_piece_t(long jarg1);
  public final static native long torrent_get_suggested_pieces(long jarg1, torrent jarg1_);
  public final static native boolean torrent_super_seeding__SWIG_0(long jarg1, torrent jarg1_);
  public final static native void torrent_super_seeding__SWIG_1(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native int torrent_get_piece_to_super_seed(long jarg1, torrent jarg1_, long jarg2, bitfield jarg2_);
  public final static native boolean torrent_have_piece(long jarg1, torrent jarg1_, int jarg2);
  public final static native boolean torrent_has_piece_passed(long jarg1, torrent jarg1_, int jarg2);
  public final static native boolean torrent_is_predictive_piece(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_we_have(long jarg1, torrent jarg1_, int jarg2);
  public final static native int torrent_num_have(long jarg1, torrent jarg1_);
  public final static native int torrent_num_passed(long jarg1, torrent jarg1_);
  public final static native void torrent_peer_has__SWIG_0(long jarg1, torrent jarg1_, int jarg2, long jarg3, peer_connection jarg3_);
  public final static native void torrent_peer_has__SWIG_1(long jarg1, torrent jarg1_, long jarg2, bitfield jarg2_, long jarg3, peer_connection jarg3_);
  public final static native void torrent_peer_has_all(long jarg1, torrent jarg1_, long jarg2, peer_connection jarg2_);
  public final static native void torrent_peer_lost__SWIG_0(long jarg1, torrent jarg1_, int jarg2, long jarg3, peer_connection jarg3_);
  public final static native void torrent_peer_lost__SWIG_1(long jarg1, torrent jarg1_, long jarg2, bitfield jarg2_, long jarg3, peer_connection jarg3_);
  public final static native int torrent_block_size(long jarg1, torrent jarg1_);
  public final static native void torrent_disconnect_all(long jarg1, torrent jarg1_, long jarg2, error_code jarg2_, int jarg3);
  public final static native int torrent_disconnect_peers(long jarg1, torrent jarg1_, int jarg2, long jarg3, error_code jarg3_);
  public final static native void torrent_maybe_done_flushing(long jarg1, torrent jarg1_);
  public final static native void torrent_completed(long jarg1, torrent jarg1_);
  public final static native void torrent_on_inactivity_tick(long jarg1, torrent jarg1_, long jarg2, error_code jarg2_);
  public final static native boolean torrent_is_inactive_internal(long jarg1, torrent jarg1_);
  public final static native void torrent_finished(long jarg1, torrent jarg1_);
  public final static native void torrent_resume_download(long jarg1, torrent jarg1_);
  public final static native void torrent_verify_piece(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_peer_is_interesting(long jarg1, torrent jarg1_, long jarg2, peer_connection jarg2_);
  public final static native void torrent_piece_passed(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_piece_failed(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_add_redundant_bytes(long jarg1, torrent jarg1_, int jarg2, int jarg3);
  public final static native void torrent_add_failed_bytes(long jarg1, torrent jarg1_, int jarg2);
  public final static native boolean torrent_is_seed(long jarg1, torrent jarg1_);
  public final static native boolean torrent_is_finished(long jarg1, torrent jarg1_);
  public final static native boolean torrent_is_inactive(long jarg1, torrent jarg1_);
  public final static native String torrent_save_path(long jarg1, torrent jarg1_);
  public final static native void torrent_need_picker(long jarg1, torrent jarg1_);
  public final static native boolean torrent_has_picker(long jarg1, torrent jarg1_);
  public final static native void torrent_update_max_failcount(long jarg1, torrent jarg1_);
  public final static native int torrent_num_known_peers(long jarg1, torrent jarg1_);
  public final static native int torrent_num_connect_candidates(long jarg1, torrent jarg1_);
  public final static native boolean torrent_has_storage(long jarg1, torrent jarg1_);
  public final static native long torrent_torrent_file(long jarg1, torrent jarg1_);
  public final static native long torrent_get_torrent_copy(long jarg1, torrent jarg1_);
  public final static native String torrent_uuid(long jarg1, torrent jarg1_);
  public final static native void torrent_set_uuid(long jarg1, torrent jarg1_, String jarg2);
  public final static native String torrent_url(long jarg1, torrent jarg1_);
  public final static native void torrent_set_url(long jarg1, torrent jarg1_, String jarg2);
  public final static native String torrent_source_feed_url(long jarg1, torrent jarg1_);
  public final static native void torrent_set_source_feed_url(long jarg1, torrent jarg1_, String jarg2);
  public final static native long torrent_trackers(long jarg1, torrent jarg1_);
  public final static native void torrent_replace_trackers(long jarg1, torrent jarg1_, long jarg2, announce_entry_vector jarg2_);
  public final static native boolean torrent_add_tracker(long jarg1, torrent jarg1_, long jarg2, announce_entry jarg2_);
  public final static native long torrent_get_handle(long jarg1, torrent jarg1_);
  public final static native void torrent_write_resume_data(long jarg1, torrent jarg1_, long jarg2, entry jarg2_);
  public final static native void torrent_read_resume_data(long jarg1, torrent jarg1_, long jarg2, bdecode_node jarg2_);
  public final static native void torrent_seen_complete(long jarg1, torrent jarg1_);
  public final static native int torrent_time_since_complete(long jarg1, torrent jarg1_);
  public final static native int torrent_last_seen_complete(long jarg1, torrent jarg1_);
  public final static native void torrent_move_storage(long jarg1, torrent jarg1_, String jarg2, int jarg3);
  public final static native void torrent_rename_file(long jarg1, torrent jarg1_, int jarg2, String jarg3);
  public final static native boolean torrent_ready_for_connections(long jarg1, torrent jarg1_);
  public final static native boolean torrent_valid_metadata(long jarg1, torrent jarg1_);
  public final static native boolean torrent_are_files_checked(long jarg1, torrent jarg1_);
  public final static native boolean torrent_valid_storage(long jarg1, torrent jarg1_);
  public final static native boolean torrent_set_metadata(long jarg1, torrent jarg1_, String jarg2, int jarg3);
  public final static native int torrent_sequence_number(long jarg1, torrent jarg1_);
  public final static native boolean torrent_seed_mode(long jarg1, torrent jarg1_);
  public final static native void torrent_leave_seed_mode(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native boolean torrent_all_verified(long jarg1, torrent jarg1_);
  public final static native boolean torrent_verifying_piece(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_verifying(long jarg1, torrent jarg1_, int jarg2);
  public final static native boolean torrent_verified_piece(long jarg1, torrent jarg1_, int jarg2);
  public final static native void torrent_verified(long jarg1, torrent jarg1_, int jarg2);
  public final static native boolean torrent_add_merkle_nodes(long jarg1, torrent jarg1_, long jarg2, int_sha1_hash_map jarg2_, int jarg3);
  public final static native void torrent_lsd_announce(long jarg1, torrent jarg1_);
  public final static native void torrent_update_last_upload(long jarg1, torrent jarg1_);
  public final static native void torrent_set_apply_ip_filter(long jarg1, torrent jarg1_, boolean jarg2);
  public final static native boolean torrent_apply_ip_filter(long jarg1, torrent jarg1_);
  public final static native long torrent_predictive_pieces(long jarg1, torrent jarg1_);
  public final static native void torrent_predicted_have_piece(long jarg1, torrent jarg1_, int jarg2, int jarg3);
  public final static native void torrent_clear_in_state_update(long jarg1, torrent jarg1_);
  public final static native void torrent_dec_refcount(long jarg1, torrent jarg1_, String jarg2);
  public final static native void torrent_inc_refcount(long jarg1, torrent jarg1_, String jarg2);
  public final static native int torrent_refcount(long jarg1, torrent jarg1_);
  public final static native void torrent_inc_num_connecting(long jarg1, torrent jarg1_);
  public final static native void torrent_dec_num_connecting(long jarg1, torrent jarg1_);
  public final static native boolean torrent_is_ssl_torrent(long jarg1, torrent jarg1_);
  public final static native void torrent_set_ssl_cert(long jarg1, torrent jarg1_, String jarg2, String jarg3, String jarg4, String jarg5);
  public final static native void torrent_set_ssl_cert_buffer(long jarg1, torrent jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native int torrent_num_time_critical_pieces(long jarg1, torrent jarg1_);
  public final static native long new_torrent_ref_holder(long jarg1, torrent jarg1_, String jarg2);
  public final static native void delete_torrent_ref_holder(long jarg1);
  public final static native void torrent_ref_holder_m_torrent_set(long jarg1, torrent_ref_holder jarg1_, long jarg2, torrent jarg2_);
  public final static native long torrent_ref_holder_m_torrent_get(long jarg1, torrent_ref_holder jarg1_);
  public final static native void torrent_ref_holder_m_purpose_set(long jarg1, torrent_ref_holder jarg1_, String jarg2);
  public final static native String torrent_ref_holder_m_purpose_get(long jarg1, torrent_ref_holder jarg1_);
  public final static native int session_handle_save_settings_get();
  public final static native int session_handle_save_dht_settings_get();
  public final static native int session_handle_save_dht_state_get();
  public final static native int session_handle_save_encryption_settings_get();
  public final static native int session_handle_save_as_map_get();
  public final static native void session_handle_save_state__SWIG_0(long jarg1, session_handle jarg1_, long jarg2, entry jarg2_, long jarg3);
  public final static native void session_handle_save_state__SWIG_1(long jarg1, session_handle jarg1_, long jarg2, entry jarg2_);
  public final static native void session_handle_load_state(long jarg1, session_handle jarg1_, long jarg2, bdecode_node jarg2_);
  public final static native void session_handle_refresh_torrent_status__SWIG_0(long jarg1, session_handle jarg1_, long jarg2, torrent_status_vector jarg2_, long jarg3);
  public final static native void session_handle_refresh_torrent_status__SWIG_1(long jarg1, session_handle jarg1_, long jarg2, torrent_status_vector jarg2_);
  public final static native void session_handle_post_torrent_updates__SWIG_0(long jarg1, session_handle jarg1_, long jarg2);
  public final static native void session_handle_post_torrent_updates__SWIG_1(long jarg1, session_handle jarg1_);
  public final static native void session_handle_post_session_stats(long jarg1, session_handle jarg1_);
  public final static native void session_handle_post_dht_stats(long jarg1, session_handle jarg1_);
  public final static native long session_handle_find_torrent(long jarg1, session_handle jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long session_handle_get_torrents(long jarg1, session_handle jarg1_);
  public final static native long session_handle_add_torrent__SWIG_0(long jarg1, session_handle jarg1_, long jarg2, add_torrent_params jarg2_);
  public final static native long session_handle_add_torrent__SWIG_1(long jarg1, session_handle jarg1_, long jarg2, add_torrent_params jarg2_, long jarg3, error_code jarg3_);
  public final static native void session_handle_async_add_torrent(long jarg1, session_handle jarg1_, long jarg2, add_torrent_params jarg2_);
  public final static native void session_handle_pause(long jarg1, session_handle jarg1_);
  public final static native void session_handle_resume(long jarg1, session_handle jarg1_);
  public final static native boolean session_handle_is_paused(long jarg1, session_handle jarg1_);
  public final static native int session_handle_disk_cache_no_pieces_get();
  public final static native void session_handle_get_cache_info__SWIG_0(long jarg1, session_handle jarg1_, long jarg2, cache_status jarg2_, long jarg3, torrent_handle jarg3_, int jarg4);
  public final static native void session_handle_get_cache_info__SWIG_1(long jarg1, session_handle jarg1_, long jarg2, cache_status jarg2_, long jarg3, torrent_handle jarg3_);
  public final static native void session_handle_get_cache_info__SWIG_2(long jarg1, session_handle jarg1_, long jarg2, cache_status jarg2_);
  public final static native void session_handle_set_dht_settings(long jarg1, session_handle jarg1_, long jarg2, dht_settings jarg2_);
  public final static native boolean session_handle_is_dht_running(long jarg1, session_handle jarg1_);
  public final static native long session_handle_get_dht_settings(long jarg1, session_handle jarg1_);
  public final static native void session_handle_add_dht_node(long jarg1, session_handle jarg1_, long jarg2, string_int_pair jarg2_);
  public final static native void session_handle_add_dht_router(long jarg1, session_handle jarg1_, long jarg2, string_int_pair jarg2_);
  public final static native void session_handle_dht_get_item__SWIG_0(long jarg1, session_handle jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long session_handle_dht_put_item__SWIG_0(long jarg1, session_handle jarg1_, long jarg2, entry jarg2_);
  public final static native void session_handle_dht_get_peers(long jarg1, session_handle jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native void session_handle_dht_announce__SWIG_0(long jarg1, session_handle jarg1_, long jarg2, sha1_hash jarg2_, int jarg3, int jarg4);
  public final static native void session_handle_dht_announce__SWIG_1(long jarg1, session_handle jarg1_, long jarg2, sha1_hash jarg2_, int jarg3);
  public final static native void session_handle_dht_announce__SWIG_2(long jarg1, session_handle jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native void session_handle_set_ip_filter(long jarg1, session_handle jarg1_, long jarg2, ip_filter jarg2_);
  public final static native long session_handle_get_ip_filter(long jarg1, session_handle jarg1_);
  public final static native void session_handle_set_port_filter(long jarg1, session_handle jarg1_, long jarg2, port_filter jarg2_);
  public final static native long session_handle_id(long jarg1, session_handle jarg1_);
  public final static native void session_handle_set_key(long jarg1, session_handle jarg1_, int jarg2);
  public final static native int session_handle_global_peer_class_id_get();
  public final static native int session_handle_tcp_peer_class_id_get();
  public final static native int session_handle_local_peer_class_id_get();
  public final static native int session_handle_listen_port(long jarg1, session_handle jarg1_);
  public final static native int session_handle_ssl_listen_port(long jarg1, session_handle jarg1_);
  public final static native boolean session_handle_is_listening(long jarg1, session_handle jarg1_);
  public final static native void session_handle_set_peer_class_filter(long jarg1, session_handle jarg1_, long jarg2, ip_filter jarg2_);
  public final static native void session_handle_set_peer_class_type_filter(long jarg1, session_handle jarg1_, long jarg2, peer_class_type_filter jarg2_);
  public final static native int session_handle_create_peer_class(long jarg1, session_handle jarg1_, String jarg2);
  public final static native void session_handle_delete_peer_class(long jarg1, session_handle jarg1_, int jarg2);
  public final static native long session_handle_get_peer_class(long jarg1, session_handle jarg1_, int jarg2);
  public final static native void session_handle_set_peer_class(long jarg1, session_handle jarg1_, int jarg2, long jarg3, peer_class_info jarg3_);
  public final static native int session_handle_delete_files_get();
  public final static native int session_handle_add_default_plugins_get();
  public final static native int session_handle_start_default_features_get();
  public final static native void session_handle_remove_torrent__SWIG_0(long jarg1, session_handle jarg1_, long jarg2, torrent_handle jarg2_, int jarg3);
  public final static native void session_handle_remove_torrent__SWIG_1(long jarg1, session_handle jarg1_, long jarg2, torrent_handle jarg2_);
  public final static native void session_handle_apply_settings(long jarg1, session_handle jarg1_, long jarg2, settings_pack jarg2_);
  public final static native long session_handle_get_settings(long jarg1, session_handle jarg1_);
  public final static native void session_handle_pop_alerts(long jarg1, session_handle jarg1_, long jarg2, alert_ptr_vector jarg2_);
  public final static native long session_handle_wait_for_alert(long jarg1, session_handle jarg1_, long jarg2, high_resolution_clock.duration jarg2_);
  public final static native int session_handle_udp_get();
  public final static native int session_handle_tcp_get();
  public final static native int session_handle_add_port_mapping(long jarg1, session_handle jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void session_handle_delete_port_mapping(long jarg1, session_handle jarg1_, int jarg2);
  public final static native void session_handle_add_lt_trackers_extension(long jarg1, session_handle jarg1_);
  public final static native void session_handle_add_smart_ban_extension(long jarg1, session_handle jarg1_);
  public final static native void session_handle_dht_get_item__SWIG_1(long jarg1, session_handle jarg1_, long jarg2, char_vector jarg2_, String jarg3);
  public final static native void session_handle_dht_get_item__SWIG_2(long jarg1, session_handle jarg1_, long jarg2, char_vector jarg2_);
  public final static native void session_handle_dht_put_item__SWIG_1(long jarg1, session_handle jarg1_, long jarg2, char_vector jarg2_, long jarg3, char_vector jarg3_, long jarg4, entry jarg4_, String jarg5);
  public final static native void session_handle_dht_put_item__SWIG_2(long jarg1, session_handle jarg1_, long jarg2, char_vector jarg2_, long jarg3, char_vector jarg3_, long jarg4, entry jarg4_);
  public final static native long session_handle_get_upnp(long jarg1, session_handle jarg1_);
  public final static native void session_handle_add_swig_extension(long jarg1, session_handle jarg1_, long jarg2, swig_plugin jarg2_);
  public final static native void delete_session_handle(long jarg1);
  public final static native void min_memory_usage(long jarg1, settings_pack jarg1_);
  public final static native void high_performance_seed(long jarg1, settings_pack jarg1_);
  public final static native void TORRENT_CFG();
  public final static native long new_session_proxy();
  public final static native void delete_session_proxy(long jarg1);
  public final static native long new_session__SWIG_0(long jarg1, settings_pack jarg1_, int jarg2);
  public final static native long new_session__SWIG_1(long jarg1, settings_pack jarg1_);
  public final static native long new_session__SWIG_2();
  public final static native void delete_session(long jarg1);
  public final static native long session_abort(long jarg1, session jarg1_);
  public final static native void delete_disk_buffer_holder(long jarg1);
  public final static native String disk_buffer_holder_release(long jarg1, disk_buffer_holder jarg1_);
  public final static native String disk_buffer_holder_get(long jarg1, disk_buffer_holder jarg1_);
  public final static native void disk_buffer_holder_reset__SWIG_0(long jarg1, disk_buffer_holder jarg1_, String jarg2);
  public final static native void disk_buffer_holder_reset__SWIG_1(long jarg1, disk_buffer_holder jarg1_);
  public final static native void disk_buffer_holder_swap(long jarg1, disk_buffer_holder jarg1_, long jarg2, disk_buffer_holder jarg2_);
  public final static native void bt_peer_connection_start(long jarg1, bt_peer_connection jarg1_);
  public final static native int bt_peer_connection_upload_only_msg_get();
  public final static native int bt_peer_connection_holepunch_msg_get();
  public final static native int bt_peer_connection_dont_have_msg_get();
  public final static native int bt_peer_connection_share_mode_msg_get();
  public final static native void delete_bt_peer_connection(long jarg1);
  public final static native boolean bt_peer_connection_supports_encryption(long jarg1, bt_peer_connection jarg1_);
  public final static native boolean bt_peer_connection_rc4_encrypted(long jarg1, bt_peer_connection jarg1_);
  public final static native int bt_peer_connection_type(long jarg1, bt_peer_connection jarg1_);
  public final static native int bt_peer_connection_msg_choke_get();
  public final static native int bt_peer_connection_msg_suggest_piece_get();
  public final static native int bt_peer_connection_msg_extended_get();
  public final static native int bt_peer_connection_hp_rendezvous_get();
  public final static native int bt_peer_connection_hp_connect_get();
  public final static native int bt_peer_connection_hp_failed_get();
  public final static native int bt_peer_connection_hp_no_such_peer_get();
  public final static native int bt_peer_connection_hp_not_connected_get();
  public final static native int bt_peer_connection_hp_no_support_get();
  public final static native int bt_peer_connection_hp_no_self_get();
  public final static native void bt_peer_connection_on_sent(long jarg1, bt_peer_connection jarg1_, long jarg2, error_code jarg2_, long jarg3);
  public final static native void bt_peer_connection_on_receive(long jarg1, bt_peer_connection jarg1_, long jarg2, error_code jarg2_, long jarg3);
  public final static native void bt_peer_connection_on_receive_impl(long jarg1, bt_peer_connection jarg1_, long jarg2);
  public final static native void bt_peer_connection_get_specific_peer_info(long jarg1, bt_peer_connection jarg1_, long jarg2, peer_info jarg2_);
  public final static native boolean bt_peer_connection_in_handshake(long jarg1, bt_peer_connection jarg1_);
  public final static native boolean bt_peer_connection_packet_finished(long jarg1, bt_peer_connection jarg1_);
  public final static native boolean bt_peer_connection_supports_holepunch(long jarg1, bt_peer_connection jarg1_);
  public final static native boolean bt_peer_connection_support_extensions(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_on_keepalive(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_on_choke(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_unchoke(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_interested(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_not_interested(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_have(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_bitfield(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_request(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_piece(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_cancel(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_dht_port(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_suggest_piece(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_have_all(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_have_none(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_reject_request(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_allowed_fast(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_holepunch(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_on_extended(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_extended_handshake(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_write_choke(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_write_unchoke(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_write_interested(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_write_not_interested(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_write_request(long jarg1, bt_peer_connection jarg1_, long jarg2, peer_request jarg2_);
  public final static native void bt_peer_connection_write_cancel(long jarg1, bt_peer_connection jarg1_, long jarg2, peer_request jarg2_);
  public final static native void bt_peer_connection_write_bitfield(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_write_have(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_write_dont_have(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_write_keepalive(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_write_handshake__SWIG_0(long jarg1, bt_peer_connection jarg1_, boolean jarg2);
  public final static native void bt_peer_connection_write_handshake__SWIG_1(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_write_extensions(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_write_upload_only(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_write_share_mode(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_write_holepunch_msg(long jarg1, bt_peer_connection jarg1_, int jarg2, long jarg3, tcp_endpoint jarg3_, int jarg4);
  public final static native void bt_peer_connection_write_dht_port(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_write_have_all(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_write_have_none(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_write_reject_request(long jarg1, bt_peer_connection jarg1_, long jarg2, peer_request jarg2_);
  public final static native void bt_peer_connection_write_allow_fast(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_write_suggest(long jarg1, bt_peer_connection jarg1_, int jarg2);
  public final static native void bt_peer_connection_on_connected(long jarg1, bt_peer_connection jarg1_);
  public final static native void bt_peer_connection_on_metadata(long jarg1, bt_peer_connection jarg1_);
  public final static native int web_connection_base_timeout(long jarg1, web_connection_base jarg1_);
  public final static native void web_connection_base_start(long jarg1, web_connection_base jarg1_);
  public final static native void delete_web_connection_base(long jarg1);
  public final static native void web_connection_base_on_sent(long jarg1, web_connection_base jarg1_, long jarg2, error_code jarg2_, long jarg3);
  public final static native String web_connection_base_url(long jarg1, web_connection_base jarg1_);
  public final static native boolean web_connection_base_in_handshake(long jarg1, web_connection_base jarg1_);
  public final static native void web_connection_base_write_choke(long jarg1, web_connection_base jarg1_);
  public final static native void web_connection_base_write_unchoke(long jarg1, web_connection_base jarg1_);
  public final static native void web_connection_base_write_interested(long jarg1, web_connection_base jarg1_);
  public final static native void web_connection_base_write_not_interested(long jarg1, web_connection_base jarg1_);
  public final static native void web_connection_base_write_request(long jarg1, web_connection_base jarg1_, long jarg2, peer_request jarg2_);
  public final static native void web_connection_base_write_cancel(long jarg1, web_connection_base jarg1_, long jarg2, peer_request jarg2_);
  public final static native void web_connection_base_write_have(long jarg1, web_connection_base jarg1_, int jarg2);
  public final static native void web_connection_base_write_dont_have(long jarg1, web_connection_base jarg1_, int jarg2);
  public final static native void web_connection_base_write_piece(long jarg1, web_connection_base jarg1_, long jarg2, peer_request jarg2_, long jarg3, disk_buffer_holder jarg3_);
  public final static native void web_connection_base_write_keepalive(long jarg1, web_connection_base jarg1_);
  public final static native void web_connection_base_on_connected(long jarg1, web_connection_base jarg1_);
  public final static native void web_connection_base_write_reject_request(long jarg1, web_connection_base jarg1_, long jarg2, peer_request jarg2_);
  public final static native void web_connection_base_write_allow_fast(long jarg1, web_connection_base jarg1_, int jarg2);
  public final static native void web_connection_base_write_suggest(long jarg1, web_connection_base jarg1_, int jarg2);
  public final static native void web_connection_base_write_bitfield(long jarg1, web_connection_base jarg1_);
  public final static native void web_connection_base_get_specific_peer_info(long jarg1, web_connection_base jarg1_, long jarg2, peer_info jarg2_);
  public final static native void web_peer_connection_on_connected(long jarg1, web_peer_connection jarg1_);
  public final static native int web_peer_connection_type(long jarg1, web_peer_connection jarg1_);
  public final static native void web_peer_connection_on_receive(long jarg1, web_peer_connection jarg1_, long jarg2, error_code jarg2_, long jarg3);
  public final static native String web_peer_connection_url(long jarg1, web_peer_connection jarg1_);
  public final static native void web_peer_connection_get_specific_peer_info(long jarg1, web_peer_connection jarg1_, long jarg2, peer_info jarg2_);
  public final static native void web_peer_connection_disconnect__SWIG_0(long jarg1, web_peer_connection jarg1_, long jarg2, error_code jarg2_, int jarg3, int jarg4);
  public final static native void web_peer_connection_disconnect__SWIG_1(long jarg1, web_peer_connection jarg1_, long jarg2, error_code jarg2_, int jarg3);
  public final static native void web_peer_connection_write_request(long jarg1, web_peer_connection jarg1_, long jarg2, peer_request jarg2_);
  public final static native boolean web_peer_connection_received_invalid_data(long jarg1, web_peer_connection jarg1_, int jarg2, boolean jarg3);
  public final static native void delete_web_peer_connection(long jarg1);
  public final static native int http_seed_connection_type(long jarg1, http_seed_connection jarg1_);
  public final static native void http_seed_connection_on_receive(long jarg1, http_seed_connection jarg1_, long jarg2, error_code jarg2_, long jarg3);
  public final static native String http_seed_connection_url(long jarg1, http_seed_connection jarg1_);
  public final static native void http_seed_connection_get_specific_peer_info(long jarg1, http_seed_connection jarg1_, long jarg2, peer_info jarg2_);
  public final static native void http_seed_connection_disconnect__SWIG_0(long jarg1, http_seed_connection jarg1_, long jarg2, error_code jarg2_, int jarg3, int jarg4);
  public final static native void http_seed_connection_disconnect__SWIG_1(long jarg1, http_seed_connection jarg1_, long jarg2, error_code jarg2_, int jarg3);
  public final static native void http_seed_connection_write_request(long jarg1, http_seed_connection jarg1_, long jarg2, peer_request jarg2_);
  public final static native void delete_http_seed_connection(long jarg1);
  public final static native int peer_connection_handle_type(long jarg1, peer_connection_handle jarg1_);
  public final static native void peer_connection_handle_add_extension(long jarg1, peer_connection_handle jarg1_, long jarg2, peer_plugin jarg2_);
  public final static native long peer_connection_handle_find_plugin(long jarg1, peer_connection_handle jarg1_, String jarg2);
  public final static native boolean peer_connection_handle_is_seed(long jarg1, peer_connection_handle jarg1_);
  public final static native boolean peer_connection_handle_upload_only(long jarg1, peer_connection_handle jarg1_);
  public final static native long peer_connection_handle_pid(long jarg1, peer_connection_handle jarg1_);
  public final static native boolean peer_connection_handle_has_piece(long jarg1, peer_connection_handle jarg1_, int jarg2);
  public final static native boolean peer_connection_handle_is_interesting(long jarg1, peer_connection_handle jarg1_);
  public final static native boolean peer_connection_handle_is_choked(long jarg1, peer_connection_handle jarg1_);
  public final static native boolean peer_connection_handle_is_peer_interested(long jarg1, peer_connection_handle jarg1_);
  public final static native boolean peer_connection_handle_has_peer_choked(long jarg1, peer_connection_handle jarg1_);
  public final static native void peer_connection_handle_choke_this_peer(long jarg1, peer_connection_handle jarg1_);
  public final static native void peer_connection_handle_maybe_unchoke_this_peer(long jarg1, peer_connection_handle jarg1_);
  public final static native void peer_connection_handle_get_peer_info(long jarg1, peer_connection_handle jarg1_, long jarg2, peer_info jarg2_);
  public final static native long peer_connection_handle_associated_torrent(long jarg1, peer_connection_handle jarg1_);
  public final static native long peer_connection_handle_remote(long jarg1, peer_connection_handle jarg1_);
  public final static native long peer_connection_handle_local_endpoint(long jarg1, peer_connection_handle jarg1_);
  public final static native void peer_connection_handle_disconnect__SWIG_0(long jarg1, peer_connection_handle jarg1_, long jarg2, error_code jarg2_, int jarg3, int jarg4);
  public final static native void peer_connection_handle_disconnect__SWIG_1(long jarg1, peer_connection_handle jarg1_, long jarg2, error_code jarg2_, int jarg3);
  public final static native boolean peer_connection_handle_is_disconnecting(long jarg1, peer_connection_handle jarg1_);
  public final static native boolean peer_connection_handle_is_connecting(long jarg1, peer_connection_handle jarg1_);
  public final static native boolean peer_connection_handle_is_outgoing(long jarg1, peer_connection_handle jarg1_);
  public final static native boolean peer_connection_handle_on_local_network(long jarg1, peer_connection_handle jarg1_);
  public final static native boolean peer_connection_handle_ignore_unchoke_slots(long jarg1, peer_connection_handle jarg1_);
  public final static native boolean peer_connection_handle_failed(long jarg1, peer_connection_handle jarg1_);
  public final static native boolean peer_connection_handle_can_disconnect(long jarg1, peer_connection_handle jarg1_, long jarg2, error_code jarg2_);
  public final static native boolean peer_connection_handle_has_metadata(long jarg1, peer_connection_handle jarg1_);
  public final static native boolean peer_connection_handle_in_handshake(long jarg1, peer_connection_handle jarg1_);
  public final static native void peer_connection_handle_send_buffer__SWIG_0(long jarg1, peer_connection_handle jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native void peer_connection_handle_send_buffer__SWIG_1(long jarg1, peer_connection_handle jarg1_, String jarg2, int jarg3);
  public final static native int peer_connection_handle_last_seen_complete(long jarg1, peer_connection_handle jarg1_);
  public final static native long peer_connection_handle_time_of_last_unchoke(long jarg1, peer_connection_handle jarg1_);
  public final static native long peer_connection_handle_native_handle(long jarg1, peer_connection_handle jarg1_);
  public final static native void delete_peer_connection_handle(long jarg1);
  public final static native long new_bt_peer_connection_handle(long jarg1, peer_connection_handle jarg1_);
  public final static native boolean bt_peer_connection_handle_packet_finished(long jarg1, bt_peer_connection_handle jarg1_);
  public final static native boolean bt_peer_connection_handle_support_extensions(long jarg1, bt_peer_connection_handle jarg1_);
  public final static native boolean bt_peer_connection_handle_supports_encryption(long jarg1, bt_peer_connection_handle jarg1_);
  public final static native void bt_peer_connection_handle_switch_send_crypto(long jarg1, bt_peer_connection_handle jarg1_, long jarg2, crypto_plugin jarg2_);
  public final static native void bt_peer_connection_handle_switch_recv_crypto(long jarg1, bt_peer_connection_handle jarg1_, long jarg2, crypto_plugin jarg2_);
  public final static native long bt_peer_connection_handle_native_handle(long jarg1, bt_peer_connection_handle jarg1_);
  public final static native void delete_bt_peer_connection_handle(long jarg1);
  public final static native void delete_torrent_plugin(long jarg1);
  public final static native long torrent_plugin_new_connection(long jarg1, torrent_plugin jarg1_, long jarg2, peer_connection_handle jarg2_);
  public final static native void torrent_plugin_on_piece_pass(long jarg1, torrent_plugin jarg1_, int jarg2);
  public final static native void torrent_plugin_on_piece_failed(long jarg1, torrent_plugin jarg1_, int jarg2);
  public final static native void torrent_plugin_tick(long jarg1, torrent_plugin jarg1_);
  public final static native boolean torrent_plugin_on_pause(long jarg1, torrent_plugin jarg1_);
  public final static native boolean torrent_plugin_on_resume(long jarg1, torrent_plugin jarg1_);
  public final static native void torrent_plugin_on_files_checked(long jarg1, torrent_plugin jarg1_);
  public final static native void torrent_plugin_on_state(long jarg1, torrent_plugin jarg1_, int jarg2);
  public final static native void torrent_plugin_on_unload(long jarg1, torrent_plugin jarg1_);
  public final static native void torrent_plugin_on_load(long jarg1, torrent_plugin jarg1_);
  public final static native int torrent_plugin_first_time_get();
  public final static native int torrent_plugin_filtered_get();
  public final static native void torrent_plugin_on_add_peer(long jarg1, torrent_plugin jarg1_, long jarg2, tcp_endpoint jarg2_, int jarg3, int jarg4);
  public final static native long new_torrent_plugin();
  public final static native void delete_peer_plugin(long jarg1);
  public final static native String peer_plugin_type(long jarg1, peer_plugin jarg1_);
  public final static native void peer_plugin_add_handshake(long jarg1, peer_plugin jarg1_, long jarg2, entry jarg2_);
  public final static native void peer_plugin_on_disconnect(long jarg1, peer_plugin jarg1_, long jarg2, error_code jarg2_);
  public final static native void peer_plugin_on_connected(long jarg1, peer_plugin jarg1_);
  public final static native boolean peer_plugin_on_handshake(long jarg1, peer_plugin jarg1_, String jarg2);
  public final static native boolean peer_plugin_on_extension_handshake(long jarg1, peer_plugin jarg1_, long jarg2, bdecode_node jarg2_);
  public final static native boolean peer_plugin_on_choke(long jarg1, peer_plugin jarg1_);
  public final static native boolean peer_plugin_on_unchoke(long jarg1, peer_plugin jarg1_);
  public final static native boolean peer_plugin_on_interested(long jarg1, peer_plugin jarg1_);
  public final static native boolean peer_plugin_on_not_interested(long jarg1, peer_plugin jarg1_);
  public final static native boolean peer_plugin_on_have(long jarg1, peer_plugin jarg1_, int jarg2);
  public final static native boolean peer_plugin_on_dont_have(long jarg1, peer_plugin jarg1_, int jarg2);
  public final static native boolean peer_plugin_on_bitfield(long jarg1, peer_plugin jarg1_, long jarg2, bitfield jarg2_);
  public final static native boolean peer_plugin_on_have_all(long jarg1, peer_plugin jarg1_);
  public final static native boolean peer_plugin_on_have_none(long jarg1, peer_plugin jarg1_);
  public final static native boolean peer_plugin_on_allowed_fast(long jarg1, peer_plugin jarg1_, int jarg2);
  public final static native boolean peer_plugin_on_request(long jarg1, peer_plugin jarg1_, long jarg2, peer_request jarg2_);
  public final static native boolean peer_plugin_on_piece(long jarg1, peer_plugin jarg1_, long jarg2, peer_request jarg2_, long jarg3, disk_buffer_holder jarg3_);
  public final static native boolean peer_plugin_on_cancel(long jarg1, peer_plugin jarg1_, long jarg2, peer_request jarg2_);
  public final static native boolean peer_plugin_on_reject(long jarg1, peer_plugin jarg1_, long jarg2, peer_request jarg2_);
  public final static native boolean peer_plugin_on_suggest(long jarg1, peer_plugin jarg1_, int jarg2);
  public final static native void peer_plugin_sent_unchoke(long jarg1, peer_plugin jarg1_);
  public final static native void peer_plugin_sent_payload(long jarg1, peer_plugin jarg1_, int jarg2);
  public final static native boolean peer_plugin_can_disconnect(long jarg1, peer_plugin jarg1_, long jarg2, error_code jarg2_);
  public final static native void peer_plugin_on_piece_pass(long jarg1, peer_plugin jarg1_, int jarg2);
  public final static native void peer_plugin_on_piece_failed(long jarg1, peer_plugin jarg1_, int jarg2);
  public final static native void peer_plugin_tick(long jarg1, peer_plugin jarg1_);
  public final static native boolean peer_plugin_write_request(long jarg1, peer_plugin jarg1_, long jarg2, peer_request jarg2_);
  public final static native long new_peer_plugin();
  public final static native void delete_crypto_plugin(long jarg1);
  public final static native void pool_file_status_file_index_set(long jarg1, pool_file_status jarg1_, int jarg2);
  public final static native int pool_file_status_file_index_get(long jarg1, pool_file_status jarg1_);
  public final static native void pool_file_status_last_use_set(long jarg1, pool_file_status jarg1_, long jarg2, high_resolution_clock.time_point jarg2_);
  public final static native long pool_file_status_last_use_get(long jarg1, pool_file_status jarg1_);
  public final static native void pool_file_status_open_mode_set(long jarg1, pool_file_status jarg1_, int jarg2);
  public final static native int pool_file_status_open_mode_get(long jarg1, pool_file_status jarg1_);
  public final static native long new_pool_file_status();
  public final static native void delete_pool_file_status(long jarg1);
  public final static native int plus_one(int jarg1);
  public final static native int minus_one(int jarg1);
  public final static native int ip_filter_blocked_get();
  public final static native void ip_filter_add_rule(long jarg1, ip_filter jarg1_, long jarg2, address jarg2_, long jarg3, address jarg3_, long jarg4);
  public final static native int ip_filter_access(long jarg1, ip_filter jarg1_, long jarg2, address jarg2_);
  public final static native long new_ip_filter();
  public final static native void delete_ip_filter(long jarg1);
  public final static native int port_filter_blocked_get();
  public final static native void port_filter_add_rule(long jarg1, port_filter jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native int port_filter_access(long jarg1, port_filter jarg1_, int jarg2);
  public final static native long new_port_filter();
  public final static native void delete_port_filter(long jarg1);
  public final static native long get_bdecode_category();
  public final static native long new_bdecode_token__SWIG_0(long jarg1, int jarg2);
  public final static native long new_bdecode_token__SWIG_1(long jarg1, long jarg2, int jarg3, short jarg4);
  public final static native long new_bdecode_token__SWIG_2(long jarg1, long jarg2, int jarg3);
  public final static native int bdecode_token_start_offset(long jarg1, bdecode_token jarg1_);
  public final static native void bdecode_token_offset_set(long jarg1, bdecode_token jarg1_, long jarg2);
  public final static native long bdecode_token_offset_get(long jarg1, bdecode_token jarg1_);
  public final static native void bdecode_token_type_set(long jarg1, bdecode_token jarg1_, long jarg2);
  public final static native long bdecode_token_type_get(long jarg1, bdecode_token jarg1_);
  public final static native void bdecode_token_next_item_set(long jarg1, bdecode_token jarg1_, long jarg2);
  public final static native long bdecode_token_next_item_get(long jarg1, bdecode_token jarg1_);
  public final static native void bdecode_token_header_set(long jarg1, bdecode_token jarg1_, long jarg2);
  public final static native long bdecode_token_header_get(long jarg1, bdecode_token jarg1_);
  public final static native void delete_bdecode_token(long jarg1);
  public final static native long new_bdecode_node__SWIG_0();
  public final static native long new_bdecode_node__SWIG_1(long jarg1, bdecode_node jarg1_);
  public final static native int bdecode_node_type(long jarg1, bdecode_node jarg1_);
  public final static native boolean bdecode_node_is_none_t(long jarg1, bdecode_node jarg1_);
  public final static native long bdecode_node_non_owning(long jarg1, bdecode_node jarg1_);
  public final static native long bdecode_node_data_section(long jarg1, bdecode_node jarg1_);
  public final static native String bdecode_node_list_string_value_at__SWIG_0(long jarg1, bdecode_node jarg1_, int jarg2, String jarg3);
  public final static native String bdecode_node_list_string_value_at__SWIG_1(long jarg1, bdecode_node jarg1_, int jarg2);
  public final static native long bdecode_node_list_int_value_at__SWIG_0(long jarg1, bdecode_node jarg1_, int jarg2, long jarg3);
  public final static native long bdecode_node_list_int_value_at__SWIG_1(long jarg1, bdecode_node jarg1_, int jarg2);
  public final static native int bdecode_node_list_size(long jarg1, bdecode_node jarg1_);
  public final static native long bdecode_node_dict_find(long jarg1, bdecode_node jarg1_, String jarg2);
  public final static native long bdecode_node_dict_at(long jarg1, bdecode_node jarg1_, int jarg2);
  public final static native long bdecode_node_dict_find_dict(long jarg1, bdecode_node jarg1_, String jarg2);
  public final static native long bdecode_node_dict_find_list(long jarg1, bdecode_node jarg1_, String jarg2);
  public final static native long bdecode_node_dict_find_string(long jarg1, bdecode_node jarg1_, String jarg2);
  public final static native long bdecode_node_dict_find_int(long jarg1, bdecode_node jarg1_, String jarg2);
  public final static native String bdecode_node_dict_find_string_value__SWIG_0(long jarg1, bdecode_node jarg1_, String jarg2, String jarg3);
  public final static native String bdecode_node_dict_find_string_value__SWIG_1(long jarg1, bdecode_node jarg1_, String jarg2);
  public final static native long bdecode_node_dict_find_int_value__SWIG_0(long jarg1, bdecode_node jarg1_, String jarg2, long jarg3);
  public final static native long bdecode_node_dict_find_int_value__SWIG_1(long jarg1, bdecode_node jarg1_, String jarg2);
  public final static native int bdecode_node_dict_size(long jarg1, bdecode_node jarg1_);
  public final static native long bdecode_node_int_value(long jarg1, bdecode_node jarg1_);
  public final static native String bdecode_node_string_value(long jarg1, bdecode_node jarg1_);
  public final static native String bdecode_node_string_ptr(long jarg1, bdecode_node jarg1_);
  public final static native int bdecode_node_string_length(long jarg1, bdecode_node jarg1_);
  public final static native void bdecode_node_clear(long jarg1, bdecode_node jarg1_);
  public final static native void bdecode_node_swap(long jarg1, bdecode_node jarg1_, long jarg2, bdecode_node jarg2_);
  public final static native void bdecode_node_reserve(long jarg1, bdecode_node jarg1_, int jarg2);
  public final static native void bdecode_node_switch_underlying_buffer(long jarg1, bdecode_node jarg1_, String jarg2);
  public final static native int bdecode_node_bdecode(long jarg1, char_vector jarg1_, long jarg2, bdecode_node jarg2_, long jarg3, error_code jarg3_);
  public final static native void delete_bdecode_node(long jarg1);
  public final static native String print_entry__SWIG_0(long jarg1, bdecode_node jarg1_, boolean jarg2, int jarg3);
  public final static native String print_entry__SWIG_1(long jarg1, bdecode_node jarg1_, boolean jarg2);
  public final static native String print_entry__SWIG_2(long jarg1, bdecode_node jarg1_);
  public final static native long new_tracker_request();
  public final static native void tracker_request_url_set(long jarg1, tracker_request jarg1_, String jarg2);
  public final static native String tracker_request_url_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_trackerid_set(long jarg1, tracker_request jarg1_, String jarg2);
  public final static native String tracker_request_trackerid_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_auth_set(long jarg1, tracker_request jarg1_, String jarg2);
  public final static native String tracker_request_auth_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_filter_set(long jarg1, tracker_request jarg1_, long jarg2, ip_filter jarg2_);
  public final static native long tracker_request_filter_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_downloaded_set(long jarg1, tracker_request jarg1_, long jarg2);
  public final static native long tracker_request_downloaded_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_uploaded_set(long jarg1, tracker_request jarg1_, long jarg2);
  public final static native long tracker_request_uploaded_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_left_set(long jarg1, tracker_request jarg1_, long jarg2);
  public final static native long tracker_request_left_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_corrupt_set(long jarg1, tracker_request jarg1_, long jarg2);
  public final static native long tracker_request_corrupt_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_redundant_set(long jarg1, tracker_request jarg1_, long jarg2);
  public final static native long tracker_request_redundant_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_listen_port_set(long jarg1, tracker_request jarg1_, int jarg2);
  public final static native int tracker_request_listen_port_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_event_set(long jarg1, tracker_request jarg1_, short jarg2);
  public final static native short tracker_request_event_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_kind_set(long jarg1, tracker_request jarg1_, short jarg2);
  public final static native short tracker_request_kind_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_key_set(long jarg1, tracker_request jarg1_, long jarg2);
  public final static native long tracker_request_key_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_num_want_set(long jarg1, tracker_request jarg1_, int jarg2);
  public final static native int tracker_request_num_want_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_info_hash_set(long jarg1, tracker_request jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long tracker_request_info_hash_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_pid_set(long jarg1, tracker_request jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native long tracker_request_pid_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_bind_ip_set(long jarg1, tracker_request jarg1_, long jarg2, address jarg2_);
  public final static native long tracker_request_bind_ip_get(long jarg1, tracker_request jarg1_);
  public final static native void tracker_request_send_stats_set(long jarg1, tracker_request jarg1_, boolean jarg2);
  public final static native boolean tracker_request_send_stats_get(long jarg1, tracker_request jarg1_);
  public final static native void delete_tracker_request(long jarg1);
  public final static native long new_tracker_response();
  public final static native void tracker_response_peers_set(long jarg1, tracker_response jarg1_, long jarg2, peer_entry_vector jarg2_);
  public final static native long tracker_response_peers_get(long jarg1, tracker_response jarg1_);
  public final static native void tracker_response_peers4_set(long jarg1, tracker_response jarg1_, long jarg2, ipv4_peer_entry_vector jarg2_);
  public final static native long tracker_response_peers4_get(long jarg1, tracker_response jarg1_);
  public final static native void tracker_response_peers6_set(long jarg1, tracker_response jarg1_, long jarg2, ipv6_peer_entry_vector jarg2_);
  public final static native long tracker_response_peers6_get(long jarg1, tracker_response jarg1_);
  public final static native void tracker_response_external_ip_set(long jarg1, tracker_response jarg1_, long jarg2, address jarg2_);
  public final static native long tracker_response_external_ip_get(long jarg1, tracker_response jarg1_);
  public final static native void tracker_response_trackerid_set(long jarg1, tracker_response jarg1_, String jarg2);
  public final static native String tracker_response_trackerid_get(long jarg1, tracker_response jarg1_);
  public final static native void tracker_response_failure_reason_set(long jarg1, tracker_response jarg1_, String jarg2);
  public final static native String tracker_response_failure_reason_get(long jarg1, tracker_response jarg1_);
  public final static native void tracker_response_warning_message_set(long jarg1, tracker_response jarg1_, String jarg2);
  public final static native String tracker_response_warning_message_get(long jarg1, tracker_response jarg1_);
  public final static native void tracker_response_interval_set(long jarg1, tracker_response jarg1_, int jarg2);
  public final static native int tracker_response_interval_get(long jarg1, tracker_response jarg1_);
  public final static native void tracker_response_min_interval_set(long jarg1, tracker_response jarg1_, int jarg2);
  public final static native int tracker_response_min_interval_get(long jarg1, tracker_response jarg1_);
  public final static native void tracker_response_complete_set(long jarg1, tracker_response jarg1_, int jarg2);
  public final static native int tracker_response_complete_get(long jarg1, tracker_response jarg1_);
  public final static native void tracker_response_incomplete_set(long jarg1, tracker_response jarg1_, int jarg2);
  public final static native int tracker_response_incomplete_get(long jarg1, tracker_response jarg1_);
  public final static native void tracker_response_downloaders_set(long jarg1, tracker_response jarg1_, int jarg2);
  public final static native int tracker_response_downloaders_get(long jarg1, tracker_response jarg1_);
  public final static native void tracker_response_downloaded_set(long jarg1, tracker_response jarg1_, int jarg2);
  public final static native int tracker_response_downloaded_get(long jarg1, tracker_response jarg1_);
  public final static native void delete_tracker_response(long jarg1);
  public final static native void delete_tracker_connection(long jarg1);
  public final static native long tracker_connection_tracker_req(long jarg1, tracker_connection jarg1_);
  public final static native void tracker_connection_fail__SWIG_0(long jarg1, tracker_connection jarg1_, long jarg2, error_code jarg2_, int jarg3, String jarg4, int jarg5, int jarg6);
  public final static native void tracker_connection_fail__SWIG_1(long jarg1, tracker_connection jarg1_, long jarg2, error_code jarg2_, int jarg3, String jarg4, int jarg5);
  public final static native void tracker_connection_fail__SWIG_2(long jarg1, tracker_connection jarg1_, long jarg2, error_code jarg2_, int jarg3, String jarg4);
  public final static native void tracker_connection_fail__SWIG_3(long jarg1, tracker_connection jarg1_, long jarg2, error_code jarg2_, int jarg3);
  public final static native void tracker_connection_fail__SWIG_4(long jarg1, tracker_connection jarg1_, long jarg2, error_code jarg2_);
  public final static native void tracker_connection_start(long jarg1, tracker_connection jarg1_);
  public final static native void tracker_connection_close(long jarg1, tracker_connection jarg1_);
  public final static native long tracker_connection_bind_interface(long jarg1, tracker_connection jarg1_);
  public final static native void tracker_connection_sent_bytes(long jarg1, tracker_connection jarg1_, int jarg2);
  public final static native void tracker_connection_received_bytes(long jarg1, tracker_connection jarg1_, int jarg2);
  public final static native boolean tracker_connection_on_receive_hostname(long jarg1, tracker_connection jarg1_, long jarg2, error_code jarg2_, String jarg3, String jarg4, int jarg5);
  public final static native long tracker_connection_shared_from_this(long jarg1, tracker_connection jarg1_);
  public final static native void delete_tracker_manager(long jarg1);
  public final static native void tracker_manager_abort_all_requests__SWIG_0(long jarg1, tracker_manager jarg1_, boolean jarg2);
  public final static native void tracker_manager_abort_all_requests__SWIG_1(long jarg1, tracker_manager jarg1_);
  public final static native void tracker_manager_remove_request(long jarg1, tracker_manager jarg1_, long jarg2, tracker_connection jarg2_);
  public final static native boolean tracker_manager_empty(long jarg1, tracker_manager jarg1_);
  public final static native int tracker_manager_num_requests(long jarg1, tracker_manager jarg1_);
  public final static native void tracker_manager_sent_bytes(long jarg1, tracker_manager jarg1_, int jarg2);
  public final static native void tracker_manager_received_bytes(long jarg1, tracker_manager jarg1_, int jarg2);
  public final static native void tracker_manager_update_transaction_id(long jarg1, tracker_manager jarg1_, long jarg2, udp_tracker_connection jarg2_, java.math.BigInteger jarg3);
  public final static native long tracker_manager_settings(long jarg1, tracker_manager jarg1_);
  public final static native void udp_tracker_connection_start(long jarg1, udp_tracker_connection jarg1_);
  public final static native void udp_tracker_connection_close(long jarg1, udp_tracker_connection jarg1_);
  public final static native long udp_tracker_connection_transaction_id(long jarg1, udp_tracker_connection jarg1_);
  public final static native void delete_udp_tracker_connection(long jarg1);
  public final static native String make_magnet_uri__SWIG_0(long jarg1, torrent_handle jarg1_);
  public final static native String make_magnet_uri__SWIG_1(long jarg1, torrent_info jarg1_);
  public final static native void parse_magnet_uri(String jarg1, long jarg2, add_torrent_params jarg2_, long jarg3, error_code jarg3_);
  public final static native int create_torrent_optimize_alignment_get();
  public final static native int create_torrent_optimize_get();
  public final static native int create_torrent_merkle_get();
  public final static native int create_torrent_modification_time_get();
  public final static native int create_torrent_symlinks_get();
  public final static native int create_torrent_mutable_torrent_support_get();
  public final static native long new_create_torrent__SWIG_0(long jarg1, file_storage jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native long new_create_torrent__SWIG_1(long jarg1, file_storage jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native long new_create_torrent__SWIG_2(long jarg1, file_storage jarg1_, int jarg2, int jarg3);
  public final static native long new_create_torrent__SWIG_3(long jarg1, file_storage jarg1_, int jarg2);
  public final static native long new_create_torrent__SWIG_4(long jarg1, file_storage jarg1_);
  public final static native long new_create_torrent__SWIG_5(long jarg1, torrent_info jarg1_);
  public final static native void delete_create_torrent(long jarg1);
  public final static native long create_torrent_generate(long jarg1, create_torrent jarg1_);
  public final static native long create_torrent_files(long jarg1, create_torrent jarg1_);
  public final static native void create_torrent_set_comment(long jarg1, create_torrent jarg1_, String jarg2);
  public final static native void create_torrent_set_creator(long jarg1, create_torrent jarg1_, String jarg2);
  public final static native void create_torrent_set_hash(long jarg1, create_torrent jarg1_, int jarg2, long jarg3, sha1_hash jarg3_);
  public final static native void create_torrent_set_file_hash(long jarg1, create_torrent jarg1_, int jarg2, long jarg3, sha1_hash jarg3_);
  public final static native void create_torrent_add_url_seed(long jarg1, create_torrent jarg1_, String jarg2);
  public final static native void create_torrent_add_http_seed(long jarg1, create_torrent jarg1_, String jarg2);
  public final static native void create_torrent_add_node(long jarg1, create_torrent jarg1_, long jarg2, string_int_pair jarg2_);
  public final static native void create_torrent_add_tracker__SWIG_0(long jarg1, create_torrent jarg1_, String jarg2, int jarg3);
  public final static native void create_torrent_add_tracker__SWIG_1(long jarg1, create_torrent jarg1_, String jarg2);
  public final static native void create_torrent_set_root_cert(long jarg1, create_torrent jarg1_, String jarg2);
  public final static native void create_torrent_set_priv(long jarg1, create_torrent jarg1_, boolean jarg2);
  public final static native boolean create_torrent_priv(long jarg1, create_torrent jarg1_);
  public final static native int create_torrent_num_pieces(long jarg1, create_torrent jarg1_);
  public final static native int create_torrent_piece_length(long jarg1, create_torrent jarg1_);
  public final static native int create_torrent_piece_size(long jarg1, create_torrent jarg1_, int jarg2);
  public final static native long create_torrent_merkle_tree(long jarg1, create_torrent jarg1_);
  public final static native void create_torrent_add_similar_torrent(long jarg1, create_torrent jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native void create_torrent_add_collection(long jarg1, create_torrent jarg1_, String jarg2);
  public final static native void add_files__SWIG_0(long jarg1, file_storage jarg1_, String jarg2, long jarg3);
  public final static native void add_files__SWIG_1(long jarg1, file_storage jarg1_, String jarg2);
  public final static native void set_piece_hashes__SWIG_0(long jarg1, create_torrent jarg1_, String jarg2, long jarg3, error_code jarg3_);
  public final static native void set_piece_hashes__SWIG_1(long jarg1, create_torrent jarg1_, String jarg2);
  public final static native long get_upnp_category();
  public final static native void delete_upnp(long jarg1);
  public final static native int upnp_add_mapping(long jarg1, upnp jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void upnp_delete_mapping(long jarg1, upnp jarg1_, int jarg2);
  public final static native void upnp_discover_device(long jarg1, upnp jarg1_);
  public final static native void upnp_close(long jarg1, upnp jarg1_);
  public final static native String upnp_router_model(long jarg1, upnp jarg1_);
  public final static native boolean upnp_get_mapping(long jarg1, upnp jarg1_, int jarg2, long jarg3, int_vector jarg3_);
  public final static native long new_stack_allocator();
  public final static native void delete_stack_allocator(long jarg1);
  public final static native boolean sha1_bloom_filter_find(long jarg1, sha1_bloom_filter jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native void sha1_bloom_filter_set(long jarg1, sha1_bloom_filter jarg1_, long jarg2, sha1_hash jarg2_);
  public final static native String sha1_bloom_filter_to_string(long jarg1, sha1_bloom_filter jarg1_);
  public final static native void sha1_bloom_filter_from_string(long jarg1, sha1_bloom_filter jarg1_, String jarg2);
  public final static native void sha1_bloom_filter_clear(long jarg1, sha1_bloom_filter jarg1_);
  public final static native float sha1_bloom_filter_size(long jarg1, sha1_bloom_filter jarg1_);
  public final static native long new_sha1_bloom_filter();
  public final static native void delete_sha1_bloom_filter(long jarg1);
  public final static native int ed25519_seed_size_get();
  public final static native int ed25519_private_key_size_get();
  public final static native int ed25519_public_key_size_get();
  public final static native int ed25519_signature_size_get();
  public final static native int ed25519_scalar_size_get();
  public final static native int ed25519_shared_secret_size_get();
  public final static native void ed25519_create_seed(long jarg1, char_vector jarg1_);
  public final static native void ed25519_create_keypair(long jarg1, char_vector jarg1_, long jarg2, char_vector jarg2_, long jarg3, char_vector jarg3_);
  public final static native void ed25519_sign(long jarg1, char_vector jarg1_, long jarg2, char_vector jarg2_, long jarg3, char_vector jarg3_, long jarg4, char_vector jarg4_);
  public final static native int ed25519_verify(long jarg1, char_vector jarg1_, long jarg2, char_vector jarg2_, long jarg3, char_vector jarg3_);
  public final static native void ed25519_add_scalar(long jarg1, char_vector jarg1_, long jarg2, char_vector jarg2_, long jarg3, char_vector jarg3_);
  public final static native void ed25519_key_exchange(long jarg1, char_vector jarg1_, long jarg2, char_vector jarg2_, long jarg3, char_vector jarg3_);
  public final static native long new_ed25519();
  public final static native void delete_ed25519(long jarg1);
  public final static native int dht_item_canonical_string(long jarg1, char_vector jarg1_, int jarg2, String jarg3, long jarg4, char_vector jarg4_);
  public final static native long dht_item_item_target_id__SWIG_0(long jarg1, char_vector jarg1_);
  public final static native long dht_item_item_target_id__SWIG_1(long jarg1, char_vector jarg1_, long jarg2, char_vector jarg2_);
  public final static native boolean dht_item_verify_mutable_item(long jarg1, char_vector jarg1_, String jarg2, int jarg3, long jarg4, char_vector jarg4_, long jarg5, char_vector jarg5_);
  public final static native void dht_item_sign_mutable_item(long jarg1, char_vector jarg1_, String jarg2, int jarg3, long jarg4, char_vector jarg4_, long jarg5, char_vector jarg5_, long jarg6, char_vector jarg6_);
  public final static native long new_dht_item();
  public final static native void delete_dht_item(long jarg1);
  public final static native void delete_add_files_listener(long jarg1);
  public final static native boolean add_files_listener_pred(long jarg1, add_files_listener jarg1_, String jarg2, String jarg3);
  public final static native boolean add_files_listener_predSwigExplicitadd_files_listener(long jarg1, add_files_listener jarg1_, String jarg2, String jarg3);
  public final static native long new_add_files_listener();
  public final static native void add_files_listener_director_connect(add_files_listener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void add_files_listener_change_ownership(add_files_listener obj, long cptr, boolean take_or_release);
  public final static native boolean add_files_cb(String jarg1, long jarg2, add_files_listener jarg2_, String jarg3);
  public final static native void add_files(String jarg1, long jarg2, file_storage jarg2_, String jarg3, long jarg4, long jarg5, add_files_listener jarg5_);
  public final static native void delete_set_piece_hashes_listener(long jarg1);
  public final static native void set_piece_hashes_listener_progress(long jarg1, set_piece_hashes_listener jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native void set_piece_hashes_listener_progressSwigExplicitset_piece_hashes_listener(long jarg1, set_piece_hashes_listener jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native long new_set_piece_hashes_listener();
  public final static native void set_piece_hashes_listener_director_connect(set_piece_hashes_listener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void set_piece_hashes_listener_change_ownership(set_piece_hashes_listener obj, long cptr, boolean take_or_release);
  public final static native void set_piece_hashes(String jarg1, long jarg2, create_torrent jarg2_, String jarg3, long jarg4, error_code jarg4_, long jarg5, set_piece_hashes_listener jarg5_);
  public final static native long torrent_alert_SWIGUpcast(long jarg1);
  public final static native long peer_alert_SWIGUpcast(long jarg1);
  public final static native long tracker_alert_SWIGUpcast(long jarg1);
  public final static native long torrent_added_alert_SWIGUpcast(long jarg1);
  public final static native long torrent_removed_alert_SWIGUpcast(long jarg1);
  public final static native long read_piece_alert_SWIGUpcast(long jarg1);
  public final static native long file_completed_alert_SWIGUpcast(long jarg1);
  public final static native long file_renamed_alert_SWIGUpcast(long jarg1);
  public final static native long file_rename_failed_alert_SWIGUpcast(long jarg1);
  public final static native long performance_alert_SWIGUpcast(long jarg1);
  public final static native long state_changed_alert_SWIGUpcast(long jarg1);
  public final static native long tracker_error_alert_SWIGUpcast(long jarg1);
  public final static native long tracker_warning_alert_SWIGUpcast(long jarg1);
  public final static native long scrape_reply_alert_SWIGUpcast(long jarg1);
  public final static native long scrape_failed_alert_SWIGUpcast(long jarg1);
  public final static native long tracker_reply_alert_SWIGUpcast(long jarg1);
  public final static native long dht_reply_alert_SWIGUpcast(long jarg1);
  public final static native long tracker_announce_alert_SWIGUpcast(long jarg1);
  public final static native long hash_failed_alert_SWIGUpcast(long jarg1);
  public final static native long peer_ban_alert_SWIGUpcast(long jarg1);
  public final static native long peer_unsnubbed_alert_SWIGUpcast(long jarg1);
  public final static native long peer_snubbed_alert_SWIGUpcast(long jarg1);
  public final static native long peer_error_alert_SWIGUpcast(long jarg1);
  public final static native long peer_connect_alert_SWIGUpcast(long jarg1);
  public final static native long peer_disconnected_alert_SWIGUpcast(long jarg1);
  public final static native long invalid_request_alert_SWIGUpcast(long jarg1);
  public final static native long torrent_finished_alert_SWIGUpcast(long jarg1);
  public final static native long piece_finished_alert_SWIGUpcast(long jarg1);
  public final static native long request_dropped_alert_SWIGUpcast(long jarg1);
  public final static native long block_timeout_alert_SWIGUpcast(long jarg1);
  public final static native long block_finished_alert_SWIGUpcast(long jarg1);
  public final static native long block_downloading_alert_SWIGUpcast(long jarg1);
  public final static native long unwanted_block_alert_SWIGUpcast(long jarg1);
  public final static native long storage_moved_alert_SWIGUpcast(long jarg1);
  public final static native long storage_moved_failed_alert_SWIGUpcast(long jarg1);
  public final static native long torrent_deleted_alert_SWIGUpcast(long jarg1);
  public final static native long torrent_delete_failed_alert_SWIGUpcast(long jarg1);
  public final static native long save_resume_data_alert_SWIGUpcast(long jarg1);
  public final static native long save_resume_data_failed_alert_SWIGUpcast(long jarg1);
  public final static native long torrent_paused_alert_SWIGUpcast(long jarg1);
  public final static native long torrent_resumed_alert_SWIGUpcast(long jarg1);
  public final static native long torrent_checked_alert_SWIGUpcast(long jarg1);
  public final static native long url_seed_alert_SWIGUpcast(long jarg1);
  public final static native long file_error_alert_SWIGUpcast(long jarg1);
  public final static native long metadata_failed_alert_SWIGUpcast(long jarg1);
  public final static native long metadata_received_alert_SWIGUpcast(long jarg1);
  public final static native long udp_error_alert_SWIGUpcast(long jarg1);
  public final static native long external_ip_alert_SWIGUpcast(long jarg1);
  public final static native long listen_failed_alert_SWIGUpcast(long jarg1);
  public final static native long listen_succeeded_alert_SWIGUpcast(long jarg1);
  public final static native long portmap_error_alert_SWIGUpcast(long jarg1);
  public final static native long portmap_alert_SWIGUpcast(long jarg1);
  public final static native long portmap_log_alert_SWIGUpcast(long jarg1);
  public final static native long fastresume_rejected_alert_SWIGUpcast(long jarg1);
  public final static native long peer_blocked_alert_SWIGUpcast(long jarg1);
  public final static native long dht_announce_alert_SWIGUpcast(long jarg1);
  public final static native long dht_get_peers_alert_SWIGUpcast(long jarg1);
  public final static native long stats_alert_SWIGUpcast(long jarg1);
  public final static native long cache_flushed_alert_SWIGUpcast(long jarg1);
  public final static native long anonymous_mode_alert_SWIGUpcast(long jarg1);
  public final static native long lsd_peer_alert_SWIGUpcast(long jarg1);
  public final static native long trackerid_alert_SWIGUpcast(long jarg1);
  public final static native long dht_bootstrap_alert_SWIGUpcast(long jarg1);
  public final static native long torrent_error_alert_SWIGUpcast(long jarg1);
  public final static native long torrent_need_cert_alert_SWIGUpcast(long jarg1);
  public final static native long incoming_connection_alert_SWIGUpcast(long jarg1);
  public final static native long add_torrent_alert_SWIGUpcast(long jarg1);
  public final static native long state_update_alert_SWIGUpcast(long jarg1);
  public final static native long mmap_cache_alert_SWIGUpcast(long jarg1);
  public final static native long session_stats_alert_SWIGUpcast(long jarg1);
  public final static native long torrent_update_alert_SWIGUpcast(long jarg1);
  public final static native long dht_error_alert_SWIGUpcast(long jarg1);
  public final static native long dht_immutable_item_alert_SWIGUpcast(long jarg1);
  public final static native long dht_mutable_item_alert_SWIGUpcast(long jarg1);
  public final static native long dht_put_alert_SWIGUpcast(long jarg1);
  public final static native long i2p_alert_SWIGUpcast(long jarg1);
  public final static native long dht_outgoing_get_peers_alert_SWIGUpcast(long jarg1);
  public final static native long log_alert_SWIGUpcast(long jarg1);
  public final static native long torrent_log_alert_SWIGUpcast(long jarg1);
  public final static native long peer_log_alert_SWIGUpcast(long jarg1);
  public final static native long lsd_error_alert_SWIGUpcast(long jarg1);
  public final static native long dht_stats_alert_SWIGUpcast(long jarg1);
  public final static native long incoming_request_alert_SWIGUpcast(long jarg1);
  public final static native long dht_log_alert_SWIGUpcast(long jarg1);
  public final static native long dht_pkt_alert_SWIGUpcast(long jarg1);
  public final static native long dht_get_peers_reply_alert_SWIGUpcast(long jarg1);
  public final static native long ipv4_peer_SWIGUpcast(long jarg1);
  public final static native long ipv6_peer_SWIGUpcast(long jarg1);
  public final static native long peer_connection_SWIGSmartPtrUpcast(long jarg1);
  public final static native long web_seed_t_SWIGUpcast(long jarg1);
  public final static native long session_SWIGUpcast(long jarg1);
  public final static native long bt_peer_connection_SWIGSmartPtrUpcast(long jarg1);
  public final static native long web_connection_base_SWIGSmartPtrUpcast(long jarg1);
  public final static native long web_peer_connection_SWIGSmartPtrUpcast(long jarg1);
  public final static native long http_seed_connection_SWIGSmartPtrUpcast(long jarg1);
  public final static native long bt_peer_connection_handle_SWIGUpcast(long jarg1);
  public final static native long udp_tracker_connection_SWIGSmartPtrUpcast(long jarg1);

  public static long SwigDirector_swig_plugin_new_torrent(swig_plugin jself, long t) {
    return swig_torrent_plugin.getCPtr(jself.new_torrent((t == 0) ? null : new torrent(t, false)));
  }
  public static void SwigDirector_swig_plugin_added(swig_plugin jself) {
    jself.added();
  }
  public static void SwigDirector_swig_plugin_on_alert(swig_plugin jself, long a) {
    jself.on_alert((a == 0) ? null : new alert(a, false));
  }
  public static boolean SwigDirector_swig_plugin_on_unknown_torrent(swig_plugin jself, long info_hash, long pc, long p) {
    return jself.on_unknown_torrent(new sha1_hash(info_hash, false), new peer_connection_handle(pc, false), new add_torrent_params(p, false));
  }
  public static void SwigDirector_swig_plugin_on_tick(swig_plugin jself) {
    jself.on_tick();
  }
  public static boolean SwigDirector_swig_plugin_on_optimistic_unchoke(swig_plugin jself, long peers) {
    return jself.on_optimistic_unchoke(new torrent_peer_ptr_vector(peers, false));
  }
  public static void SwigDirector_swig_plugin_save_state(swig_plugin jself, long e) {
    jself.save_state(new entry(e, false));
  }
  public static void SwigDirector_swig_plugin_load_state(swig_plugin jself, long n) {
    jself.load_state(new bdecode_node(n, false));
  }
  public static long SwigDirector_swig_torrent_plugin_new_peer_connection(swig_torrent_plugin jself, long pc) {
    return swig_peer_plugin.getCPtr(jself.new_peer_connection((pc == 0) ? null : new peer_connection(pc, false)));
  }
  public static long SwigDirector_swig_torrent_plugin_new_bt_peer_connection(swig_torrent_plugin jself, long pc) {
    return swig_peer_plugin.getCPtr(jself.new_bt_peer_connection((pc == 0) ? null : new bt_peer_connection(pc, false)));
  }
  public static long SwigDirector_swig_torrent_plugin_new_web_peer_connection(swig_torrent_plugin jself, long pc) {
    return swig_peer_plugin.getCPtr(jself.new_web_peer_connection((pc == 0) ? null : new web_peer_connection(pc, false)));
  }
  public static long SwigDirector_swig_torrent_plugin_new_http_seed_connection(swig_torrent_plugin jself, long pc) {
    return swig_peer_plugin.getCPtr(jself.new_http_seed_connection((pc == 0) ? null : new http_seed_connection(pc, false)));
  }
  public static void SwigDirector_swig_torrent_plugin_on_piece_pass(swig_torrent_plugin jself, int index) {
    jself.on_piece_pass(index);
  }
  public static void SwigDirector_swig_torrent_plugin_on_piece_failed(swig_torrent_plugin jself, int index) {
    jself.on_piece_failed(index);
  }
  public static void SwigDirector_swig_torrent_plugin_tick(swig_torrent_plugin jself) {
    jself.tick();
  }
  public static boolean SwigDirector_swig_torrent_plugin_on_pause(swig_torrent_plugin jself) {
    return jself.on_pause();
  }
  public static boolean SwigDirector_swig_torrent_plugin_on_resume(swig_torrent_plugin jself) {
    return jself.on_resume();
  }
  public static void SwigDirector_swig_torrent_plugin_on_files_checked(swig_torrent_plugin jself) {
    jself.on_files_checked();
  }
  public static void SwigDirector_swig_torrent_plugin_on_state(swig_torrent_plugin jself, int s) {
    jself.on_state(s);
  }
  public static void SwigDirector_swig_torrent_plugin_on_unload(swig_torrent_plugin jself) {
    jself.on_unload();
  }
  public static void SwigDirector_swig_torrent_plugin_on_load(swig_torrent_plugin jself) {
    jself.on_load();
  }
  public static void SwigDirector_swig_torrent_plugin_on_add_peer(swig_torrent_plugin jself, long endp, int src, int flags) {
    jself.on_add_peer(new tcp_endpoint(endp, false), src, flags);
  }
  public static String SwigDirector_swig_peer_plugin_type(swig_peer_plugin jself) {
    return jself.type();
  }
  public static void SwigDirector_swig_peer_plugin_add_handshake(swig_peer_plugin jself, long e) {
    jself.add_handshake(new entry(e, false));
  }
  public static void SwigDirector_swig_peer_plugin_on_disconnect(swig_peer_plugin jself, long ec) {
    jself.on_disconnect(new error_code(ec, false));
  }
  public static void SwigDirector_swig_peer_plugin_on_connected(swig_peer_plugin jself) {
    jself.on_connected();
  }
  public static boolean SwigDirector_swig_peer_plugin_on_handshake(swig_peer_plugin jself, String reserved_bits) {
    return jself.on_handshake(reserved_bits);
  }
  public static boolean SwigDirector_swig_peer_plugin_on_extension_handshake(swig_peer_plugin jself, long n) {
    return jself.on_extension_handshake(new bdecode_node(n, false));
  }
  public static boolean SwigDirector_swig_peer_plugin_on_choke(swig_peer_plugin jself) {
    return jself.on_choke();
  }
  public static boolean SwigDirector_swig_peer_plugin_on_unchoke(swig_peer_plugin jself) {
    return jself.on_unchoke();
  }
  public static boolean SwigDirector_swig_peer_plugin_on_interested(swig_peer_plugin jself) {
    return jself.on_interested();
  }
  public static boolean SwigDirector_swig_peer_plugin_on_not_interested(swig_peer_plugin jself) {
    return jself.on_not_interested();
  }
  public static boolean SwigDirector_swig_peer_plugin_on_have(swig_peer_plugin jself, int index) {
    return jself.on_have(index);
  }
  public static boolean SwigDirector_swig_peer_plugin_on_dont_have(swig_peer_plugin jself, int index) {
    return jself.on_dont_have(index);
  }
  public static boolean SwigDirector_swig_peer_plugin_on_bitfield(swig_peer_plugin jself, long bitfield) {
    return jself.on_bitfield(new bitfield(bitfield, false));
  }
  public static boolean SwigDirector_swig_peer_plugin_on_have_all(swig_peer_plugin jself) {
    return jself.on_have_all();
  }
  public static boolean SwigDirector_swig_peer_plugin_on_have_none(swig_peer_plugin jself) {
    return jself.on_have_none();
  }
  public static boolean SwigDirector_swig_peer_plugin_on_allowed_fast(swig_peer_plugin jself, int index) {
    return jself.on_allowed_fast(index);
  }
  public static boolean SwigDirector_swig_peer_plugin_on_request(swig_peer_plugin jself, long r) {
    return jself.on_request(new peer_request(r, false));
  }
  public static boolean SwigDirector_swig_peer_plugin_on_piece(swig_peer_plugin jself, long piece, long data) {
    return jself.on_piece(new peer_request(piece, false), new disk_buffer_holder(data, false));
  }
  public static boolean SwigDirector_swig_peer_plugin_on_cancel(swig_peer_plugin jself, long r) {
    return jself.on_cancel(new peer_request(r, false));
  }
  public static boolean SwigDirector_swig_peer_plugin_on_reject(swig_peer_plugin jself, long r) {
    return jself.on_reject(new peer_request(r, false));
  }
  public static boolean SwigDirector_swig_peer_plugin_on_suggest(swig_peer_plugin jself, int index) {
    return jself.on_suggest(index);
  }
  public static void SwigDirector_swig_peer_plugin_sent_unchoke(swig_peer_plugin jself) {
    jself.sent_unchoke();
  }
  public static void SwigDirector_swig_peer_plugin_sent_payload(swig_peer_plugin jself, int bytes) {
    jself.sent_payload(bytes);
  }
  public static boolean SwigDirector_swig_peer_plugin_can_disconnect(swig_peer_plugin jself, long ec) {
    return jself.can_disconnect(new error_code(ec, false));
  }
  public static void SwigDirector_swig_peer_plugin_on_piece_pass(swig_peer_plugin jself, int index) {
    jself.on_piece_pass(index);
  }
  public static void SwigDirector_swig_peer_plugin_on_piece_failed(swig_peer_plugin jself, int index) {
    jself.on_piece_failed(index);
  }
  public static void SwigDirector_swig_peer_plugin_tick(swig_peer_plugin jself) {
    jself.tick();
  }
  public static boolean SwigDirector_swig_peer_plugin_write_request(swig_peer_plugin jself, long r) {
    return jself.write_request(new peer_request(r, false));
  }
  public static boolean SwigDirector_add_files_listener_pred(add_files_listener jself, String id, String p) {
    return jself.pred(id, p);
  }
  public static void SwigDirector_set_piece_hashes_listener_progress(set_piece_hashes_listener jself, String id, int num_pieces, int i) {
    jself.progress(id, num_pieces, i);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
